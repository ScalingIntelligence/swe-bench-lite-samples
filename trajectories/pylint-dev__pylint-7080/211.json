{
  "info": {
    "error": "Traceback (most recent call last):\n  File \"/workspace/moatless/moatless-tools/driver/run_moatless.py\", line 89, in run_moatless_core\n    response = loop.run(problem_statement)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/workspace/moatless/moatless-tools/moatless/loop.py\", line 198, in run\n    raise RuntimeError(\nRuntimeError: The loop was aborted because the cost exceeded the limit.\n",
    "duration": 333.5514602661133,
    "submission": "",
    "total_cost": 0.6061289999999999,
    "instance_id": "pylint-dev__pylint-7080",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue is related to the `ignore-paths` configuration in the `pyproject.toml` file not being respected when running Pylint recursively with the `--recursive=y` option. The goal is to find the part of the Pylint configuration or logic that handles the recursive checking and the ignoring of certain paths. The configuration is defined within the `pyproject.toml` file, and the relevant option is `ignore-paths`. The usage of `--recursive=y` suggests that the recursive checking might not be correctly considering the `ignore-paths` directive. We need to look for the code parts related to recursive directory traversal and path exclusion in the Pylint codebase.",
            "search_requests": [
              {
                "query": "recursive directory traversal ignore paths",
                "class_names": [],
                "code_snippet": "ignore-paths",
                "file_pattern": "pylint/**/*.py",
                "function_names": []
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 468,
                "span_id": "docstring",
                "file_path": "pylint/utils/utils.py"
              },
              {
                "rank": 0,
                "tokens": 69,
                "span_id": "normalize_text",
                "file_path": "pylint/utils/utils.py"
              },
              {
                "rank": 0,
                "tokens": 17,
                "span_id": "impl:28",
                "file_path": "pylint/utils/utils.py"
              },
              {
                "rank": 0,
                "tokens": 28,
                "span_id": "cmp",
                "file_path": "pylint/utils/utils.py"
              },
              {
                "rank": 0,
                "tokens": 74,
                "span_id": "diff_string",
                "file_path": "pylint/utils/utils.py"
              },
              {
                "rank": 0,
                "tokens": 99,
                "span_id": "get_module_and_frameid",
                "file_path": "pylint/utils/utils.py"
              },
              {
                "rank": 0,
                "tokens": 56,
                "span_id": "get_rst_title",
                "file_path": "pylint/utils/utils.py"
              }
            ],
            "search_requests": [
              {
                "query": "recursive directory traversal ignore paths",
                "class_names": [],
                "code_snippet": "ignore-paths",
                "file_pattern": "pylint/**/*.py",
                "function_names": []
              }
            ]
          },
          "input_tokens": 12075,
          "output_tokens": 220,
          "retry_message": null,
          "completion_cost": 0.039525
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 468,
            "span_id": "docstring",
            "file_path": "pylint/utils/utils.py"
          },
          {
            "rank": 0,
            "tokens": 69,
            "span_id": "normalize_text",
            "file_path": "pylint/utils/utils.py"
          },
          {
            "rank": 0,
            "tokens": 17,
            "span_id": "impl:28",
            "file_path": "pylint/utils/utils.py"
          },
          {
            "rank": 0,
            "tokens": 28,
            "span_id": "cmp",
            "file_path": "pylint/utils/utils.py"
          },
          {
            "rank": 0,
            "tokens": 74,
            "span_id": "diff_string",
            "file_path": "pylint/utils/utils.py"
          },
          {
            "rank": 0,
            "tokens": 99,
            "span_id": "get_module_and_frameid",
            "file_path": "pylint/utils/utils.py"
          },
          {
            "rank": 0,
            "tokens": 56,
            "span_id": "get_rst_title",
            "file_path": "pylint/utils/utils.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue is about the `ignore-paths` configuration in `pyproject.toml` being ignored when using the `--recursive=y` option with Pylint. The search results include a section of the `pylint/utils/utils.py` file which contains definitions and functions related to global options and pattern lists. Specifically, the `get_global_option` function and the `GLOBAL_OPTION_PATTERN_LIST` literal could be relevant as they deal with handling options like `ignore-paths`. Additionally, the `_ini_format` function is also promising as it deals with formatting options and could potentially be where the `ignore-paths` option is processed or where it might be getting ignored. This aligns with the issue reported, making this file potentially relevant.",
            "identified_spans": [
              {
                "span_ids": [
                  "docstring",
                  "normalize_text",
                  "get_global_option",
                  "get_global_option_10",
                  "get_global_option_11",
                  "get_global_option_12",
                  "get_global_option_13",
                  "get_global_option_14",
                  "get_global_option_15",
                  "_ini_format"
                ],
                "file_path": "pylint/utils/utils.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 12284,
          "output_tokens": 325,
          "retry_message": null,
          "completion_cost": 0.041727
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": false,
            "scratch_pad": "The file context provided is from pylint/utils/utils.py, which contains utility functions and helpers for Pylint. While it includes functions related to options handling and formatting, it does not directly address the logic for directory traversal and path exclusion during recursive checks. This context is not sufficient to determine if the `--recursive=y` option correctly respects the `ignore-paths` configuration from `pyproject.toml`. It would be necessary to look into the part of Pylint's codebase that handles the recursive directory scanning and the application of `ignore-paths`.",
            "search_suggestions": "Look for files in Pylint's codebase that are responsible for recursive directory scanning and the application of `ignore-paths`. Files to inspect might include those related to the Linter class or any class/function that directly interacts with directory traversal algorithms."
          },
          "output": {
            "message": "Look for files in Pylint's codebase that are responsible for recursive directory scanning and the application of `ignore-paths`. Files to inspect might include those related to the Linter class or any class/function that directly interacts with directory traversal algorithms."
          },
          "input_tokens": 12168,
          "output_tokens": 209,
          "retry_message": null,
          "completion_cost": 0.039639
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Look for files in Pylint's codebase that are responsible for recursive directory scanning and the application of `ignore-paths`. Files to inspect might include those related to the Linter class or any class/function that directly interacts with directory traversal algorithms.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "Searching for files related to recursive directory scanning and handling of ignore-paths in Pylint's codebase.",
            "search_requests": [
              {
                "query": "recursive directory traversal",
                "class_names": [
                  "Linter"
                ],
                "code_snippet": "os.walk",
                "file_pattern": "pylint/**/*.py",
                "function_names": []
              },
              {
                "query": "ignore-paths",
                "class_names": [],
                "code_snippet": "ignore-paths",
                "file_pattern": "pylint/**/*.py",
                "function_names": []
              },
              {
                "query": "directory scanning",
                "class_names": [],
                "code_snippet": "os.listdir",
                "file_pattern": "pylint/**/*.py",
                "function_names": []
              },
              {
                "query": "configuration options",
                "class_names": [],
                "code_snippet": "pyproject.toml",
                "file_pattern": "pylint/**/*.py",
                "function_names": []
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 210,
                "span_id": "register_plugins",
                "file_path": "pylint/utils/utils.py"
              },
              {
                "rank": 0,
                "tokens": 144,
                "span_id": "docstring",
                "file_path": "pylint/config/find_default_config_files.py"
              },
              {
                "rank": 0,
                "tokens": 78,
                "span_id": "_toml_has_config",
                "file_path": "pylint/config/find_default_config_files.py"
              },
              {
                "rank": 0,
                "tokens": 53,
                "span_id": "_cfg_has_config",
                "file_path": "pylint/config/find_default_config_files.py"
              }
            ],
            "search_requests": [
              {
                "query": "recursive directory traversal",
                "class_names": [
                  "Linter"
                ],
                "code_snippet": "os.walk",
                "file_pattern": "pylint/**/*.py",
                "function_names": []
              },
              {
                "query": "ignore-paths",
                "class_names": [],
                "code_snippet": "ignore-paths",
                "file_pattern": "pylint/**/*.py",
                "function_names": []
              },
              {
                "query": "directory scanning",
                "class_names": [],
                "code_snippet": "os.listdir",
                "file_pattern": "pylint/**/*.py",
                "function_names": []
              },
              {
                "query": "configuration options",
                "class_names": [],
                "code_snippet": "pyproject.toml",
                "file_pattern": "pylint/**/*.py",
                "function_names": []
              }
            ]
          },
          "input_tokens": 15098,
          "output_tokens": 385,
          "retry_message": null,
          "completion_cost": 0.051069
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 210,
            "span_id": "register_plugins",
            "file_path": "pylint/utils/utils.py"
          },
          {
            "rank": 0,
            "tokens": 144,
            "span_id": "docstring",
            "file_path": "pylint/config/find_default_config_files.py"
          },
          {
            "rank": 0,
            "tokens": 78,
            "span_id": "_toml_has_config",
            "file_path": "pylint/config/find_default_config_files.py"
          },
          {
            "rank": 0,
            "tokens": 53,
            "span_id": "_cfg_has_config",
            "file_path": "pylint/config/find_default_config_files.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue is about `ignore-paths` being ignored when running pylint recursively with the `--recursive=y` flag. The user has configured `ignore-paths` in their `pyproject.toml` to ignore files under `src/gen/`, but this configuration is not working as expected. This suggests that the problem might be in how pylint handles the `ignore-paths` configuration when the recursive option is used. From the provided search results, the most relevant code spans seem to be in `pylint/utils/utils.py`, specifically the `get_global_option` function and its overloads, which are used to fetch global options like `ignore-paths`. Additionally, the `register_plugins` function in the same file might be relevant as it deals with loading modules, which could be related to how paths are handled recursively. Furthermore, in `pylint/config/find_default_config_files.py`, the `_toml_has_config` and `_cfg_has_config` functions might also be relevant as they deal with reading configuration files, including `pyproject.toml`. These functions might provide insights into how the `ignore-paths` setting is parsed and processed, which could be crucial for understanding why it's being ignored in the recursive scenario.",
            "identified_spans": [
              {
                "span_ids": [
                  "get_global_option",
                  "get_global_option_10",
                  "get_global_option_11",
                  "get_global_option_12",
                  "get_global_option_13",
                  "get_global_option_14",
                  "get_global_option_15",
                  "register_plugins"
                ],
                "file_path": "pylint/utils/utils.py"
              },
              {
                "span_ids": [
                  "_toml_has_config",
                  "_cfg_has_config"
                ],
                "file_path": "pylint/config/find_default_config_files.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 12997,
          "output_tokens": 482,
          "retry_message": null,
          "completion_cost": 0.046221
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The file context provided contains significant portions of the Pylint codebase, particularly related to configuration handling and file parsing. There are multiple functions and utilities that deal with reading configuration files, including handling of `.toml` and `.cfg` files. Key functions like `register_plugins`, `get_global_option`, and `_ini_format` show how Pylint might handle and apply configuration options globally. However, to fully evaluate the issue of `--recursive=y` ignoring `ignore-paths`, more specific context is needed around how the recursive directory scanning and ignore-paths logic are implemented within these configurations, particularly focusing on where and how these options are processed and applied during the linting process.",
            "search_suggestions": "Search for the implementation of recursive directory scanning and the processing of 'ignore-paths' directives within the Pylint codebase. Look for specific functions or methods related to applying configuration options during the linting process, especially in relation to directory traversal and file inclusion/exclusion based on the ignore-paths pattern."
          },
          "output": {
            "message": "Search for the implementation of recursive directory scanning and the processing of 'ignore-paths' directives within the Pylint codebase. Look for specific functions or methods related to applying configuration options during the linting process, especially in relation to directory traversal and file inclusion/exclusion based on the ignore-paths pattern."
          },
          "input_tokens": 12573,
          "output_tokens": 245,
          "retry_message": null,
          "completion_cost": 0.041394
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Search for the implementation of recursive directory scanning and the processing of 'ignore-paths' directives within the Pylint codebase. Look for specific functions or methods related to applying configuration options during the linting process, especially in relation to directory traversal and file inclusion/exclusion based on the ignore-paths pattern.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The file context provided includes `utils.py` and `find_default_config_files.py` from the Pylint codebase. The `get_global_option` function in `utils.py` is likely related to configuration options handling, and the `_toml_has_config` and `_cfg_has_config` functions in `find_default_config_files.py` are relevant for checking the presence of configuration in `.toml` and `.cfg` files. However, more files and specific functions related to recursive directory scanning and `ignore-paths` application are needed. Based on the description of the issue, we should focus on files dealing with directory traversal and configuration processing.",
            "search_requests": [
              {
                "query": "recursive directory traversal",
                "class_names": [
                  "Linter"
                ],
                "code_snippet": "os.walk",
                "file_pattern": "pylint/**/*.py",
                "function_names": [
                  "register_plugins"
                ]
              },
              {
                "query": "ignore-paths",
                "class_names": [],
                "code_snippet": "ignore-paths",
                "file_pattern": "pylint/**/*.py",
                "function_names": [
                  "get_global_option"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 210,
                "span_id": "register_plugins",
                "file_path": "pylint/utils/utils.py"
              }
            ],
            "search_requests": [
              {
                "query": "recursive directory traversal",
                "class_names": [
                  "Linter"
                ],
                "code_snippet": "os.walk",
                "file_pattern": "pylint/**/*.py",
                "function_names": [
                  "register_plugins"
                ]
              },
              {
                "query": "ignore-paths",
                "class_names": [],
                "code_snippet": "ignore-paths",
                "file_pattern": "pylint/**/*.py",
                "function_names": [
                  "get_global_option"
                ]
              }
            ]
          },
          "input_tokens": 15350,
          "output_tokens": 330,
          "retry_message": null,
          "completion_cost": 0.051000000000000004
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 210,
            "span_id": "register_plugins",
            "file_path": "pylint/utils/utils.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue is about the `ignore-paths` option in `pyproject.toml` being ignored when running Pylint recursively. The issue specifically mentions that directories like `src/gen/` should be ignored but are still being checked. Given the context, I need to identify code spans related to handling the `--recursive` option and the `ignore-paths` configuration.\n\nIn the provided search results, there's a function `register_plugins` in `pylint/utils/utils.py` that is responsible for registering plugins. This function iterates over files in a directory and attempts to load modules to register them with the linter. However, this function does not explicitly handle the `ignore-paths` configuration or the `--recursive` option. Thus, this function alone does not directly relate to the reported issue.\n\nCurrently, there are no identified spans that directly address the reported issue. Therefore, further investigation or additional search results related to handling `ignore-paths` and `--recursive` options are needed to resolve the issue.",
            "identified_spans": []
          },
          "output": {
            "message": "The search returned 1 results. But unfortunately, I didn\u2019t find any of the search results relevant to the query.\n\nThe reported issue is about the `ignore-paths` option in `pyproject.toml` being ignored when running Pylint recursively. The issue specifically mentions that directories like `src/gen/` should be ignored but are still being checked. Given the context, I need to identify code spans related to handling the `--recursive` option and the `ignore-paths` configuration.\n\nIn the provided search results, there's a function `register_plugins` in `pylint/utils/utils.py` that is responsible for registering plugins. This function iterates over files in a directory and attempts to load modules to register them with the linter. However, this function does not explicitly handle the `ignore-paths` configuration or the `--recursive` option. Thus, this function alone does not directly relate to the reported issue.\n\nCurrently, there are no identified spans that directly address the reported issue. Therefore, further investigation or additional search results related to handling `ignore-paths` and `--recursive` options are needed to resolve the issue."
          },
          "input_tokens": 13211,
          "output_tokens": 237,
          "retry_message": null,
          "completion_cost": 0.043188000000000004
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "The search returned 1 results. But unfortunately, I didn\u2019t find any of the search results relevant to the query.\n\nThe reported issue is about the `ignore-paths` option in `pyproject.toml` being ignored when running Pylint recursively. The issue specifically mentions that directories like `src/gen/` should be ignored but are still being checked. Given the context, I need to identify code spans related to handling the `--recursive` option and the `ignore-paths` configuration.\n\nIn the provided search results, there's a function `register_plugins` in `pylint/utils/utils.py` that is responsible for registering plugins. This function iterates over files in a directory and attempts to load modules to register them with the linter. However, this function does not explicitly handle the `ignore-paths` configuration or the `--recursive` option. Thus, this function alone does not directly relate to the reported issue.\n\nCurrently, there are no identified spans that directly address the reported issue. Therefore, further investigation or additional search results related to handling `ignore-paths` and `--recursive` options are needed to resolve the issue.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "To resolve the issue of `ignore-paths` being ignored during recursive linting, we need to focus on the parts of the code that handle directory traversal and configuration options. Specific attention should be given to how Pylint processes directories and applies configuration settings from files like `pyproject.toml`.",
            "search_requests": [
              {
                "query": "recursive directory traversal",
                "class_names": [
                  "Linter",
                  "BaseChecker"
                ],
                "code_snippet": "os.walk",
                "file_pattern": "pylint/**/*.py",
                "function_names": [
                  "get_global_option",
                  "register_plugins"
                ]
              },
              {
                "query": "configuration options",
                "class_names": [],
                "code_snippet": "ignore-paths",
                "file_pattern": "pylint/**/*.py",
                "function_names": [
                  "get_global_option"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 99,
                "span_id": "BaseChecker",
                "file_path": "pylint/checkers/base_checker.py"
              },
              {
                "rank": 0,
                "tokens": 33,
                "span_id": "get_global_option",
                "file_path": "pylint/utils/utils.py"
              },
              {
                "rank": 0,
                "tokens": 210,
                "span_id": "register_plugins",
                "file_path": "pylint/utils/utils.py"
              }
            ],
            "search_requests": [
              {
                "query": "recursive directory traversal",
                "class_names": [
                  "Linter",
                  "BaseChecker"
                ],
                "code_snippet": "os.walk",
                "file_pattern": "pylint/**/*.py",
                "function_names": [
                  "get_global_option",
                  "register_plugins"
                ]
              },
              {
                "query": "configuration options",
                "class_names": [],
                "code_snippet": "ignore-paths",
                "file_pattern": "pylint/**/*.py",
                "function_names": [
                  "get_global_option"
                ]
              }
            ]
          },
          "input_tokens": 15930,
          "output_tokens": 424,
          "retry_message": null,
          "completion_cost": 0.05415
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 99,
            "span_id": "BaseChecker",
            "file_path": "pylint/checkers/base_checker.py"
          },
          {
            "rank": 0,
            "tokens": 33,
            "span_id": "get_global_option",
            "file_path": "pylint/utils/utils.py"
          },
          {
            "rank": 0,
            "tokens": 210,
            "span_id": "register_plugins",
            "file_path": "pylint/utils/utils.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue indicates that the `--recursive=y` flag is causing Pylint to ignore the `ignore-paths` configuration specified in `pyproject.toml`. The user's configuration specifies an ignore-path pattern for directories under `src/gen/`. The Pylint output shows that files under `src/gen/` are being checked, which indicates the ignore-paths setting is not working. The search results include a section from `pylint/utils/utils.py` that defines `get_global_option`, which is relevant for retrieving global options such as 'ignore-paths'. Additionally, 'register_plugins' is shown, which is likely used for plugin registration where file path handling could be relevant. The search results also include the `BaseChecker` class definition and its initialization, which are central to how Pylint handles checkers and could include logic related to the handling of 'ignore-paths'. Overall, these results are relevant to address the issue by providing the core functionalities around option handling and plugin registration, where paths might be disregarded or not properly respected. This should help in identifying where the recursive handling might be overriding or not correctly following the 'ignore-paths' configuration.",
            "identified_spans": [
              {
                "span_ids": [
                  "register_plugins",
                  "get_global_option"
                ],
                "file_path": "pylint/utils/utils.py"
              },
              {
                "span_ids": [
                  "BaseChecker",
                  "BaseChecker.__init__"
                ],
                "file_path": "pylint/checkers/base_checker.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 14035,
          "output_tokens": 380,
          "retry_message": null,
          "completion_cost": 0.047805
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": false,
            "scratch_pad": "From the provided file context, it appears that Pylint's configuration handling and directory traversal logic might be spread across several files, including `pylint/utils/utils.py`, `pylint/config/find_default_config_files.py`, and `pylint/checkers/base_checker.py`. The issue report suggests that the `ignore-paths` setting is not functioning correctly when using the `--recursive=y` flag, implying a possible bug in the directory traversal or configuration application logic. However, the provided file context does not directly contain the logic responsible for handling the `--recursive` flag or applying the `ignore-paths` configuration during directory traversal. Therefore, while the context gives insights into Pylint's general configuration handling, it does not cover the specific part of the codebase that would need to be examined to address the reported bug.",
            "search_suggestions": "Look for the code responsible for handling the `--recursive` flag and applying `ignore-paths` during directory traversal in Pylint's codebase. This might involve examining files related to directory traversal and configuration application."
          },
          "output": {
            "message": "Look for the code responsible for handling the `--recursive` flag and applying `ignore-paths` during directory traversal in Pylint's codebase. This might involve examining files related to directory traversal and configuration application."
          },
          "input_tokens": 12898,
          "output_tokens": 266,
          "retry_message": null,
          "completion_cost": 0.042684
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Look for the code responsible for handling the `--recursive` flag and applying `ignore-paths` during directory traversal in Pylint's codebase. This might involve examining files related to directory traversal and configuration application.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The provided code context does not directly address the issue of `ignore-paths` being ignored when using the `--recursive` flag in Pylint. The functions `register_plugins` and `get_global_option` in `pylint/utils/utils.py` are not responsible for handling directory traversal or applying `ignore-paths`. Similarly, the functions `_toml_has_config` and `_cfg_has_config` in `find_default_config_files.py` are related to checking configuration files, not applying configurations like `ignore-paths`. The `BaseChecker` class in `pylint/checkers/base_checker.py` is a base class for checkers but does not directly relate to directory traversal or configuration application. To resolve the issue, we need to look deeper into Pylint's codebase, focusing on files that handle directory-level operations and configuration application.",
            "search_requests": [
              {
                "query": "recursive directory traversal ignore-paths",
                "class_names": [
                  "Linter"
                ],
                "code_snippet": "ignore-paths",
                "file_pattern": "pylint/**/*.py",
                "function_names": [
                  "process_directory",
                  "apply_configs"
                ]
              }
            ]
          },
          "output": null,
          "input_tokens": 16526,
          "output_tokens": 314,
          "retry_message": "\n\nUnfortunately, I didn\u2019t find any relevant results.",
          "completion_cost": 0.054288
        },
        {
          "action": {
            "complete": false,
            "scratch_pad": "Despite searching through the files and functions related to directory traversal and configuration application, relevant code sections that handle the `--recursive` flag and apply `ignore-paths` settings were not found. The issue might be deeper within the Pylint codebase, possibly involving interactions between different components that are not immediately apparent. To resolve the issue, further investigation into the architecture and interaction of components related to directory scanning and configuration handling is necessary.",
            "search_requests": [
              {
                "query": "directory traversal configuration",
                "class_names": [
                  "Linter"
                ],
                "code_snippet": "",
                "file_pattern": "pylint/**/*.py",
                "function_names": [
                  "register"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 1,
                "tokens": 32,
                "span_id": "register",
                "file_path": "pylint/checkers/classes/__init__.py"
              },
              {
                "rank": 2,
                "tokens": 73,
                "span_id": "register",
                "file_path": "pylint/checkers/base/__init__.py"
              },
              {
                "rank": 9,
                "tokens": 57,
                "span_id": "register",
                "file_path": "pylint/checkers/refactoring/__init__.py"
              },
              {
                "rank": 21,
                "tokens": 22,
                "span_id": "register",
                "file_path": "pylint/checkers/similar.py"
              },
              {
                "rank": 54,
                "tokens": 22,
                "span_id": "register",
                "file_path": "pylint/checkers/format.py"
              },
              {
                "rank": 28,
                "tokens": 33,
                "span_id": "register",
                "file_path": "pylint/checkers/misc.py"
              },
              {
                "rank": 36,
                "tokens": 25,
                "span_id": "register",
                "file_path": "pylint/extensions/mccabe.py"
              },
              {
                "rank": 50,
                "tokens": 23,
                "span_id": "register",
                "file_path": "pylint/checkers/raw_metrics.py"
              },
              {
                "rank": 53,
                "tokens": 24,
                "span_id": "register",
                "file_path": "pylint/extensions/docstyle.py"
              },
              {
                "rank": 62,
                "tokens": 23,
                "span_id": "register",
                "file_path": "pylint/checkers/spelling.py"
              },
              {
                "rank": 64,
                "tokens": 24,
                "span_id": "register",
                "file_path": "pylint/extensions/bad_builtin.py"
              },
              {
                "rank": 67,
                "tokens": 24,
                "span_id": "register",
                "file_path": "pylint/extensions/comparetozero.py"
              },
              {
                "rank": 72,
                "tokens": 24,
                "span_id": "register",
                "file_path": "pylint/extensions/broad_try_clause.py"
              },
              {
                "rank": 73,
                "tokens": 23,
                "span_id": "register",
                "file_path": "pylint/checkers/modified_iterating_checker.py"
              },
              {
                "rank": 76,
                "tokens": 26,
                "span_id": "register",
                "file_path": "pylint/checkers/non_ascii_names.py"
              },
              {
                "rank": 87,
                "tokens": 26,
                "span_id": "register",
                "file_path": "pylint/checkers/unicode.py"
              },
              {
                "rank": 78,
                "tokens": 25,
                "span_id": "register",
                "file_path": "pylint/extensions/redefined_loop_name.py"
              },
              {
                "rank": 79,
                "tokens": 22,
                "span_id": "register",
                "file_path": "pylint/checkers/logging.py"
              },
              {
                "rank": 85,
                "tokens": 23,
                "span_id": "register",
                "file_path": "pylint/checkers/threading_checker.py"
              },
              {
                "rank": 88,
                "tokens": 50,
                "span_id": "register",
                "file_path": "pylint/reporters/text.py"
              },
              {
                "rank": 91,
                "tokens": 23,
                "span_id": "register",
                "file_path": "pylint/checkers/lambda_expressions.py"
              },
              {
                "rank": 92,
                "tokens": 24,
                "span_id": "register",
                "file_path": "pylint/extensions/check_elif.py"
              },
              {
                "rank": 93,
                "tokens": 23,
                "span_id": "register",
                "file_path": "pylint/extensions/redefined_variable_type.py"
              },
              {
                "rank": 94,
                "tokens": 22,
                "span_id": "register",
                "file_path": "pylint/checkers/imports.py"
              },
              {
                "rank": 119,
                "tokens": 22,
                "span_id": "register",
                "file_path": "pylint/extensions/code_style.py"
              },
              {
                "rank": 135,
                "tokens": 24,
                "span_id": "register",
                "file_path": "pylint/extensions/no_self_use.py"
              }
            ],
            "search_requests": [
              {
                "query": "directory traversal configuration",
                "class_names": [
                  "Linter"
                ],
                "code_snippet": "",
                "file_pattern": "pylint/**/*.py",
                "function_names": [
                  "register"
                ]
              }
            ]
          },
          "input_tokens": 16858,
          "output_tokens": 191,
          "retry_message": null,
          "completion_cost": 0.053439
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 1,
            "tokens": 32,
            "span_id": "register",
            "file_path": "pylint/checkers/classes/__init__.py"
          },
          {
            "rank": 2,
            "tokens": 73,
            "span_id": "register",
            "file_path": "pylint/checkers/base/__init__.py"
          },
          {
            "rank": 9,
            "tokens": 57,
            "span_id": "register",
            "file_path": "pylint/checkers/refactoring/__init__.py"
          },
          {
            "rank": 21,
            "tokens": 22,
            "span_id": "register",
            "file_path": "pylint/checkers/similar.py"
          },
          {
            "rank": 54,
            "tokens": 22,
            "span_id": "register",
            "file_path": "pylint/checkers/format.py"
          },
          {
            "rank": 28,
            "tokens": 33,
            "span_id": "register",
            "file_path": "pylint/checkers/misc.py"
          },
          {
            "rank": 36,
            "tokens": 25,
            "span_id": "register",
            "file_path": "pylint/extensions/mccabe.py"
          },
          {
            "rank": 50,
            "tokens": 23,
            "span_id": "register",
            "file_path": "pylint/checkers/raw_metrics.py"
          },
          {
            "rank": 53,
            "tokens": 24,
            "span_id": "register",
            "file_path": "pylint/extensions/docstyle.py"
          },
          {
            "rank": 62,
            "tokens": 23,
            "span_id": "register",
            "file_path": "pylint/checkers/spelling.py"
          },
          {
            "rank": 64,
            "tokens": 24,
            "span_id": "register",
            "file_path": "pylint/extensions/bad_builtin.py"
          },
          {
            "rank": 67,
            "tokens": 24,
            "span_id": "register",
            "file_path": "pylint/extensions/comparetozero.py"
          },
          {
            "rank": 72,
            "tokens": 24,
            "span_id": "register",
            "file_path": "pylint/extensions/broad_try_clause.py"
          },
          {
            "rank": 73,
            "tokens": 23,
            "span_id": "register",
            "file_path": "pylint/checkers/modified_iterating_checker.py"
          },
          {
            "rank": 76,
            "tokens": 26,
            "span_id": "register",
            "file_path": "pylint/checkers/non_ascii_names.py"
          },
          {
            "rank": 87,
            "tokens": 26,
            "span_id": "register",
            "file_path": "pylint/checkers/unicode.py"
          },
          {
            "rank": 78,
            "tokens": 25,
            "span_id": "register",
            "file_path": "pylint/extensions/redefined_loop_name.py"
          },
          {
            "rank": 79,
            "tokens": 22,
            "span_id": "register",
            "file_path": "pylint/checkers/logging.py"
          },
          {
            "rank": 85,
            "tokens": 23,
            "span_id": "register",
            "file_path": "pylint/checkers/threading_checker.py"
          },
          {
            "rank": 88,
            "tokens": 50,
            "span_id": "register",
            "file_path": "pylint/reporters/text.py"
          },
          {
            "rank": 91,
            "tokens": 23,
            "span_id": "register",
            "file_path": "pylint/checkers/lambda_expressions.py"
          },
          {
            "rank": 92,
            "tokens": 24,
            "span_id": "register",
            "file_path": "pylint/extensions/check_elif.py"
          },
          {
            "rank": 93,
            "tokens": 23,
            "span_id": "register",
            "file_path": "pylint/extensions/redefined_variable_type.py"
          },
          {
            "rank": 94,
            "tokens": 22,
            "span_id": "register",
            "file_path": "pylint/checkers/imports.py"
          },
          {
            "rank": 119,
            "tokens": 22,
            "span_id": "register",
            "file_path": "pylint/extensions/code_style.py"
          },
          {
            "rank": 135,
            "tokens": 24,
            "span_id": "register",
            "file_path": "pylint/extensions/no_self_use.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "`--recursive=y` ignores `ignore-paths`\n### Bug description\r\n\r\nWhen running recursively, it seems `ignore-paths` in my settings in pyproject.toml is completely ignored\r\n\r\n### Configuration\r\n\r\n```ini\r\n[tool.pylint.MASTER]\r\nignore-paths = [\r\n  # Auto generated\r\n  \"^src/gen/.*$\",\r\n]\r\n```\r\n\r\n\r\n### Command used\r\n\r\n```shell\r\npylint --recursive=y src/\r\n```\r\n\r\n\r\n### Pylint output\r\n\r\n```shell\r\n************* Module region_selection\r\nsrc\\region_selection.py:170:0: R0914: Too many local variables (17/15) (too-many-locals)\r\n************* Module about\r\nsrc\\gen\\about.py:2:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\about.py:4:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\about.py:57:0: C0301: Line too long (504/120) (line-too-long)\r\nsrc\\gen\\about.py:12:0: C0103: Class name \"Ui_AboutAutoSplitWidget\" doesn't conform to '_?_?[a-zA-Z]+?$' pattern (invalid-name)\r\nsrc\\gen\\about.py:12:0: R0205: Class 'Ui_AboutAutoSplitWidget' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)\r\nsrc\\gen\\about.py:13:4: C0103: Method name \"setupUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\about.py:13:22: C0103: Argument name \"AboutAutoSplitWidget\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\about.py:53:4: C0103: Method name \"retranslateUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\about.py:53:28: C0103: Argument name \"AboutAutoSplitWidget\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\about.py:24:8: W0201: Attribute 'ok_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\about.py:27:8: W0201: Attribute 'created_by_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\about.py:30:8: W0201: Attribute 'version_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\about.py:33:8: W0201: Attribute 'donate_text_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\about.py:37:8: W0201: Attribute 'donate_button_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\about.py:43:8: W0201: Attribute 'icon_label' defined outside __init__ (attribute-defined-outside-init)\r\n************* Module design\r\nsrc\\gen\\design.py:2:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\design.py:4:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\design.py:328:0: C0301: Line too long (123/120) (line-too-long)\r\nsrc\\gen\\design.py:363:0: C0301: Line too long (125/120) (line-too-long)\r\nsrc\\gen\\design.py:373:0: C0301: Line too long (121/120) (line-too-long)\r\nsrc\\gen\\design.py:412:0: C0301: Line too long (131/120) (line-too-long)\r\nsrc\\gen\\design.py:12:0: C0103: Class name \"Ui_MainWindow\" doesn't conform to '_?_?[a-zA-Z]+?$' pattern (invalid-name)\r\nsrc\\gen\\design.py:308:8: C0103: Attribute name \"actionSplit_Settings\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:318:8: C0103: Attribute name \"actionCheck_for_Updates_on_Open\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:323:8: C0103: Attribute name \"actionLoop_Last_Split_Image_To_First_Image\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:325:8: C0103: Attribute name \"actionAuto_Start_On_Reset\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:327:8: C0103: Attribute name \"actionGroup_dummy_splits_when_undoing_skipping\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:12:0: R0205: Class 'Ui_MainWindow' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)\r\nsrc\\gen\\design.py:12:0: R0902: Too many instance attributes (69/15) (too-many-instance-attributes)\r\nsrc\\gen\\design.py:13:4: C0103: Method name \"setupUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:13:22: C0103: Argument name \"MainWindow\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:16:8: C0103: Variable name \"sizePolicy\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:13:4: R0915: Too many statements (339/50) (too-many-statements)\r\nsrc\\gen\\design.py:354:4: C0103: Method name \"retranslateUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:354:28: C0103: Argument name \"MainWindow\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:354:4: R0915: Too many statements (61/50) (too-many-statements)\r\nsrc\\gen\\design.py:31:8: W0201: Attribute 'central_widget' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:33:8: W0201: Attribute 'x_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:36:8: W0201: Attribute 'select_region_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:40:8: W0201: Attribute 'start_auto_splitter_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:44:8: W0201: Attribute 'reset_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:49:8: W0201: Attribute 'undo_split_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:54:8: W0201: Attribute 'skip_split_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:59:8: W0201: Attribute 'check_fps_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:63:8: W0201: Attribute 'fps_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:66:8: W0201: Attribute 'live_image' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:75:8: W0201: Attribute 'current_split_image' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:81:8: W0201: Attribute 'current_image_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:85:8: W0201: Attribute 'width_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:88:8: W0201: Attribute 'height_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:91:8: W0201: Attribute 'fps_value_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:95:8: W0201: Attribute 'width_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:101:8: W0201: Attribute 'height_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:107:8: W0201: Attribute 'capture_region_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:111:8: W0201: Attribute 'current_image_file_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:115:8: W0201: Attribute 'take_screenshot_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:119:8: W0201: Attribute 'x_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:128:8: W0201: Attribute 'y_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:136:8: W0201: Attribute 'y_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:139:8: W0201: Attribute 'align_region_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:143:8: W0201: Attribute 'select_window_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:147:8: W0201: Attribute 'browse_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:151:8: W0201: Attribute 'split_image_folder_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:154:8: W0201: Attribute 'split_image_folder_input' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:158:8: W0201: Attribute 'capture_region_window_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:162:8: W0201: Attribute 'image_loop_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:165:8: W0201: Attribute 'similarity_viewer_groupbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:169:8: W0201: Attribute 'table_live_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:173:8: W0201: Attribute 'table_highest_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:177:8: W0201: Attribute 'table_threshold_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:181:8: W0201: Attribute 'line_1' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:186:8: W0201: Attribute 'table_current_image_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:189:8: W0201: Attribute 'table_reset_image_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:192:8: W0201: Attribute 'line_2' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:197:8: W0201: Attribute 'line_3' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:202:8: W0201: Attribute 'line_4' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:207:8: W0201: Attribute 'line_5' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:212:8: W0201: Attribute 'table_current_image_live_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:216:8: W0201: Attribute 'table_current_image_highest_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:220:8: W0201: Attribute 'table_current_image_threshold_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:224:8: W0201: Attribute 'table_reset_image_live_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:228:8: W0201: Attribute 'table_reset_image_highest_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:232:8: W0201: Attribute 'table_reset_image_threshold_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:236:8: W0201: Attribute 'reload_start_image_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:240:8: W0201: Attribute 'start_image_status_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:243:8: W0201: Attribute 'start_image_status_value_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:246:8: W0201: Attribute 'image_loop_value_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:249:8: W0201: Attribute 'previous_image_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:254:8: W0201: Attribute 'next_image_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:296:8: W0201: Attribute 'menu_bar' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:299:8: W0201: Attribute 'menu_help' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:301:8: W0201: Attribute 'menu_file' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:304:8: W0201: Attribute 'action_view_help' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:306:8: W0201: Attribute 'action_about' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:308:8: W0201: Attribute 'actionSplit_Settings' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:310:8: W0201: Attribute 'action_save_profile' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:312:8: W0201: Attribute 'action_load_profile' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:314:8: W0201: Attribute 'action_save_profile_as' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:316:8: W0201: Attribute 'action_check_for_updates' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:318:8: W0201: Attribute 'actionCheck_for_Updates_on_Open' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:323:8: W0201: Attribute 'actionLoop_Last_Split_Image_To_First_Image' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:325:8: W0201: Attribute 'actionAuto_Start_On_Reset' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:327:8: W0201: Attribute 'actionGroup_dummy_splits_when_undoing_skipping' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:329:8: W0201: Attribute 'action_settings' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:331:8: W0201: Attribute 'action_check_for_updates_on_open' defined outside __init__ (attribute-defined-outside-init)\r\n************* Module resources_rc\r\nsrc\\gen\\resources_rc.py:1:0: C0302: Too many lines in module (2311/1000) (too-many-lines)\r\nsrc\\gen\\resources_rc.py:8:0: C0103: Constant name \"qt_resource_data\" doesn't conform to UPPER_CASE naming style (invalid-name)\r\nsrc\\gen\\resources_rc.py:2278:0: C0103: Constant name \"qt_resource_name\" doesn't conform to UPPER_CASE naming style (invalid-name)\r\nsrc\\gen\\resources_rc.py:2294:0: C0103: Constant name \"qt_resource_struct\" doesn't conform to UPPER_CASE naming style (invalid-name)\r\nsrc\\gen\\resources_rc.py:2305:0: C0103: Function name \"qInitResources\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\resources_rc.py:2308:0: C0103: Function name \"qCleanupResources\" doesn't conform to snake_case naming style (invalid-name)\r\n************* Module settings\r\nsrc\\gen\\settings.py:2:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\settings.py:4:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\settings.py:61:0: C0301: Line too long (158/120) (line-too-long)\r\nsrc\\gen\\settings.py:123:0: C0301: Line too long (151/120) (line-too-long)\r\nsrc\\gen\\settings.py:209:0: C0301: Line too long (162/120) (line-too-long)\r\nsrc\\gen\\settings.py:214:0: C0301: Line too long (121/120) (line-too-long)\r\nsrc\\gen\\settings.py:221:0: C0301: Line too long (177/120) (line-too-long)\r\nsrc\\gen\\settings.py:223:0: C0301: Line too long (181/120) (line-too-long)\r\nsrc\\gen\\settings.py:226:0: C0301: Line too long (461/120) (line-too-long)\r\nsrc\\gen\\settings.py:228:0: C0301: Line too long (192/120) (line-too-long)\r\nsrc\\gen\\settings.py:12:0: C0103: Class name \"Ui_DialogSettings\" doesn't conform to '_?_?[a-zA-Z]+?$' pattern (invalid-name)\r\nsrc\\gen\\settings.py:12:0: R0205: Class 'Ui_DialogSettings' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)\r\nsrc\\gen\\settings.py:12:0: R0902: Too many instance attributes (35/15) (too-many-instance-attributes)\r\nsrc\\gen\\settings.py:13:4: C0103: Method name \"setupUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\settings.py:13:22: C0103: Argument name \"DialogSettings\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\settings.py:16:8: C0103: Variable name \"sizePolicy\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\settings.py:13:4: R0915: Too many statements (190/50) (too-many-statements)\r\nsrc\\gen\\settings.py:205:4: C0103: Method name \"retranslateUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\settings.py:205:28: C0103: Argument name \"DialogSettings\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\settings.py:26:8: W0201: Attribute 'capture_settings_groupbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:29:8: W0201: Attribute 'fps_limit_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:36:8: W0201: Attribute 'fps_limit_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:40:8: W0201: Attribute 'live_capture_region_checkbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:46:8: W0201: Attribute 'capture_method_combobox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:49:8: W0201: Attribute 'capture_method_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:52:8: W0201: Attribute 'capture_device_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:55:8: W0201: Attribute 'capture_device_combobox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:59:8: W0201: Attribute 'image_settings_groupbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:65:8: W0201: Attribute 'default_comparison_method' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:73:8: W0201: Attribute 'default_comparison_method_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:76:8: W0201: Attribute 'default_pause_time_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:80:8: W0201: Attribute 'default_pause_time_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:87:8: W0201: Attribute 'default_similarity_threshold_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:92:8: W0201: Attribute 'default_similarity_threshold_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:98:8: W0201: Attribute 'loop_splits_checkbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:104:8: W0201: Attribute 'custom_image_settings_info_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:111:8: W0201: Attribute 'default_delay_time_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:116:8: W0201: Attribute 'default_delay_time_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:121:8: W0201: Attribute 'hotkeys_groupbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:127:8: W0201: Attribute 'set_pause_hotkey_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:131:8: W0201: Attribute 'split_input' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:137:8: W0201: Attribute 'undo_split_input' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:143:8: W0201: Attribute 'split_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:146:8: W0201: Attribute 'reset_input' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:152:8: W0201: Attribute 'set_undo_split_hotkey_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:156:8: W0201: Attribute 'reset_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:159:8: W0201: Attribute 'set_reset_hotkey_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:163:8: W0201: Attribute 'set_split_hotkey_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:167:8: W0201: Attribute 'pause_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:170:8: W0201: Attribute 'pause_input' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:176:8: W0201: Attribute 'undo_split_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:179:8: W0201: Attribute 'set_skip_split_hotkey_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:183:8: W0201: Attribute 'skip_split_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:186:8: W0201: Attribute 'skip_split_input' defined outside __init__ (attribute-defined-outside-init)\r\n************* Module update_checker\r\nsrc\\gen\\update_checker.py:2:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\update_checker.py:4:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\update_checker.py:12:0: C0103: Class name \"Ui_UpdateChecker\" doesn't conform to '_?_?[a-zA-Z]+?$' pattern (invalid-name)\r\nsrc\\gen\\update_checker.py:12:0: R0205: Class 'Ui_UpdateChecker' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)\r\nsrc\\gen\\update_checker.py:13:4: C0103: Method name \"setupUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\update_checker.py:13:22: C0103: Argument name \"UpdateChecker\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\update_checker.py:17:8: C0103: Variable name \"sizePolicy\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\update_checker.py:33:8: C0103: Variable name \"sizePolicy\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\update_checker.py:13:4: R0915: Too many statements (56/50) (too-many-statements)\r\nsrc\\gen\\update_checker.py:71:4: C0103: Method name \"retranslateUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\update_checker.py:71:28: C0103: Argument name \"UpdateChecker\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\update_checker.py:31:8: W0201: Attribute 'update_status_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:39:8: W0201: Attribute 'current_version_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:42:8: W0201: Attribute 'latest_version_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:45:8: W0201: Attribute 'go_to_download_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:48:8: W0201: Attribute 'left_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:52:8: W0201: Attribute 'right_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:55:8: W0201: Attribute 'current_version_number_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:59:8: W0201: Attribute 'latest_version_number_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:63:8: W0201: Attribute 'do_not_ask_again_checkbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (region_capture -> region_selection) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (error_messages -> user_profile -> region_capture -> region_selection) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplitImage -> split_parser) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoControlledWorker -> error_messages -> AutoSplit) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplit -> user_profile -> region_capture -> region_selection -> error_messages) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplitImage -> error_messages -> user_profile) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplit -> menu_bar -> user_profile -> region_capture -> region_selection -> error_messages) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplit -> region_selection -> error_messages) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplit -> error_messages) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (error_messages -> user_profile -> region_selection) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (error_messages -> user_profile) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplitImage -> split_parser -> error_messages -> user_profile) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplit -> menu_bar -> region_selection -> error_messages) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplit -> menu_bar -> error_messages) (cyclic-import)\r\n\r\n--------------------------------------------------------------------------\r\nYour code has been rated at -158.32/10 (previous run: -285.20/10, +126.88)\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nsrc\\gen\\* should not be checked\r\n\r\n### Pylint version\r\n\r\n```shell\r\npylint 2.14.1\r\nastroid 2.11.5\r\nPython 3.9.6 (tags/v3.9.6:db3ff76, Jun 28 2021, 15:26:21) [MSC v.1929 64 bit (AMD64)]\r\n```\r\n\r\n\r\n### OS / Environment\r\n\r\nWindows 10.0.19044\r\n\r\n\r\n### Additional dependencies\r\n\r\n_No response_\n"
}