{
  "info": {
    "duration": 194.43629217147827,
    "submission": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex d701ff2e..6f3a845f 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -425,7 +425,10 @@ class Session(SessionRedirectMixin):\n             If Tuple, ('cert', 'key') pair.\n         \"\"\"\n \n-        method = builtin_str(method)\n+        if isinstance(method, bytes):\n+            method = method.decode('utf-8')\n+        else:\n+            method = builtin_str(method)\n \n         # Create the Request.\n         req = Request(\n",
    "total_cost": 0.136068,
    "instance_id": "psf__requests-2317",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue revolves around the `method = builtin_str(method)` command in `requests/sessions.py`, which converts a binary string (e.g., `b'GET'`) to a literal string (e.g., `\"b'GET'\"`). This conversion causes the method value to be incorrect when the request is made, leading to a 404 Not Found response. It's important to investigate how the method argument is handled and potentially modify the handling of binary strings to prevent incorrect conversions. The main focus should be on the `Session` class and the `method = builtin_str(method)` command in `requests/sessions.py`. Given the context, we should also check utilities that might be used in conjunction with this, such as encoding/decoding functions in `requests/utils.py`.",
            "search_requests": [
              {
                "query": "method = builtin_str(method)",
                "class_names": [],
                "code_snippet": "method = builtin_str(method)",
                "file_pattern": "requests/sessions.py",
                "function_names": []
              },
              {
                "query": "encoding/decoding binary strings",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": "requests/utils.py",
                "function_names": []
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 641,
                "span_id": "Session.request",
                "file_path": "requests/sessions.py"
              },
              {
                "rank": 0,
                "tokens": 174,
                "span_id": "docstring",
                "file_path": "requests/utils.py"
              },
              {
                "rank": 0,
                "tokens": 28,
                "span_id": "dict_to_sequence",
                "file_path": "requests/utils.py"
              },
              {
                "rank": 0,
                "tokens": 87,
                "span_id": "super_len",
                "file_path": "requests/utils.py"
              },
              {
                "rank": 1,
                "tokens": 39,
                "span_id": "iter_slices",
                "file_path": "requests/utils.py"
              },
              {
                "rank": 1,
                "tokens": 75,
                "span_id": "stream_decode_response_unicode",
                "file_path": "requests/utils.py"
              },
              {
                "rank": 1,
                "tokens": 90,
                "span_id": "get_encoding_from_headers",
                "file_path": "requests/utils.py"
              },
              {
                "rank": 2,
                "tokens": 93,
                "span_id": "urldefragauth",
                "file_path": "requests/utils.py"
              },
              {
                "rank": 2,
                "tokens": 87,
                "span_id": "to_native_string",
                "file_path": "requests/utils.py"
              },
              {
                "rank": 2,
                "tokens": 59,
                "span_id": "get_auth_from_url",
                "file_path": "requests/utils.py"
              },
              {
                "rank": 3,
                "tokens": 134,
                "span_id": "get_unicode_from_response",
                "file_path": "requests/utils.py"
              },
              {
                "rank": 3,
                "tokens": 26,
                "span_id": "impl:8",
                "file_path": "requests/utils.py"
              },
              {
                "rank": 4,
                "tokens": 155,
                "span_id": "unquote_unreserved",
                "file_path": "requests/utils.py"
              },
              {
                "rank": 4,
                "tokens": 92,
                "span_id": "requote_uri",
                "file_path": "requests/utils.py"
              }
            ],
            "search_requests": [
              {
                "query": "method = builtin_str(method)",
                "class_names": [],
                "code_snippet": "method = builtin_str(method)",
                "file_pattern": "requests/sessions.py",
                "function_names": []
              },
              {
                "query": "encoding/decoding binary strings",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": "requests/utils.py",
                "function_names": []
              }
            ]
          },
          "input_tokens": 2869,
          "output_tokens": 289,
          "retry_message": null,
          "completion_cost": 0.012942
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 641,
            "span_id": "Session.request",
            "file_path": "requests/sessions.py"
          },
          {
            "rank": 0,
            "tokens": 174,
            "span_id": "docstring",
            "file_path": "requests/utils.py"
          },
          {
            "rank": 0,
            "tokens": 28,
            "span_id": "dict_to_sequence",
            "file_path": "requests/utils.py"
          },
          {
            "rank": 0,
            "tokens": 87,
            "span_id": "super_len",
            "file_path": "requests/utils.py"
          },
          {
            "rank": 1,
            "tokens": 39,
            "span_id": "iter_slices",
            "file_path": "requests/utils.py"
          },
          {
            "rank": 1,
            "tokens": 75,
            "span_id": "stream_decode_response_unicode",
            "file_path": "requests/utils.py"
          },
          {
            "rank": 1,
            "tokens": 90,
            "span_id": "get_encoding_from_headers",
            "file_path": "requests/utils.py"
          },
          {
            "rank": 2,
            "tokens": 93,
            "span_id": "urldefragauth",
            "file_path": "requests/utils.py"
          },
          {
            "rank": 2,
            "tokens": 87,
            "span_id": "to_native_string",
            "file_path": "requests/utils.py"
          },
          {
            "rank": 2,
            "tokens": 59,
            "span_id": "get_auth_from_url",
            "file_path": "requests/utils.py"
          },
          {
            "rank": 3,
            "tokens": 134,
            "span_id": "get_unicode_from_response",
            "file_path": "requests/utils.py"
          },
          {
            "rank": 3,
            "tokens": 26,
            "span_id": "impl:8",
            "file_path": "requests/utils.py"
          },
          {
            "rank": 4,
            "tokens": 155,
            "span_id": "unquote_unreserved",
            "file_path": "requests/utils.py"
          },
          {
            "rank": 4,
            "tokens": 92,
            "span_id": "requote_uri",
            "file_path": "requests/utils.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue pertains to the conversion of the 'method' from a binary string to a literal string when using the `builtin_str` function in `requests/sessions.py`. This conversion causes the method to be interpreted incorrectly, leading to a 404 Not Found response. The issue is exacerbated by the `utils.safe_encode_list` function in `neutronclient`, which converts values to binary strings, including the method. The search results are relevant as they contain the implementation of the `request` method in `requests/sessions.py`, which involves the problematic line `method = builtin_str(method)`. Additionally, the `requests/utils.py` file includes related functions like `to_native_string`, which also uses `builtin_str`. These code spans are directly related to the issue at hand, as they involve the conversion and handling of string types, particularly in a way that might not correctly process binary strings as expected. Thus, the identified code spans should help in understanding and potentially addressing the reported issue.",
            "identified_spans": [
              {
                "span_ids": [
                  "Session.request"
                ],
                "file_path": "requests/sessions.py"
              },
              {
                "span_ids": [
                  "to_native_string"
                ],
                "file_path": "requests/utils.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 3471,
          "output_tokens": 320,
          "retry_message": null,
          "completion_cost": 0.015213
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The file context provided includes the relevant parts of the codebase that handle the method conversion and request processing. Specifically, the conversion of the method to a string occurs in the `request` method of the `Session` class in `requests/sessions.py`, where `method = builtin_str(method)` is used. Additionally, the `to_native_string` function in `requests/utils.py` is a utility likely related to string handling, which could be relevant if further string conversions are performed. It appears that the code responsible for handling the method string conversion and related utilities are provided. However, the exact issue of binary string handling in the context of HTTP methods is not fully detailed within this file context, suggesting that additional investigation in the form of package-specific configurations or additional Python environments might be necessary to reproduce and fix the problem.",
            "search_suggestions": "Look into how neutronclient integrates with requests and how the method argument is passed through. Additionally, checking other environments or configurations where potential string encoding/decoding mismatches might occur (e.g., different Python versions or specific server settings that could influence the handling of binary strings)."
          },
          "output": {
            "message": "Look into how neutronclient integrates with requests and how the method argument is passed through. Additionally, checking other environments or configurations where potential string encoding/decoding mismatches might occur (e.g., different Python versions or specific server settings that could influence the handling of binary strings)."
          },
          "input_tokens": 2074,
          "output_tokens": 267,
          "retry_message": null,
          "completion_cost": 0.010227
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Look into how neutronclient integrates with requests and how the method argument is passed through. Additionally, checking other environments or configurations where potential string encoding/decoding mismatches might occur (e.g., different Python versions or specific server settings that could influence the handling of binary strings).",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The current context indicates that the `method = builtin_str(method)` command is used in the `request` method of the `Session` class in `requests/sessions.py`. This conversion from binary string to literal string is a focus because it potentially corrupts the method argument. Additionally, the `to_native_string` function in `requests/utils.py` could also be involved in encoding/decoding issues. It's crucial to further examine how neutronclient interacts with requests and specifically how the method argument is managed through this integration. Additionally, testing in different environments (e.g., different Python versions, server configurations) could help identify if there are specific conditions under which binary string handling becomes problematic.",
            "search_requests": [
              {
                "query": "integration with requests",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": "neutronclient/**/*.py",
                "function_names": [
                  "utils.safe_encode_list"
                ]
              },
              {
                "query": "method argument handling",
                "class_names": [
                  "Session"
                ],
                "code_snippet": "method = builtin_str(method)",
                "file_pattern": "requests/sessions.py",
                "function_names": [
                  "request"
                ]
              },
              {
                "query": "encoding/decoding binary strings",
                "class_names": [],
                "code_snippet": "to_native_string",
                "file_pattern": "requests/utils.py",
                "function_names": [
                  "to_native_string"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 641,
                "span_id": "Session.request",
                "file_path": "requests/sessions.py"
              },
              {
                "rank": 0,
                "tokens": 87,
                "span_id": "to_native_string",
                "file_path": "requests/utils.py"
              }
            ],
            "search_requests": [
              {
                "query": "integration with requests",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": "neutronclient/**/*.py",
                "function_names": [
                  "utils.safe_encode_list"
                ]
              },
              {
                "query": "method argument handling",
                "class_names": [
                  "Session"
                ],
                "code_snippet": "method = builtin_str(method)",
                "file_pattern": "requests/sessions.py",
                "function_names": [
                  "request"
                ]
              },
              {
                "query": "encoding/decoding binary strings",
                "class_names": [],
                "code_snippet": "to_native_string",
                "file_pattern": "requests/utils.py",
                "function_names": [
                  "to_native_string"
                ]
              }
            ]
          },
          "input_tokens": 4155,
          "output_tokens": 378,
          "retry_message": null,
          "completion_cost": 0.018135000000000002
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 641,
            "span_id": "Session.request",
            "file_path": "requests/sessions.py"
          },
          {
            "rank": 0,
            "tokens": 87,
            "span_id": "to_native_string",
            "file_path": "requests/utils.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue pertains to the handling of binary strings in the method argument of the `Session.request` method in `requests/sessions.py`. Specifically, the line `method = builtin_str(method)` is converting the method from a binary string (e.g., b'GET') to a literal string (e.g., \"b'GET'\"). This conversion causes the request to fail with a 404 Not Found response. The context provided includes the relevant sections of `requests/sessions.py` showing the `Session` class and its `request` method, where `builtin_str` is used. Additionally, `requests/utils.py` contains the `to_native_string` function which might be relevant as it also deals with string conversion. Given the context and the search results, the focus should be on the `Session.request` method in `requests/sessions.py` to identify the specific code span causing the issue with binary string conversion. The search results confirm the presence of the problematic line `method = builtin_str(method)` in the `Session.request` method, making it the primary target for fixing the reported issue.",
            "identified_spans": [
              {
                "span_ids": [
                  "Session",
                  "Session.request"
                ],
                "file_path": "requests/sessions.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 3053,
          "output_tokens": 312,
          "retry_message": null,
          "completion_cost": 0.013839
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": true,
            "relevant": true,
            "scratch_pad": "The issue involves handling of binary strings in the method argument for HTTP requests. The provided context from `requests/sessions.py` shows that there is a use of `builtin_str(method)` in the `request` method of the `Session` class, which aligns with the reported issue where binary strings are being converted to literal strings. Additionally, the `to_native_string` function in `requests/utils.py` is identified as potentially handling encoding/decoding, which could also be related. Based on the provided file context, it appears that the primary area for this issue is well-covered, particularly in how method strings are being handled in the `Session` class and the utility function `to_native_string`. Further context is needed to fully assess interactions with other components like neutronclient, but from the perspective of the given file contexts, the relevant code appears to be identified.",
            "search_suggestions": null
          },
          "output": {},
          "input_tokens": 3282,
          "output_tokens": 222,
          "retry_message": null,
          "completion_cost": 0.013176
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "Session.request",
            "file_path": "requests/sessions.py",
            "scratch_pad": "The reported issue relates to the conversion of binary strings to literal strings in the `request` method of the `Session` class. This causes the method to be incorrectly sent as a string representation of the binary data, resulting in a 404 error. The solution is to convert the binary string to a native string without interpreting it as a string literal.",
            "instructions": "Update the method assignment in the `request` method of the `Session` class to handle binary strings correctly. Modify `method = builtin_str(method)` to check if the method is a binary string and convert it appropriately to a native string."
          },
          "output": {
            "span_id": "Session.request",
            "file_path": "requests/sessions.py",
            "instructions": "Update the method assignment in the `request` method of the `Session` class to handle binary strings correctly. Modify `method = builtin_str(method)` to check if the method is a binary string and convert it appropriately to a native string."
          },
          "input_tokens": 3845,
          "output_tokens": 191,
          "retry_message": null,
          "completion_cost": 0.0144
        }
      ]
    },
    {
      "name": "ClarifyCodeChange",
      "state": {
        "model": "deepseek-coder",
        "span_id": "Session.request",
        "end_line": null,
        "file_path": "requests/sessions.py",
        "max_tokens": 1000,
        "start_line": null,
        "temperature": 1.6,
        "instructions": "Update the method assignment in the `request` method of the `Session` class to handle binary strings correctly. Modify `method = builtin_str(method)` to check if the method is a binary string and convert it appropriately to a native string.\n\nThe instruction requires modifying the line that converts the method to a builtin string. This line needs to be updated to check if the method is a binary string and convert it appropriately.",
        "max_iterations": null,
        "include_message_history": false,
        "max_tokens_in_edit_prompt": 500
      },
      "actions": [
        {
          "action": {
            "reject": null,
            "end_line": 428,
            "start_line": 428,
            "scratch_pad": "The instruction requires modifying the line that converts the method to a builtin string. This line needs to be updated to check if the method is a binary string and convert it appropriately."
          },
          "output": {
            "span_id": "Session.request",
            "end_line": 432,
            "file_path": "requests/sessions.py",
            "start_line": 424,
            "instructions": "Update the method assignment in the `request` method of the `Session` class to handle binary strings correctly. Modify `method = builtin_str(method)` to check if the method is a binary string and convert it appropriately to a native string.\n\nThe instruction requires modifying the line that converts the method to a builtin string. This line needs to be updated to check if the method is a binary string and convert it appropriately."
          },
          "input_tokens": 1547,
          "output_tokens": 81,
          "retry_message": null,
          "completion_cost": 0.005856
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "Session.request",
        "end_line": 432,
        "file_path": "requests/sessions.py",
        "max_tokens": 1000,
        "start_line": 424,
        "temperature": 1.6,
        "instructions": "Update the method assignment in the `request` method of the `Session` class to handle binary strings correctly. Modify `method = builtin_str(method)` to check if the method is a binary string and convert it appropriately to a native string.\n\nThe instruction requires modifying the line that converts the method to a builtin string. This line needs to be updated to check if the method is a binary string and convert it appropriately.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "```\n<replace>\n        :param cert: (optional) if String, path to ssl client cert file (.pem).\n            If Tuple, ('cert', 'key') pair.\n        \"\"\"\n\n        if isinstance(method, bytes):\n            method = method.decode('utf-8')\n        else:\n            method = builtin_str(method)\n\n        # Create the Request.\n        req = Request(\n            method = method.upper(),\n</replace>"
          },
          "output": {
            "diff": "--- requests/sessions.py\n+++ requests/sessions.py\n@@ -425,7 +425,10 @@\n             If Tuple, ('cert', 'key') pair.\n         \"\"\"\n \n-        method = builtin_str(method)\n+        if isinstance(method, bytes):\n+            method = method.decode('utf-8')\n+        else:\n+            method = builtin_str(method)\n \n         # Create the Request.\n         req = Request(\n",
            "message": "Applied the change to requests/sessions.py.\n\n<scratch_pad>\n```\n</scratch_pad>",
            "verification_errors": []
          },
          "input_tokens": 4959,
          "output_tokens": 104,
          "retry_message": null,
          "completion_cost": 0.016437
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": "--- requests/sessions.py\n+++ requests/sessions.py\n@@ -425,7 +425,10 @@\n             If Tuple, ('cert', 'key') pair.\n         \"\"\"\n \n-        method = builtin_str(method)\n+        if isinstance(method, bytes):\n+            method = method.decode('utf-8')\n+        else:\n+            method = builtin_str(method)\n \n         # Create the Request.\n         req = Request(\n",
        "model": "deepseek-coder",
        "message": "Applied the change to requests/sessions.py.\n\n<scratch_pad>\n```\n</scratch_pad>",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": [],
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "finish",
            "finish": "The issue has been resolved by the applied change. The code now correctly handles binary strings for the method parameter, converting them to native strings without interpreting them as string literals. This ensures compatibility with the use of binary strings in the method parameter, preventing the 404 error that was occurring previously.",
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "The change has been applied successfully. The updated code now correctly converts binary strings to native strings in the `request` method of the `Session` class. This resolves the issue where the method is incorrectly sent as a string representation of the binary data, resulting in a 404 error. With this change, binary strings are properly handled and converted to native strings, ensuring that the correct method type is used and preventing the 404 error.",
            "instructions": null
          },
          "output": {
            "message": "The issue has been resolved by the applied change. The code now correctly handles binary strings for the method parameter, converting them to native strings without interpreting them as string literals. This ensures compatibility with the use of binary strings in the method parameter, preventing the 404 error that was occurring previously."
          },
          "input_tokens": 4216,
          "output_tokens": 213,
          "retry_message": null,
          "completion_cost": 0.015843
        }
      ]
    },
    {
      "name": "Finished",
      "state": {
        "model": "gpt-4o",
        "output": {
          "model": "deepseek-coder",
          "temperature": 1.6
        },
        "message": "The issue has been resolved by the applied change. The code now correctly handles binary strings for the method parameter, converting them to native strings without interpreting them as string literals. This ensures compatibility with the use of binary strings in the method parameter, preventing the 404 error that was occurring previously.",
        "max_tokens": 1000,
        "temperature": 0.0,
        "max_iterations": null,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "method = builtin_str(method) problem\nIn requests/sessions.py is a command:\n\nmethod = builtin_str(method)\nConverts method from\nb\u2019GET\u2019\nto\n\"b'GET\u2019\"\n\nWhich is the literal string, no longer a binary string.  When requests tries to use the method \"b'GET\u2019\u201d, it gets a 404 Not Found response.\n\nI am using python3.4 and python-neutronclient (2.3.9) with requests (2.4.3).  neutronclient is broken because it uses this \"args = utils.safe_encode_list(args)\" command which converts all the values to binary string, including method.\n\nI'm not sure if this is a bug with neutronclient or a bug with requests, but I'm starting here.  Seems if requests handled the method value being a binary string, we wouldn't have any problem.\n\nAlso, I tried in python2.6 and this bug doesn't exist there. Some difference between 2.6 and 3.4 makes this not work right.\n\n"
}