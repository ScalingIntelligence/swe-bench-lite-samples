{
  "info": {
    "duration": 172.28221154212952,
    "submission": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex 77768e7383..556776755e 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -1558,14 +1558,15 @@ class DraggableBase:\n \n     def disconnect(self):\n         \"\"\"Disconnect the callbacks.\"\"\"\n-        for cid in self.cids:\n-            self.canvas.mpl_disconnect(cid)\n-        try:\n-            c1 = self._c1\n-        except AttributeError:\n-            pass\n-        else:\n-            self.canvas.mpl_disconnect(c1)\n+        if self.ref_artist is not None and self.ref_artist.figure is not None:\n+            for cid in self.cids:\n+                self.canvas.mpl_disconnect(cid)\n+            try:\n+                c1 = self._c1\n+            except AttributeError:\n+                pass\n+            else:\n+                self.canvas.mpl_disconnect(c1)\n \n     def save_offset(self):\n         pass\n",
    "total_cost": 0.11361,
    "instance_id": "matplotlib__matplotlib-25442",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue is related to an AttributeError involving 'NoneType' object has no attribute 'canvas' when using mplcursor with matplotlib 3.7.1. The traceback indicates that the error occurs in the 'matplotlib\\offsetbox.py' file. To find the root cause, we should carefully inspect the relevant parts of the code within the offsetbox module and also look into the interaction of mplcursor with matplotlib's FigureCanvas. Given the information provided, it's essential to specifically target the offsetbox.py file and the specific methods that might be handling the canvas or artist disconnection.",
            "search_requests": [
              {
                "query": "'NoneType' object has no attribute 'canvas'",
                "class_names": [],
                "code_snippet": "self.canvas.mpl_disconnect(cid)",
                "file_pattern": "**/matplotlib/offsetbox.py",
                "function_names": []
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 6,
                "span_id": "DraggableBase.finalize_offset",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 0,
                "tokens": 10,
                "span_id": "DraggableBase.update_offset",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 0,
                "tokens": 26,
                "span_id": "DraggableBase._check_still_parented",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 0,
                "tokens": 46,
                "span_id": "DraggableBase.disconnect",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 0,
                "tokens": 58,
                "span_id": "DraggableBase.on_release",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 0,
                "tokens": 6,
                "span_id": "DraggableBase.save_offset",
                "file_path": "lib/matplotlib/offsetbox.py"
              }
            ],
            "search_requests": [
              {
                "query": "'NoneType' object has no attribute 'canvas'",
                "class_names": [],
                "code_snippet": "self.canvas.mpl_disconnect(cid)",
                "file_pattern": "**/matplotlib/offsetbox.py",
                "function_names": []
              }
            ]
          },
          "input_tokens": 3861,
          "output_tokens": 285,
          "retry_message": null,
          "completion_cost": 0.015858
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 6,
            "span_id": "DraggableBase.finalize_offset",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 0,
            "tokens": 10,
            "span_id": "DraggableBase.update_offset",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 0,
            "tokens": 26,
            "span_id": "DraggableBase._check_still_parented",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 0,
            "tokens": 46,
            "span_id": "DraggableBase.disconnect",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 0,
            "tokens": 58,
            "span_id": "DraggableBase.on_release",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 0,
            "tokens": 6,
            "span_id": "DraggableBase.save_offset",
            "file_path": "lib/matplotlib/offsetbox.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue involves an `AttributeError` when using `mplcursor` with `matplotlib` version 3.7.1, specifically related to handling the `canvas` attribute of an artist object. This error occurs in the `on_release` method within the `DraggableBase` class from `matplotlib/offsetbox.py`. The traceback indicates that the error stems from trying to access the `canvas` attribute of a `NoneType` object, which happens in the `_check_still_parented` method. This suggests that the `ref_artist` might be losing its `figure` attribute, leading to the `NoneType` error. Therefore, the relevant code spans to investigate further are those that deal with the `ref_artist`'s `figure` attribute and the `canvas` property, including the initialization, release handling, and disconnect methods.",
            "identified_spans": [
              {
                "span_ids": [
                  "DraggableBase",
                  "DraggableBase.__init__",
                  "DraggableBase.on_release",
                  "DraggableBase._check_still_parented",
                  "DraggableBase.disconnect"
                ],
                "file_path": "lib/matplotlib/offsetbox.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 2090,
          "output_tokens": 296,
          "retry_message": null,
          "completion_cost": 0.01071
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": true,
            "relevant": true,
            "scratch_pad": "The file context provided contains a relevant class, DraggableBase, which includes methods like on_release and disconnect that could be responsible for the AttributeError described in the issue when handling the canvas or artist disconnection. The issue suggests that the problem occurs when using mplcursor with matplotlib 3.7.1, and the traceback points to the offsetbox module as the source. The file context here includes the relevant methods from the offsetbox module that are likely involved in the error's occurrence.",
            "search_suggestions": null
          },
          "output": {},
          "input_tokens": 2010,
          "output_tokens": 141,
          "retry_message": null,
          "completion_cost": 0.008145
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "DraggableBase",
            "file_path": "lib/matplotlib/offsetbox.py",
            "scratch_pad": "The issue seems to be that the DraggableBase class is trying to access the canvas property of a ref_artist that has become None. This can happen if the ref_artist is removed from the figure or if its figure attribute is set to None. To prevent this, we should add a check in the canvas property getter to return None if ref_artist is None or if ref_artist.figure is None.",
            "instructions": "Add a check in the `canvas` property getter to return None if `ref_artist` is None or if `ref_artist.figure` is None."
          },
          "output": {
            "span_id": "DraggableBase",
            "file_path": "lib/matplotlib/offsetbox.py",
            "instructions": "Add a check in the `canvas` property getter to return None if `ref_artist` is None or if `ref_artist.figure` is None."
          },
          "input_tokens": 2355,
          "output_tokens": 177,
          "retry_message": null,
          "completion_cost": 0.00972
        }
      ]
    },
    {
      "name": "ClarifyCodeChange",
      "state": {
        "model": "deepseek-coder",
        "span_id": "DraggableBase",
        "end_line": null,
        "file_path": "lib/matplotlib/offsetbox.py",
        "max_tokens": 1000,
        "start_line": null,
        "temperature": 1.6,
        "instructions": "Add a check in the `canvas` property getter to return None if `ref_artist` is None or if `ref_artist.figure` is None.",
        "max_iterations": null,
        "include_message_history": false,
        "max_tokens_in_edit_prompt": 500
      },
      "actions": [
        {
          "action": {
            "reject": true,
            "end_line": 0,
            "start_line": 0,
            "scratch_pad": "The code does not currently have a `canvas` property getter to modify. The task seems to involve adding a new functionality which is not directly related to the provided code snippet."
          },
          "output": {
            "message": "The code does not currently have a `canvas` property getter to modify. The task seems to involve adding a new functionality which is not directly related to the provided code snippet."
          },
          "input_tokens": 1110,
          "output_tokens": 77,
          "retry_message": null,
          "completion_cost": 0.004485
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": "The code does not currently have a `canvas` property getter to modify. The task seems to involve adding a new functionality which is not directly related to the provided code snippet.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "DraggableBase",
            "file_path": "lib/matplotlib/offsetbox.py",
            "scratch_pad": "To address the `AttributeError` caused by trying to access the `canvas` property when `ref_artist` is `None`, we need to introduce a new `canvas` property in the `DraggableBase` class. This property will check if `ref_artist` or `ref_artist.figure` is `None` before attempting to access the `canvas` attribute.",
            "instructions": "Introduce a new `canvas` property in the `DraggableBase` class that checks if `ref_artist` or `ref_artist.figure` is `None` before returning the `canvas` attribute."
          },
          "output": {
            "span_id": "DraggableBase",
            "file_path": "lib/matplotlib/offsetbox.py",
            "instructions": "Introduce a new `canvas` property in the `DraggableBase` class that checks if `ref_artist` or `ref_artist.figure` is `None` before returning the `canvas` attribute."
          },
          "input_tokens": 2587,
          "output_tokens": 194,
          "retry_message": null,
          "completion_cost": 0.010671
        }
      ]
    },
    {
      "name": "ClarifyCodeChange",
      "state": {
        "model": "deepseek-coder",
        "span_id": "DraggableBase",
        "end_line": null,
        "file_path": "lib/matplotlib/offsetbox.py",
        "max_tokens": 1000,
        "start_line": null,
        "temperature": 1.6,
        "instructions": "Introduce a new `canvas` property in the `DraggableBase` class that checks if `ref_artist` or `ref_artist.figure` is `None` before returning the `canvas` attribute.\n\nThe introduction of the new `canvas` property involves modifying the `DraggableBase` class definition. This change should ideally be done at the start of the class definition to ensure clarity and accessibility of the new property. The modification involves adding a new method to check and return the `canvas` attribute conditionally based on the `ref_artist` or `ref_artist.figure` not being `None`.",
        "max_iterations": null,
        "include_message_history": false,
        "max_tokens_in_edit_prompt": 500
      },
      "actions": [
        {
          "action": {
            "reject": null,
            "end_line": 1469,
            "start_line": 1469,
            "scratch_pad": "The introduction of the new `canvas` property involves modifying the `DraggableBase` class definition. This change should ideally be done at the start of the class definition to ensure clarity and accessibility of the new property. The modification involves adding a new method to check and return the `canvas` attribute conditionally based on the `ref_artist` or `ref_artist.figure` not being `None`."
          },
          "output": {
            "span_id": "DraggableBase",
            "end_line": 1472,
            "file_path": "lib/matplotlib/offsetbox.py",
            "start_line": 1468,
            "instructions": "Introduce a new `canvas` property in the `DraggableBase` class that checks if `ref_artist` or `ref_artist.figure` is `None` before returning the `canvas` attribute.\n\nThe introduction of the new `canvas` property involves modifying the `DraggableBase` class definition. This change should ideally be done at the start of the class definition to ensure clarity and accessibility of the new property. The modification involves adding a new method to check and return the `canvas` attribute conditionally based on the `ref_artist` or `ref_artist.figure` not being `None`."
          },
          "input_tokens": 1120,
          "output_tokens": 124,
          "retry_message": null,
          "completion_cost": 0.005220000000000001
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "DraggableBase",
        "end_line": 1472,
        "file_path": "lib/matplotlib/offsetbox.py",
        "max_tokens": 1000,
        "start_line": 1468,
        "temperature": 1.6,
        "instructions": "Introduce a new `canvas` property in the `DraggableBase` class that checks if `ref_artist` or `ref_artist.figure` is `None` before returning the `canvas` attribute.\n\nThe introduction of the new `canvas` property involves modifying the `DraggableBase` class definition. This change should ideally be done at the start of the class definition to ensure clarity and accessibility of the new property. The modification involves adding a new method to check and return the `canvas` attribute conditionally based on the `ref_artist` or `ref_artist.figure` not being `None`.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "```\n<replace>\nclass DraggableBase:\n    \"\"\"\n    Helper base class for a draggable artist (legend, offsetbox).\n\n    Derived classes must override the following methods::\n    \"\"\"\n\n    @property\n    def canvas(self):\n        if self.ref_artist is None or self.ref_artist.figure is None:\n            return None\n        return self.ref_artist.figure.canvas\n</replace>"
          },
          "output": null,
          "input_tokens": 2181,
          "output_tokens": 98,
          "retry_message": "The following diff was not applied:\n --- lib/matplotlib/offsetbox.py\n+++ lib/matplotlib/offsetbox.py\n@@ -1470,6 +1470,13 @@\n     Helper base class for a draggable artist (legend, offsetbox).\n \n     Derived classes must override the following methods::\n+    \"\"\"\n+\n+    @property\n+    def canvas(self):\n+        if self.ref_artist is None or self.ref_artist.figure is None:\n+            return None\n+        return self.ref_artist.figure.canvas\n \n         def save_offset(self):\n             '''\n. \nErrors:\nThe updated code is invalid.\nMake sure that you return the unchanged code in the replace tag exactly as it is. If you want to reject the instructions, use the reject function.",
          "completion_cost": 0.008013
        },
        {
          "action": {
            "content": "```\n<reject>\nThe provided diff indicates errors with the updated code, suggesting it is invalid. To avoid introducing errors, I must reject the instructions.\n</reject>\n```"
          },
          "output": {
            "message": "\nThe provided diff indicates errors with the updated code, suggesting it is invalid. To avoid introducing errors, I must reject the instructions.\n"
          },
          "input_tokens": 2479,
          "output_tokens": 38,
          "retry_message": null,
          "completion_cost": 0.008007
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": "\nThe provided diff indicates errors with the updated code, suggesting it is invalid. To avoid introducing errors, I must reject the instructions.\n",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "DraggableBase.disconnect",
            "file_path": "lib/matplotlib/offsetbox.py",
            "scratch_pad": "The initial instructions to introduce a new `canvas` property in the `DraggableBase` class were incorrect because the provided code snippet does not have a `canvas` property to modify. Instead, the error lies in the `disconnect` method where `self.canvas` is accessed directly without checking if `ref_artist` is still valid. To fix this, we need to modify the `disconnect` method to ensure `self.canvas` is only accessed if `ref_artist` is not None and `ref_artist.figure` is not None.",
            "instructions": "Modify the `_check_still_parented` and `disconnect` methods in the `DraggableBase` class to ensure `self.canvas` is only accessed if `ref_artist` is not None and `ref_artist.figure` is not None."
          },
          "output": {
            "span_id": "DraggableBase.disconnect",
            "end_line": 1568,
            "file_path": "lib/matplotlib/offsetbox.py",
            "start_line": 1559,
            "instructions": "Modify the `_check_still_parented` and `disconnect` methods in the `DraggableBase` class to ensure `self.canvas` is only accessed if `ref_artist` is not None and `ref_artist.figure` is not None."
          },
          "input_tokens": 2815,
          "output_tokens": 243,
          "retry_message": null,
          "completion_cost": 0.01209
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "DraggableBase.disconnect",
        "end_line": 1568,
        "file_path": "lib/matplotlib/offsetbox.py",
        "max_tokens": 1000,
        "start_line": 1559,
        "temperature": 1.6,
        "instructions": "Modify the `_check_still_parented` and `disconnect` methods in the `DraggableBase` class to ensure `self.canvas` is only accessed if `ref_artist` is not None and `ref_artist.figure` is not None.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "```html\n<replace>\n    def disconnect(self):\n        \"\"\"Disconnect the callbacks.\"\"\"\n        if self.ref_artist is not None and self.ref_artist.figure is not None:\n            for cid in self.cids:\n                self.canvas.mpl_disconnect(cid)\n            try:\n                c1 = self._c1\n            except AttributeError:\n                pass\n            else:\n                self.canvas.mpl_disconnect(c1)\n</replace>"
          },
          "output": {
            "diff": "--- lib/matplotlib/offsetbox.py\n+++ lib/matplotlib/offsetbox.py\n@@ -1558,14 +1558,15 @@\n \n     def disconnect(self):\n         \"\"\"Disconnect the callbacks.\"\"\"\n-        for cid in self.cids:\n-            self.canvas.mpl_disconnect(cid)\n-        try:\n-            c1 = self._c1\n-        except AttributeError:\n-            pass\n-        else:\n-            self.canvas.mpl_disconnect(c1)\n+        if self.ref_artist is not None and self.ref_artist.figure is not None:\n+            for cid in self.cids:\n+                self.canvas.mpl_disconnect(cid)\n+            try:\n+                c1 = self._c1\n+            except AttributeError:\n+                pass\n+            else:\n+                self.canvas.mpl_disconnect(c1)\n \n     def save_offset(self):\n         pass\n",
            "message": "Applied the change to lib/matplotlib/offsetbox.py.\n\n<scratch_pad>\n```html\n</scratch_pad>",
            "verification_errors": []
          },
          "input_tokens": 2147,
          "output_tokens": 108,
          "retry_message": null,
          "completion_cost": 0.008061
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": "--- lib/matplotlib/offsetbox.py\n+++ lib/matplotlib/offsetbox.py\n@@ -1558,14 +1558,15 @@\n \n     def disconnect(self):\n         \"\"\"Disconnect the callbacks.\"\"\"\n-        for cid in self.cids:\n-            self.canvas.mpl_disconnect(cid)\n-        try:\n-            c1 = self._c1\n-        except AttributeError:\n-            pass\n-        else:\n-            self.canvas.mpl_disconnect(c1)\n+        if self.ref_artist is not None and self.ref_artist.figure is not None:\n+            for cid in self.cids:\n+                self.canvas.mpl_disconnect(cid)\n+            try:\n+                c1 = self._c1\n+            except AttributeError:\n+                pass\n+            else:\n+                self.canvas.mpl_disconnect(c1)\n \n     def save_offset(self):\n         pass\n",
        "model": "deepseek-coder",
        "message": "Applied the change to lib/matplotlib/offsetbox.py.\n\n<scratch_pad>\n```html\n</scratch_pad>",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": [],
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "finish",
            "finish": "The fix has been applied to the `disconnect` method to safeguard against accessing `self.canvas` when `ref_artist` might be None, which was causing the `AttributeError`. The issue should now be resolved.",
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "The changes to the `disconnect` method in the `DraggableBase` class have been successfully applied to ensure that `self.canvas` is only accessed if `ref_artist` is not None and `ref_artist.figure` is not None. This should prevent the `AttributeError` previously encountered.",
            "instructions": null
          },
          "output": {
            "message": "The fix has been applied to the `disconnect` method to safeguard against accessing `self.canvas` when `ref_artist` might be None, which was causing the `AttributeError`. The issue should now be resolved."
          },
          "input_tokens": 3360,
          "output_tokens": 170,
          "retry_message": null,
          "completion_cost": 0.01263
        }
      ]
    },
    {
      "name": "Finished",
      "state": {
        "model": "gpt-4o",
        "output": {
          "model": "deepseek-coder",
          "temperature": 1.6
        },
        "message": "The fix has been applied to the `disconnect` method to safeguard against accessing `self.canvas` when `ref_artist` might be None, which was causing the `AttributeError`. The issue should now be resolved.",
        "max_tokens": 1000,
        "temperature": 0.0,
        "max_iterations": null,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "[Bug]: Attribute Error combining matplotlib 3.7.1 and mplcursor on data selection\n### Bug summary\r\n\r\nIf you combine mplcursor and matplotlib 3.7.1, you'll get an `AttributeError: 'NoneType' object has no attribute 'canvas'` after clicking a few data points. Henceforth, selecting a new data point will trigger the same traceback. Otherwise, it works fine. \r\n\r\n### Code for reproduction\r\n\r\n```python\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport mplcursors as mpl\r\n\r\nx = np.arange(1, 11)    \r\ny1 = x\r\n\r\nplt.scatter(x,y1)\r\n\r\nmpl.cursor()\r\nplt.show()\r\n```\r\n\r\n\r\n### Actual outcome\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\MrAni\\Python\\miniconda3\\lib\\site-packages\\matplotlib\\cbook\\__init__.py\", line 304, in process\r\n    func(*args, **kwargs)\r\n  File \"C:\\Users\\MrAni\\Python\\miniconda3\\lib\\site-packages\\matplotlib\\offsetbox.py\", line 1550, in on_release\r\n    if self._check_still_parented() and self.got_artist:\r\n  File \"C:\\Users\\MrAni\\Python\\miniconda3\\lib\\site-packages\\matplotlib\\offsetbox.py\", line 1560, in _check_still_parented\r\n    self.disconnect()\r\n  File \"C:\\Users\\MrAni\\Python\\miniconda3\\lib\\site-packages\\matplotlib\\offsetbox.py\", line 1568, in disconnect\r\n    self.canvas.mpl_disconnect(cid)\r\n  File \"C:\\Users\\MrAni\\Python\\miniconda3\\lib\\site-packages\\matplotlib\\offsetbox.py\", line 1517, in <lambda>\r\n    canvas = property(lambda self: self.ref_artist.figure.canvas)\r\nAttributeError: 'NoneType' object has no attribute 'canvas'\r\n```\r\n\r\n### Expected outcome\r\n\r\nNo terminal output\r\n\r\n### Additional information\r\n\r\nUsing matplotlib 3.7.0 or lower works fine. Using a conda install or pip install doesn't affect the output. \r\n\r\n### Operating system\r\n\r\nWindows 11 and Windwos 10 \r\n\r\n### Matplotlib Version\r\n\r\n3.7.1\r\n\r\n### Matplotlib Backend\r\n\r\nQtAgg\r\n\r\n### Python version\r\n\r\n3.9.16\r\n\r\n### Jupyter version\r\n\r\n_No response_\r\n\r\n### Installation\r\n\r\nconda\n"
}