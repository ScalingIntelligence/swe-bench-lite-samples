{
  "info": {
    "duration": 114.6203944683075,
    "submission": "diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py\nindex 77768e7383..06b377af11 100644\n--- a/lib/matplotlib/offsetbox.py\n+++ b/lib/matplotlib/offsetbox.py\n@@ -1455,12 +1455,13 @@ or callable, default: value of *xycoords*\n             return\n         renderer.open_group(self.__class__.__name__, gid=self.get_gid())\n         self.update_positions(renderer)\n-        if self.arrow_patch is not None:\n-            if self.arrow_patch.figure is None and self.figure is not None:\n-                self.arrow_patch.figure = self.figure\n-            self.arrow_patch.draw(renderer)\n-        self.patch.draw(renderer)\n-        self.offsetbox.draw(renderer)\n+        if self._renderer is not None:\n+            if self.arrow_patch is not None:\n+                if self.arrow_patch.figure is None and self.figure is not None:\n+                    self.arrow_patch.figure = self.figure\n+                self.arrow_patch.draw(renderer)\n+            self.patch.draw(renderer)\n+            self.offsetbox.draw(renderer)\n         renderer.close_group(self.__class__.__name__)\n         self.stale = False\n \n",
    "total_cost": 0.10470900000000002,
    "instance_id": "matplotlib__matplotlib-25442",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue involves an `AttributeError` when using `mplcursor` with `matplotlib 3.7.1`, specifically related to a `NoneType` object not having a `canvas` attribute. Given the traceback, it seems the error is occurring in the `offsetbox` module within `matplotlib`. The search should focus on the `offsetbox` module and its interaction with `canvas` in the context of mouse events.",
            "search_requests": [
              {
                "query": "AttributeError: 'NoneType' object has no attribute 'canvas'",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": "lib/matplotlib/offsetbox.py",
                "function_names": []
              },
              {
                "query": "'NoneType' object has no attribute 'canvas'",
                "class_names": [
                  "FigureCanvasQT",
                  "FigureCanvasGTK3",
                  "FigureCanvasGTK4",
                  "_FigureCanvasWxBase",
                  "FigureCanvasTk",
                  "FigureCanvasWebAggCore"
                ],
                "code_snippet": null,
                "file_pattern": "lib/matplotlib/backends/**/*.py",
                "function_names": [
                  "set_cursor",
                  "mousePressEvent",
                  "mouseMoveEvent",
                  "destroy"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 96,
                "span_id": "AnchoredOffsetbox.draw",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 0,
                "tokens": 29,
                "span_id": "AnchoredOffsetbox.update_frame",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 1,
                "tokens": 52,
                "span_id": "DraggableOffsetBox.save_offset",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 1,
                "tokens": 10,
                "span_id": "DraggableOffsetBox",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 1,
                "tokens": 35,
                "span_id": "DraggableOffsetBox.update_offset",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 1,
                "tokens": 59,
                "span_id": "DraggableOffsetBox.get_loc_in_canvas",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 2,
                "tokens": 68,
                "span_id": "AnchoredOffsetbox.get_bbox_to_anchor",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 2,
                "tokens": 36,
                "span_id": "AnchoredOffsetbox.set_child",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 2,
                "tokens": 43,
                "span_id": "AnchoredOffsetbox.get_bbox",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 2,
                "tokens": 17,
                "span_id": "AnchoredOffsetbox.get_children",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 2,
                "tokens": 14,
                "span_id": "AnchoredOffsetbox.get_child",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 3,
                "tokens": 115,
                "span_id": "AnnotationBbox.draw",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 4,
                "tokens": 42,
                "span_id": "AuxTransformBox.draw",
                "file_path": "lib/matplotlib/offsetbox.py"
              },
              {
                "rank": 0,
                "tokens": 14,
                "span_id": "FigureCanvasGTK4.destroy",
                "file_path": "lib/matplotlib/backends/backend_gtk4.py"
              },
              {
                "rank": 0,
                "tokens": 47,
                "span_id": "FigureCanvasGTK4",
                "file_path": "lib/matplotlib/backends/backend_gtk4.py"
              },
              {
                "rank": 0,
                "tokens": 29,
                "span_id": "FigureCanvasGTK4.set_cursor",
                "file_path": "lib/matplotlib/backends/backend_gtk4.py"
              },
              {
                "rank": 1,
                "tokens": 49,
                "span_id": "FigureCanvasGTK3.set_cursor",
                "file_path": "lib/matplotlib/backends/backend_gtk3.py"
              },
              {
                "rank": 1,
                "tokens": 14,
                "span_id": "FigureCanvasGTK3.destroy",
                "file_path": "lib/matplotlib/backends/backend_gtk3.py"
              },
              {
                "rank": 1,
                "tokens": 138,
                "span_id": "FigureCanvasGTK3",
                "file_path": "lib/matplotlib/backends/backend_gtk3.py"
              },
              {
                "rank": 3,
                "tokens": 39,
                "span_id": "FigureCanvasQT.mouseMoveEvent",
                "file_path": "lib/matplotlib/backends/backend_qt.py"
              },
              {
                "rank": 3,
                "tokens": 46,
                "span_id": "FigureCanvasQT.leaveEvent",
                "file_path": "lib/matplotlib/backends/backend_qt.py"
              },
              {
                "rank": 3,
                "tokens": 55,
                "span_id": "FigureCanvasQT.mousePressEvent",
                "file_path": "lib/matplotlib/backends/backend_qt.py"
              },
              {
                "rank": 3,
                "tokens": 78,
                "span_id": "FigureCanvasQT.enterEvent",
                "file_path": "lib/matplotlib/backends/backend_qt.py"
              },
              {
                "rank": 3,
                "tokens": 56,
                "span_id": "FigureCanvasQT.mouseReleaseEvent",
                "file_path": "lib/matplotlib/backends/backend_qt.py"
              },
              {
                "rank": 3,
                "tokens": 60,
                "span_id": "FigureCanvasQT.mouseDoubleClickEvent",
                "file_path": "lib/matplotlib/backends/backend_qt.py"
              },
              {
                "rank": 5,
                "tokens": 125,
                "span_id": "_FigureCanvasWxBase.set_cursor",
                "file_path": "lib/matplotlib/backends/backend_wx.py"
              }
            ],
            "search_requests": [
              {
                "query": "AttributeError: 'NoneType' object has no attribute 'canvas'",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": "lib/matplotlib/offsetbox.py",
                "function_names": []
              },
              {
                "query": "'NoneType' object has no attribute 'canvas'",
                "class_names": [
                  "FigureCanvasQT",
                  "FigureCanvasGTK3",
                  "FigureCanvasGTK4",
                  "_FigureCanvasWxBase",
                  "FigureCanvasTk",
                  "FigureCanvasWebAggCore"
                ],
                "code_snippet": null,
                "file_pattern": "lib/matplotlib/backends/**/*.py",
                "function_names": [
                  "set_cursor",
                  "mousePressEvent",
                  "mouseMoveEvent",
                  "destroy"
                ]
              }
            ]
          },
          "input_tokens": 3543,
          "output_tokens": 309,
          "retry_message": null,
          "completion_cost": 0.015264
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 96,
            "span_id": "AnchoredOffsetbox.draw",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 0,
            "tokens": 29,
            "span_id": "AnchoredOffsetbox.update_frame",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 1,
            "tokens": 52,
            "span_id": "DraggableOffsetBox.save_offset",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 1,
            "tokens": 10,
            "span_id": "DraggableOffsetBox",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 1,
            "tokens": 35,
            "span_id": "DraggableOffsetBox.update_offset",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 1,
            "tokens": 59,
            "span_id": "DraggableOffsetBox.get_loc_in_canvas",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 2,
            "tokens": 68,
            "span_id": "AnchoredOffsetbox.get_bbox_to_anchor",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 2,
            "tokens": 36,
            "span_id": "AnchoredOffsetbox.set_child",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 2,
            "tokens": 43,
            "span_id": "AnchoredOffsetbox.get_bbox",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 2,
            "tokens": 17,
            "span_id": "AnchoredOffsetbox.get_children",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 2,
            "tokens": 14,
            "span_id": "AnchoredOffsetbox.get_child",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 3,
            "tokens": 115,
            "span_id": "AnnotationBbox.draw",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 4,
            "tokens": 42,
            "span_id": "AuxTransformBox.draw",
            "file_path": "lib/matplotlib/offsetbox.py"
          },
          {
            "rank": 0,
            "tokens": 14,
            "span_id": "FigureCanvasGTK4.destroy",
            "file_path": "lib/matplotlib/backends/backend_gtk4.py"
          },
          {
            "rank": 0,
            "tokens": 47,
            "span_id": "FigureCanvasGTK4",
            "file_path": "lib/matplotlib/backends/backend_gtk4.py"
          },
          {
            "rank": 0,
            "tokens": 29,
            "span_id": "FigureCanvasGTK4.set_cursor",
            "file_path": "lib/matplotlib/backends/backend_gtk4.py"
          },
          {
            "rank": 1,
            "tokens": 49,
            "span_id": "FigureCanvasGTK3.set_cursor",
            "file_path": "lib/matplotlib/backends/backend_gtk3.py"
          },
          {
            "rank": 1,
            "tokens": 14,
            "span_id": "FigureCanvasGTK3.destroy",
            "file_path": "lib/matplotlib/backends/backend_gtk3.py"
          },
          {
            "rank": 1,
            "tokens": 138,
            "span_id": "FigureCanvasGTK3",
            "file_path": "lib/matplotlib/backends/backend_gtk3.py"
          },
          {
            "rank": 3,
            "tokens": 39,
            "span_id": "FigureCanvasQT.mouseMoveEvent",
            "file_path": "lib/matplotlib/backends/backend_qt.py"
          },
          {
            "rank": 3,
            "tokens": 46,
            "span_id": "FigureCanvasQT.leaveEvent",
            "file_path": "lib/matplotlib/backends/backend_qt.py"
          },
          {
            "rank": 3,
            "tokens": 55,
            "span_id": "FigureCanvasQT.mousePressEvent",
            "file_path": "lib/matplotlib/backends/backend_qt.py"
          },
          {
            "rank": 3,
            "tokens": 78,
            "span_id": "FigureCanvasQT.enterEvent",
            "file_path": "lib/matplotlib/backends/backend_qt.py"
          },
          {
            "rank": 3,
            "tokens": 56,
            "span_id": "FigureCanvasQT.mouseReleaseEvent",
            "file_path": "lib/matplotlib/backends/backend_qt.py"
          },
          {
            "rank": 3,
            "tokens": 60,
            "span_id": "FigureCanvasQT.mouseDoubleClickEvent",
            "file_path": "lib/matplotlib/backends/backend_qt.py"
          },
          {
            "rank": 5,
            "tokens": 125,
            "span_id": "_FigureCanvasWxBase.set_cursor",
            "file_path": "lib/matplotlib/backends/backend_wx.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue involves an `AttributeError: 'NoneType' object has no attribute 'canvas'` when combining mplcursor and matplotlib 3.7.1. The key error occurs in the `offsetbox.py` file, where the `disconnect` method is trying to access the `canvas` attribute from a `NoneType` object. This suggests that somewhere in the code, an object that is expected to have a `canvas` attribute is being set to `None`. The relevant code spans in `offsetbox.py` that could be involved in this issue are those related to `AnchoredOffsetbox` and `AnnotationBbox`, as they handle the child objects and their canvases. Additionally, the `DraggableOffsetBox` class also interacts with these objects, potentially causing the issue if the reference to the child object is lost or not properly initialized. The search results from other backend files (GTK4, GTK3, QT, and WX) do not directly relate to the reported issue as they pertain to different backend interactions and do not handle the offsetbox or canvas-related logic implicated in the error. Thus, further analysis should focus on the `offsetbox.py` file to identify where the `NoneType` object might be occurring and why it is not being handled properly.",
            "identified_spans": [
              {
                "span_ids": [
                  "AnchoredOffsetbox.__init__",
                  "AnchoredOffsetbox.set_child",
                  "AnchoredOffsetbox.get_child",
                  "AnchoredOffsetbox.get_children",
                  "AnchoredOffsetbox.get_bbox",
                  "AnchoredOffsetbox.get_bbox_to_anchor",
                  "AnchoredOffsetbox.update_frame",
                  "AnchoredOffsetbox.draw",
                  "AnnotationBbox.draw",
                  "DraggableOffsetBox.__init__",
                  "DraggableOffsetBox.save_offset",
                  "DraggableOffsetBox.update_offset",
                  "DraggableOffsetBox.get_loc_in_canvas"
                ],
                "file_path": "lib/matplotlib/offsetbox.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 7017,
          "output_tokens": 496,
          "retry_message": null,
          "completion_cost": 0.028491000000000002
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": true,
            "relevant": true,
            "scratch_pad": "The provided file context contains the relevant `offsetbox` module from `matplotlib`, which is directly referenced in the traceback of the reported issue. The traceback points to an error in `offsetbox.py`, and the file context includes the `AnchoredOffsetbox`, `AnnotationBbox`, and `DraggableOffsetbox` classes, all of which could be potential sources of the `NoneType` error mentioned in the issue. Given this, the relevant code for investigating the issue is present in the file context.",
            "search_suggestions": null
          },
          "output": {},
          "input_tokens": 3453,
          "output_tokens": 146,
          "retry_message": null,
          "completion_cost": 0.012549000000000001
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "AnnotationBbox.draw",
            "file_path": "lib/matplotlib/offsetbox.py",
            "scratch_pad": "The issue likely stems from the `AnnotationBbox.draw` method, which attempts to access the canvas property through `self._renderer`. The error suggests that `self._renderer` might sometimes be `None`, leading to the `AttributeError`. To resolve this, we should ensure that `self._renderer` is always a valid renderer object before attempting to use it.",
            "instructions": "Add a check in the `AnnotationBbox.draw` method to ensure that `self._renderer` is not `None` before calling `self._check_xy(renderer)`."
          },
          "output": {
            "span_id": "AnnotationBbox.draw",
            "end_line": 1465,
            "file_path": "lib/matplotlib/offsetbox.py",
            "start_line": 1450,
            "instructions": "Add a check in the `AnnotationBbox.draw` method to ensure that `self._renderer` is not `None` before calling `self._check_xy(renderer)`."
          },
          "input_tokens": 3961,
          "output_tokens": 175,
          "retry_message": null,
          "completion_cost": 0.014508
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "AnnotationBbox.draw",
        "end_line": 1465,
        "file_path": "lib/matplotlib/offsetbox.py",
        "max_tokens": 1000,
        "start_line": 1450,
        "temperature": 1.6,
        "instructions": "Add a check in the `AnnotationBbox.draw` method to ensure that `self._renderer` is not `None` before calling `self._check_xy(renderer)`.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "```xml\n<replace>\n    def draw(self, renderer):\n        # docstring inherited\n        if renderer is not None:\n            self._renderer = renderer\n        if not self.get_visible() or not self._check_xy(renderer):\n            return\n        renderer.open_group(self.__class__.__name__, gid=self.get_gid())\n        self.update_positions(renderer)\n        if self._renderer is not None:\n            if self.arrow_patch is not None:\n                if self.arrow_patch.figure is None and self.figure is not None:\n                    self.arrow_patch.figure = self.figure\n                self.arrow_patch.draw(renderer)\n            self.patch.draw(renderer)\n            self.offsetbox.draw(renderer)\n        renderer.close_group(self.__class__.__name__)\n        self.stale = False\n</replace>"
          },
          "output": {
            "diff": "--- lib/matplotlib/offsetbox.py\n+++ lib/matplotlib/offsetbox.py\n@@ -1455,12 +1455,13 @@\n             return\n         renderer.open_group(self.__class__.__name__, gid=self.get_gid())\n         self.update_positions(renderer)\n-        if self.arrow_patch is not None:\n-            if self.arrow_patch.figure is None and self.figure is not None:\n-                self.arrow_patch.figure = self.figure\n-            self.arrow_patch.draw(renderer)\n-        self.patch.draw(renderer)\n-        self.offsetbox.draw(renderer)\n+        if self._renderer is not None:\n+            if self.arrow_patch is not None:\n+                if self.arrow_patch.figure is None and self.figure is not None:\n+                    self.arrow_patch.figure = self.figure\n+                self.arrow_patch.draw(renderer)\n+            self.patch.draw(renderer)\n+            self.offsetbox.draw(renderer)\n         renderer.close_group(self.__class__.__name__)\n         self.stale = False\n \n",
            "message": "Applied the change to lib/matplotlib/offsetbox.py.\n\n<scratch_pad>\n```xml\n</scratch_pad>",
            "verification_errors": []
          },
          "input_tokens": 4780,
          "output_tokens": 207,
          "retry_message": null,
          "completion_cost": 0.017445000000000002
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": "--- lib/matplotlib/offsetbox.py\n+++ lib/matplotlib/offsetbox.py\n@@ -1455,12 +1455,13 @@\n             return\n         renderer.open_group(self.__class__.__name__, gid=self.get_gid())\n         self.update_positions(renderer)\n-        if self.arrow_patch is not None:\n-            if self.arrow_patch.figure is None and self.figure is not None:\n-                self.arrow_patch.figure = self.figure\n-            self.arrow_patch.draw(renderer)\n-        self.patch.draw(renderer)\n-        self.offsetbox.draw(renderer)\n+        if self._renderer is not None:\n+            if self.arrow_patch is not None:\n+                if self.arrow_patch.figure is None and self.figure is not None:\n+                    self.arrow_patch.figure = self.figure\n+                self.arrow_patch.draw(renderer)\n+            self.patch.draw(renderer)\n+            self.offsetbox.draw(renderer)\n         renderer.close_group(self.__class__.__name__)\n         self.stale = False\n \n",
        "model": "deepseek-coder",
        "message": "Applied the change to lib/matplotlib/offsetbox.py.\n\n<scratch_pad>\n```xml\n</scratch_pad>",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": [],
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "finish",
            "finish": "The modification ensures that the `AnnotationBbox.draw` method checks for a valid renderer before performing drawing operations, which should resolve the reported `AttributeError`.",
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "The applied change correctly ensures that `self._renderer` is checked for `None` before proceeding with the draw operations in the `AnnotationBbox.draw` method. This should prevent the `AttributeError` by ensuring that the renderer is valid before any drawing actions are attempted.",
            "instructions": null
          },
          "output": {
            "message": "The modification ensures that the `AnnotationBbox.draw` method checks for a valid renderer before performing drawing operations, which should resolve the reported `AttributeError`."
          },
          "input_tokens": 4729,
          "output_tokens": 151,
          "retry_message": null,
          "completion_cost": 0.016452
        }
      ]
    },
    {
      "name": "Finished",
      "state": {
        "model": "gpt-4o",
        "output": {
          "model": "deepseek-coder",
          "temperature": 1.6
        },
        "message": "The modification ensures that the `AnnotationBbox.draw` method checks for a valid renderer before performing drawing operations, which should resolve the reported `AttributeError`.",
        "max_tokens": 1000,
        "temperature": 0.0,
        "max_iterations": null,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "[Bug]: Attribute Error combining matplotlib 3.7.1 and mplcursor on data selection\n### Bug summary\r\n\r\nIf you combine mplcursor and matplotlib 3.7.1, you'll get an `AttributeError: 'NoneType' object has no attribute 'canvas'` after clicking a few data points. Henceforth, selecting a new data point will trigger the same traceback. Otherwise, it works fine. \r\n\r\n### Code for reproduction\r\n\r\n```python\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport mplcursors as mpl\r\n\r\nx = np.arange(1, 11)    \r\ny1 = x\r\n\r\nplt.scatter(x,y1)\r\n\r\nmpl.cursor()\r\nplt.show()\r\n```\r\n\r\n\r\n### Actual outcome\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\MrAni\\Python\\miniconda3\\lib\\site-packages\\matplotlib\\cbook\\__init__.py\", line 304, in process\r\n    func(*args, **kwargs)\r\n  File \"C:\\Users\\MrAni\\Python\\miniconda3\\lib\\site-packages\\matplotlib\\offsetbox.py\", line 1550, in on_release\r\n    if self._check_still_parented() and self.got_artist:\r\n  File \"C:\\Users\\MrAni\\Python\\miniconda3\\lib\\site-packages\\matplotlib\\offsetbox.py\", line 1560, in _check_still_parented\r\n    self.disconnect()\r\n  File \"C:\\Users\\MrAni\\Python\\miniconda3\\lib\\site-packages\\matplotlib\\offsetbox.py\", line 1568, in disconnect\r\n    self.canvas.mpl_disconnect(cid)\r\n  File \"C:\\Users\\MrAni\\Python\\miniconda3\\lib\\site-packages\\matplotlib\\offsetbox.py\", line 1517, in <lambda>\r\n    canvas = property(lambda self: self.ref_artist.figure.canvas)\r\nAttributeError: 'NoneType' object has no attribute 'canvas'\r\n```\r\n\r\n### Expected outcome\r\n\r\nNo terminal output\r\n\r\n### Additional information\r\n\r\nUsing matplotlib 3.7.0 or lower works fine. Using a conda install or pip install doesn't affect the output. \r\n\r\n### Operating system\r\n\r\nWindows 11 and Windwos 10 \r\n\r\n### Matplotlib Version\r\n\r\n3.7.1\r\n\r\n### Matplotlib Backend\r\n\r\nQtAgg\r\n\r\n### Python version\r\n\r\n3.9.16\r\n\r\n### Jupyter version\r\n\r\n_No response_\r\n\r\n### Installation\r\n\r\nconda\n"
}