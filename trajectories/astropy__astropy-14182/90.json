{
  "info": {
    "duration": 240.1606273651123,
    "submission": "diff --git a/astropy/io/ascii/rst.py b/astropy/io/ascii/rst.py\nindex abdeba8ef..c4041eddb 100644\n--- a/astropy/io/ascii/rst.py\n+++ b/astropy/io/ascii/rst.py\n@@ -57,8 +57,10 @@ class RST(FixedWidth):\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n \n-    def __init__(self):\n-        super().__init__(delimiter_pad=None, bookend=False)\n+    def __init__(self, header_rows=None):\n+        if header_rows is None:\n+            header_rows = []\n+        super().__init__(delimiter_pad=None, bookend=False, header_rows=header_rows)\n \n     def write(self, lines):\n         lines = super().write(lines)\n",
    "total_cost": 0.169848,
    "instance_id": "astropy__astropy-14182",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue is about adding support for header rows in the RestructuredText (RST) output format for Astropy tables. The error trace indicates that the RST writer does not recognize the 'header_rows' keyword argument. Relevant files include those related to ASCII I/O in the astropy.io.ascii package, especially rst.py and fixedwidth.py, as these handle the formats mentioned in the issue. Initial investigations suggest that the RST class in rst.py needs modification to accept and process 'header_rows'.",
            "search_requests": [
              {
                "query": "RST.__init__() got an unexpected keyword argument 'header_rows'",
                "class_names": [
                  "RST"
                ],
                "code_snippet": null,
                "file_pattern": "**/astropy/io/ascii/rst.py",
                "function_names": []
              },
              {
                "query": "header_rows",
                "class_names": [
                  "FixedWidth",
                  "FixedWidthData"
                ],
                "code_snippet": null,
                "file_pattern": "**/astropy/io/ascii/fixedwidth.py",
                "function_names": [
                  "write"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 1,
                "tokens": 155,
                "span_id": "RST",
                "file_path": "astropy/io/ascii/rst.py"
              },
              {
                "rank": 1,
                "tokens": 30,
                "span_id": "RST.write",
                "file_path": "astropy/io/ascii/rst.py"
              },
              {
                "rank": 0,
                "tokens": 320,
                "span_id": "FixedWidthData.write",
                "file_path": "astropy/io/ascii/fixedwidth.py"
              },
              {
                "rank": 0,
                "tokens": 41,
                "span_id": "FixedWidthData",
                "file_path": "astropy/io/ascii/fixedwidth.py"
              },
              {
                "rank": 1,
                "tokens": 35,
                "span_id": "FixedWidthHeader.write",
                "file_path": "astropy/io/ascii/fixedwidth.py"
              },
              {
                "rank": 2,
                "tokens": 212,
                "span_id": "FixedWidth",
                "file_path": "astropy/io/ascii/fixedwidth.py"
              }
            ],
            "search_requests": [
              {
                "query": "RST.__init__() got an unexpected keyword argument 'header_rows'",
                "class_names": [
                  "RST"
                ],
                "code_snippet": null,
                "file_pattern": "**/astropy/io/ascii/rst.py",
                "function_names": []
              },
              {
                "query": "header_rows",
                "class_names": [
                  "FixedWidth",
                  "FixedWidthData"
                ],
                "code_snippet": null,
                "file_pattern": "**/astropy/io/ascii/fixedwidth.py",
                "function_names": [
                  "write"
                ]
              }
            ]
          },
          "input_tokens": 3532,
          "output_tokens": 277,
          "retry_message": null,
          "completion_cost": 0.014751
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 1,
            "tokens": 155,
            "span_id": "RST",
            "file_path": "astropy/io/ascii/rst.py"
          },
          {
            "rank": 1,
            "tokens": 30,
            "span_id": "RST.write",
            "file_path": "astropy/io/ascii/rst.py"
          },
          {
            "rank": 0,
            "tokens": 320,
            "span_id": "FixedWidthData.write",
            "file_path": "astropy/io/ascii/fixedwidth.py"
          },
          {
            "rank": 0,
            "tokens": 41,
            "span_id": "FixedWidthData",
            "file_path": "astropy/io/ascii/fixedwidth.py"
          },
          {
            "rank": 1,
            "tokens": 35,
            "span_id": "FixedWidthHeader.write",
            "file_path": "astropy/io/ascii/fixedwidth.py"
          },
          {
            "rank": 2,
            "tokens": 212,
            "span_id": "FixedWidth",
            "file_path": "astropy/io/ascii/fixedwidth.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue requires support for 'header_rows' in the RestructuredText (RST) output format. The search results include relevant code spans in two files: 'astropy/io/ascii/rst.py' and 'astropy/io/ascii/fixedwidth.py'. In 'rst.py', the 'RST' class is defined as a subclass of 'FixedWidth'. It includes 'RST.__init__', which does not accept the 'header_rows' keyword argument, indicating the issue's source. Additionally, 'RST.write' method extends 'FixedWidth.write'. In 'fixedwidth.py', the 'FixedWidth' class and its subclasses handle 'header_rows' keyword appropriately, as seen in the 'FixedWidth.__init__' and 'FixedWidthData.write' methods. The current codebase does not support 'header_rows' in the RST class but shows it is handled correctly in the FixedWidth class. To address the issue, the 'RST' class must be updated to accept and use 'header_rows' similarly to the 'FixedWidth' class.",
            "identified_spans": [
              {
                "span_ids": [
                  "RST.__init__",
                  "RST.write"
                ],
                "file_path": "astropy/io/ascii/rst.py"
              },
              {
                "span_ids": [
                  "FixedWidth.__init__",
                  "FixedWidthData.write"
                ],
                "file_path": "astropy/io/ascii/fixedwidth.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 3093,
          "output_tokens": 371,
          "retry_message": null,
          "completion_cost": 0.014844000000000001
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The issue is about adding support for header rows in the RestructuredText (RST) output format for Astropy tables. The error trace indicates that the RST writer does not recognize the 'header_rows' keyword argument. Relevant files include those related to ASCII I/O in the astropy.io.ascii package, especially rst.py and fixedwidth.py, as these handle the formats mentioned in the issue. Initial investigations suggest that the RST class in rst.py needs modification to accept and process 'header_rows'.",
            "search_suggestions": "Check the RST class in rst.py to add support for the 'header_rows' keyword argument. Look into how 'header_rows' is processed in the FixedWidth class in fixedwidth.py for reference."
          },
          "output": {
            "message": "Check the RST class in rst.py to add support for the 'header_rows' keyword argument. Look into how 'header_rows' is processed in the FixedWidth class in fixedwidth.py for reference."
          },
          "input_tokens": 2376,
          "output_tokens": 199,
          "retry_message": null,
          "completion_cost": 0.010113
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Check the RST class in rst.py to add support for the 'header_rows' keyword argument. Look into how 'header_rows' is processed in the FixedWidth class in fixedwidth.py for reference.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "To add support for the 'header_rows' keyword argument in the RST class, we need to update its constructor to accept this argument and pass it on to the parent FixedWidth class. This will allow the RST class to process 'header_rows' in the same way as the FixedWidth class, utilizing the existing functionality for handling header rows. The reference implementation from FixedWidth shows how to manage 'header_rows' in detail, and this approach can be adapted for the RST class.",
            "search_requests": [
              {
                "query": "add 'header_rows' keyword argument to RST class",
                "class_names": [
                  "RST"
                ],
                "code_snippet": null,
                "file_pattern": "**/astropy/io/ascii/rst.py",
                "function_names": [
                  "__init__"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 155,
                "span_id": "RST",
                "file_path": "astropy/io/ascii/rst.py"
              }
            ],
            "search_requests": [
              {
                "query": "add 'header_rows' keyword argument to RST class",
                "class_names": [
                  "RST"
                ],
                "code_snippet": null,
                "file_pattern": "**/astropy/io/ascii/rst.py",
                "function_names": [
                  "__init__"
                ]
              }
            ]
          },
          "input_tokens": 4725,
          "output_tokens": 223,
          "retry_message": null,
          "completion_cost": 0.01752
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 155,
            "span_id": "RST",
            "file_path": "astropy/io/ascii/rst.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue requests the addition of header rows support in the RestructuredText (RST) output. The current context already provides snippets from `astropy/io/ascii/rst.py` and `astropy/io/ascii/fixedwidth.py`, which are relevant because they show the implementation of RST and fixed-width formats. The search results continue to provide more context on the RST class, including its data and header classes. The main issue is that the RST class does not currently support the 'header_rows' keyword argument, as seen in the error traceback. A potential solution would involve modifying the RST class to accept and process 'header_rows', possibly by incorporating logic similar to what is seen in the FixedWidth class. This would require adding the 'header_rows' parameter to the `__init__` method of the RST class and ensuring that it correctly processes header rows during the writing process. The provided code spans are relevant in that they give insight into the structure of the RST class and its relationship with the FixedWidth class, indicating where changes may need to be made.",
            "identified_spans": [
              {
                "span_ids": [
                  "RST",
                  "RST.__init__"
                ],
                "file_path": "astropy/io/ascii/rst.py"
              },
              {
                "span_ids": [
                  "FixedWidthData",
                  "FixedWidthData.write",
                  "FixedWidth",
                  "FixedWidth.__init__"
                ],
                "file_path": "astropy/io/ascii/fixedwidth.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 2793,
          "output_tokens": 378,
          "retry_message": null,
          "completion_cost": 0.014049000000000002
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "To add support for the 'header_rows' keyword argument in the RST class, we need to update its constructor to accept this argument and pass it on to the parent FixedWidth class. This will allow the RST class to process 'header_rows' in the same way as the FixedWidth class, utilizing the existing functionality for handling header rows. The reference implementation from FixedWidth shows how to manage 'header_rows' in detail, and this approach can be adapted for the RST class.",
            "search_suggestions": "Look into the FixedWidth class and its subclasses for the implementation of handling the 'header_rows' keyword argument. Then, adapt this implementation to the RST class by modifying its constructor."
          },
          "output": {
            "message": "Look into the FixedWidth class and its subclasses for the implementation of handling the 'header_rows' keyword argument. Then, adapt this implementation to the RST class by modifying its constructor."
          },
          "input_tokens": 2832,
          "output_tokens": 179,
          "retry_message": null,
          "completion_cost": 0.011181
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Look into the FixedWidth class and its subclasses for the implementation of handling the 'header_rows' keyword argument. Then, adapt this implementation to the RST class by modifying its constructor.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The RST class currently does not accept the 'header_rows' keyword argument. To add this functionality, we need to modify the constructor of the RST class to include this argument and pass it to the parent FixedWidth class. This will enable the RST class to handle 'header_rows' in a similar manner to the FixedWidth class. By doing so, we align the functionality of the RST class with the requirements specified in the issue.",
            "search_requests": [
              {
                "query": "modify RST class constructor to accept 'header_rows' keyword argument",
                "class_names": [
                  "RST"
                ],
                "code_snippet": "super().__init__(delimiter_pad=None, bookend=False)",
                "file_pattern": "**/astropy/io/ascii/rst.py",
                "function_names": [
                  "__init__"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 155,
                "span_id": "RST",
                "file_path": "astropy/io/ascii/rst.py"
              }
            ],
            "search_requests": [
              {
                "query": "modify RST class constructor to accept 'header_rows' keyword argument",
                "class_names": [
                  "RST"
                ],
                "code_snippet": "super().__init__(delimiter_pad=None, bookend=False)",
                "file_pattern": "**/astropy/io/ascii/rst.py",
                "function_names": [
                  "__init__"
                ]
              }
            ]
          },
          "input_tokens": 5460,
          "output_tokens": 219,
          "retry_message": null,
          "completion_cost": 0.019665
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 155,
            "span_id": "RST",
            "file_path": "astropy/io/ascii/rst.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue is seeking support for header rows in the RestructuredText (RST) output format within the 'astropy.table' module. Specifically, the user wants the RST writer to handle custom header rows, similar to how the 'ascii.fixed_width' format does. The current context indicates that the RST class does not accept the 'header_rows' keyword argument, resulting in a TypeError. The relevant code spans from the provided context include the RST class definition, its __init__ method, and its write method, which currently do not account for custom header rows. Additionally, the FixedWidth class and its __init__ method show how 'header_rows' are handled in the 'ascii.fixed_width' format. The updated search results confirm the presence of the RST class without modifications to handle 'header_rows'. Given this, the task is to identify the part of the codebase that needs to be modified to add support for the 'header_rows' argument to the RST writer. The identified spans focus on the RST class and its methods, highlighting where changes need to be made to integrate the functionality found in the FixedWidth class for handling custom header rows.",
            "identified_spans": [
              {
                "span_ids": [
                  "RST",
                  "RST.__init__",
                  "SimpleRSTHeader",
                  "SimpleRSTData"
                ],
                "file_path": "astropy/io/ascii/rst.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 3367,
          "output_tokens": 342,
          "retry_message": null,
          "completion_cost": 0.015231000000000001
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The RST class currently does not accept the 'header_rows' keyword argument. This should be added to the RST class's constructor to align with the functionality required by the issue. The modification should mirror how 'header_rows' is handled in the FixedWidth class.",
            "search_suggestions": "Search and review the FixedWidth class implementation in the file context to understand how 'header_rows' is managed and mimic this functionality in the RST class."
          },
          "output": {},
          "input_tokens": 3146,
          "output_tokens": 128,
          "retry_message": null,
          "completion_cost": 0.011358
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "RST.__init__",
            "file_path": "astropy/io/ascii/rst.py",
            "scratch_pad": "To support header rows in the RestructuredText (RST) output, we need to update the RST class to accept a 'header_rows' keyword argument in its constructor and pass it down to the base class initialization. This will allow the RST class to handle additional header rows as specified.",
            "instructions": "Update the RST class to accept 'header_rows' keyword argument and pass it to the base class initialization."
          },
          "output": {
            "span_id": "RST.__init__",
            "end_line": 61,
            "file_path": "astropy/io/ascii/rst.py",
            "start_line": 60,
            "instructions": "Update the RST class to accept 'header_rows' keyword argument and pass it to the base class initialization."
          },
          "input_tokens": 3605,
          "output_tokens": 148,
          "retry_message": null,
          "completion_cost": 0.013035
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "RST.__init__",
        "end_line": 61,
        "file_path": "astropy/io/ascii/rst.py",
        "max_tokens": 1000,
        "start_line": 60,
        "temperature": 1.6,
        "instructions": "Update the RST class to accept 'header_rows' keyword argument and pass it to the base class initialization.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "<replace>\n    def __init__(self, header_rows=None):\n        if header_rows is None:\n            header_rows = []\n        super().__init__(delimiter_pad=None, bookend=False, header_rows=header_rows)\n</replace>"
          },
          "output": {
            "diff": "--- astropy/io/ascii/rst.py\n+++ astropy/io/ascii/rst.py\n@@ -57,8 +57,10 @@\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n \n-    def __init__(self):\n-        super().__init__(delimiter_pad=None, bookend=False)\n+    def __init__(self, header_rows=None):\n+        if header_rows is None:\n+            header_rows = []\n+        super().__init__(delimiter_pad=None, bookend=False, header_rows=header_rows)\n \n     def write(self, lines):\n         lines = super().write(lines)\n",
            "message": "Applied the change to astropy/io/ascii/rst.py.",
            "verification_errors": []
          },
          "input_tokens": 4255,
          "output_tokens": 63,
          "retry_message": null,
          "completion_cost": 0.01371
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": "--- astropy/io/ascii/rst.py\n+++ astropy/io/ascii/rst.py\n@@ -57,8 +57,10 @@\n     data_class = SimpleRSTData\n     header_class = SimpleRSTHeader\n \n-    def __init__(self):\n-        super().__init__(delimiter_pad=None, bookend=False)\n+    def __init__(self, header_rows=None):\n+        if header_rows is None:\n+            header_rows = []\n+        super().__init__(delimiter_pad=None, bookend=False, header_rows=header_rows)\n \n     def write(self, lines):\n         lines = super().write(lines)\n",
        "model": "deepseek-coder",
        "message": "Applied the change to astropy/io/ascii/rst.py.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": [],
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "finish",
            "finish": "The RST class now correctly accepts the 'header_rows' keyword argument and passes it down to the base class initialization, which aligns with the requirements specified in the issue. No additional changes are necessary.",
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "The initial change to the RST class to accept 'header_rows' and pass it to the base class initialization has been successfully applied. The code now supports the 'header_rows' keyword argument as required. No further changes are needed to achieve the functionality described in the issue.",
            "instructions": null
          },
          "output": {
            "message": "The RST class now correctly accepts the 'header_rows' keyword argument and passes it down to the base class initialization, which aligns with the requirements specified in the issue. No additional changes are necessary."
          },
          "input_tokens": 3997,
          "output_tokens": 160,
          "retry_message": null,
          "completion_cost": 0.014391000000000001
        }
      ]
    },
    {
      "name": "Finished",
      "state": {
        "model": "gpt-4o",
        "output": {
          "model": "deepseek-coder",
          "temperature": 1.6
        },
        "message": "The RST class now correctly accepts the 'header_rows' keyword argument and passes it down to the base class initialization, which aligns with the requirements specified in the issue. No additional changes are necessary.",
        "max_tokens": 1000,
        "temperature": 0.0,
        "max_iterations": null,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "Please support header rows in RestructuredText output\n### Description\r\n\r\nIt would be great if the following would work:\r\n\r\n```Python\r\n>>> from astropy.table import QTable\r\n>>> import astropy.units as u\r\n>>> import sys\r\n>>> tbl = QTable({'wave': [350,950]*u.nm, 'response': [0.7, 1.2]*u.count})\r\n>>> tbl.write(sys.stdout,  format=\"ascii.rst\")\r\n===== ========\r\n wave response\r\n===== ========\r\n350.0      0.7\r\n950.0      1.2\r\n===== ========\r\n>>> tbl.write(sys.stdout,  format=\"ascii.fixed_width\", header_rows=[\"name\", \"unit\"])\r\n|  wave | response |\r\n|    nm |       ct |\r\n| 350.0 |      0.7 |\r\n| 950.0 |      1.2 |\r\n>>> tbl.write(sys.stdout,  format=\"ascii.rst\", header_rows=[\"name\", \"unit\"])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3/dist-packages/astropy/table/connect.py\", line 129, in __call__\r\n    self.registry.write(instance, *args, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/astropy/io/registry/core.py\", line 369, in write\r\n    return writer(data, *args, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/astropy/io/ascii/connect.py\", line 26, in io_write\r\n    return write(table, filename, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/astropy/io/ascii/ui.py\", line 856, in write\r\n    writer = get_writer(Writer=Writer, fast_writer=fast_writer, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/astropy/io/ascii/ui.py\", line 800, in get_writer\r\n    writer = core._get_writer(Writer, fast_writer, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/astropy/io/ascii/core.py\", line 1719, in _get_writer\r\n    writer = Writer(**writer_kwargs)\r\nTypeError: RST.__init__() got an unexpected keyword argument 'header_rows'\r\n```\r\n\r\n\r\n### Additional context\r\n\r\nRestructuredText output is a great way to fill autogenerated documentation with content, so having this flexible makes the life easier `:-)`\r\n\r\n\n"
}