{
  "info": {
    "duration": 112.8448920249939,
    "submission": "",
    "total_cost": 0.124086,
    "instance_id": "pytest-dev__pytest-7168",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue is related to an INTERNALERROR when an exception occurs in the `__repr__` method of a class, which is causing a failure with a 'RuntimeError: No active exception to reraise'. To debug this, it's essential to locate the code responsible for handling exceptions in the `__repr__` method, particularly within the pytest framework. Based on the provided stack trace, the error occurs during the creation of a `TestReport` or while representing an exception. The search should focus on the `pytest_runtest_makereport` hook implementation and the `repr_failure` functions of relevant classes like `Function` and `Node`.",
            "search_requests": [
              {
                "query": "pytest_runtest_makereport",
                "class_names": [
                  "Node",
                  "Function"
                ],
                "code_snippet": null,
                "file_pattern": "src/_pytest/**/*.py",
                "function_names": [
                  "repr_failure"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 211,
                "span_id": "Function._prunetraceback",
                "file_path": "src/_pytest/python.py"
              },
              {
                "rank": 0,
                "tokens": 63,
                "span_id": "Function.repr_failure",
                "file_path": "src/_pytest/python.py"
              },
              {
                "rank": 53,
                "tokens": 41,
                "span_id": "Function",
                "file_path": "src/_pytest/python.py"
              },
              {
                "rank": 53,
                "tokens": 40,
                "span_id": "Function._getobj",
                "file_path": "src/_pytest/python.py"
              },
              {
                "rank": 53,
                "tokens": 21,
                "span_id": "Function._initrequest",
                "file_path": "src/_pytest/python.py"
              },
              {
                "rank": 53,
                "tokens": 42,
                "span_id": "Function.from_parent",
                "file_path": "src/_pytest/python.py"
              },
              {
                "rank": 53,
                "tokens": 34,
                "span_id": "Function.setup",
                "file_path": "src/_pytest/python.py"
              },
              {
                "rank": 53,
                "tokens": 42,
                "span_id": "Function.funcargnames",
                "file_path": "src/_pytest/python.py"
              },
              {
                "rank": 53,
                "tokens": 30,
                "span_id": "Function.runtest",
                "file_path": "src/_pytest/python.py"
              },
              {
                "rank": 53,
                "tokens": 23,
                "span_id": "Function.function",
                "file_path": "src/_pytest/python.py"
              },
              {
                "rank": 53,
                "tokens": 28,
                "span_id": "Function._pyfuncitem",
                "file_path": "src/_pytest/python.py"
              },
              {
                "rank": 1,
                "tokens": 314,
                "span_id": "Node._repr_failure_py",
                "file_path": "src/_pytest/nodes.py"
              },
              {
                "rank": 1,
                "tokens": 72,
                "span_id": "Node.repr_failure",
                "file_path": "src/_pytest/nodes.py"
              },
              {
                "rank": 67,
                "tokens": 15,
                "span_id": "Node.listnames",
                "file_path": "src/_pytest/nodes.py"
              },
              {
                "rank": 67,
                "tokens": 75,
                "span_id": "Node.get_closest_marker",
                "file_path": "src/_pytest/nodes.py"
              },
              {
                "rank": 67,
                "tokens": 60,
                "span_id": "Node.addfinalizer",
                "file_path": "src/_pytest/nodes.py"
              },
              {
                "rank": 67,
                "tokens": 53,
                "span_id": "Node.getparent",
                "file_path": "src/_pytest/nodes.py"
              },
              {
                "rank": 67,
                "tokens": 52,
                "span_id": "Node.iter_markers",
                "file_path": "src/_pytest/nodes.py"
              },
              {
                "rank": 67,
                "tokens": 51,
                "span_id": "Node.listextrakeywords",
                "file_path": "src/_pytest/nodes.py"
              },
              {
                "rank": 67,
                "tokens": 84,
                "span_id": "Node.iter_markers_with_node",
                "file_path": "src/_pytest/nodes.py"
              },
              {
                "rank": 67,
                "tokens": 13,
                "span_id": "Node._prunetraceback",
                "file_path": "src/_pytest/nodes.py"
              },
              {
                "rank": 159,
                "tokens": 142,
                "span_id": "Collector.repr_failure",
                "file_path": "src/_pytest/nodes.py"
              },
              {
                "rank": 7,
                "tokens": 461,
                "span_id": "DoctestItem.repr_failure",
                "file_path": "src/_pytest/doctest.py"
              }
            ],
            "search_requests": [
              {
                "query": "pytest_runtest_makereport",
                "class_names": [
                  "Node",
                  "Function"
                ],
                "code_snippet": null,
                "file_pattern": "src/_pytest/**/*.py",
                "function_names": [
                  "repr_failure"
                ]
              }
            ]
          },
          "input_tokens": 5980,
          "output_tokens": 245,
          "retry_message": null,
          "completion_cost": 0.021615000000000002
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 211,
            "span_id": "Function._prunetraceback",
            "file_path": "src/_pytest/python.py"
          },
          {
            "rank": 0,
            "tokens": 63,
            "span_id": "Function.repr_failure",
            "file_path": "src/_pytest/python.py"
          },
          {
            "rank": 53,
            "tokens": 41,
            "span_id": "Function",
            "file_path": "src/_pytest/python.py"
          },
          {
            "rank": 53,
            "tokens": 40,
            "span_id": "Function._getobj",
            "file_path": "src/_pytest/python.py"
          },
          {
            "rank": 53,
            "tokens": 21,
            "span_id": "Function._initrequest",
            "file_path": "src/_pytest/python.py"
          },
          {
            "rank": 53,
            "tokens": 42,
            "span_id": "Function.from_parent",
            "file_path": "src/_pytest/python.py"
          },
          {
            "rank": 53,
            "tokens": 34,
            "span_id": "Function.setup",
            "file_path": "src/_pytest/python.py"
          },
          {
            "rank": 53,
            "tokens": 42,
            "span_id": "Function.funcargnames",
            "file_path": "src/_pytest/python.py"
          },
          {
            "rank": 53,
            "tokens": 30,
            "span_id": "Function.runtest",
            "file_path": "src/_pytest/python.py"
          },
          {
            "rank": 53,
            "tokens": 23,
            "span_id": "Function.function",
            "file_path": "src/_pytest/python.py"
          },
          {
            "rank": 53,
            "tokens": 28,
            "span_id": "Function._pyfuncitem",
            "file_path": "src/_pytest/python.py"
          },
          {
            "rank": 1,
            "tokens": 314,
            "span_id": "Node._repr_failure_py",
            "file_path": "src/_pytest/nodes.py"
          },
          {
            "rank": 1,
            "tokens": 72,
            "span_id": "Node.repr_failure",
            "file_path": "src/_pytest/nodes.py"
          },
          {
            "rank": 67,
            "tokens": 15,
            "span_id": "Node.listnames",
            "file_path": "src/_pytest/nodes.py"
          },
          {
            "rank": 67,
            "tokens": 75,
            "span_id": "Node.get_closest_marker",
            "file_path": "src/_pytest/nodes.py"
          },
          {
            "rank": 67,
            "tokens": 60,
            "span_id": "Node.addfinalizer",
            "file_path": "src/_pytest/nodes.py"
          },
          {
            "rank": 67,
            "tokens": 53,
            "span_id": "Node.getparent",
            "file_path": "src/_pytest/nodes.py"
          },
          {
            "rank": 67,
            "tokens": 52,
            "span_id": "Node.iter_markers",
            "file_path": "src/_pytest/nodes.py"
          },
          {
            "rank": 67,
            "tokens": 51,
            "span_id": "Node.listextrakeywords",
            "file_path": "src/_pytest/nodes.py"
          },
          {
            "rank": 67,
            "tokens": 84,
            "span_id": "Node.iter_markers_with_node",
            "file_path": "src/_pytest/nodes.py"
          },
          {
            "rank": 67,
            "tokens": 13,
            "span_id": "Node._prunetraceback",
            "file_path": "src/_pytest/nodes.py"
          },
          {
            "rank": 159,
            "tokens": 142,
            "span_id": "Collector.repr_failure",
            "file_path": "src/_pytest/nodes.py"
          },
          {
            "rank": 7,
            "tokens": 461,
            "span_id": "DoctestItem.repr_failure",
            "file_path": "src/_pytest/doctest.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue involves an INTERNALERROR which occurs when an exception is raised in the `__repr__` method of a class. This error propagates through the pytest framework, causing the entire test session to fail. The minimal code provided to reproduce the issue includes a class `SomeClass` with `__getattribute__` and `__repr__` methods that raise exceptions, and a test function `test()` that accesses an attribute of `SomeClass`. The traceback indicates that the error occurs during the execution of `pytest_runtest_makereport`, specifically in the `repr_failure` method of the `Function` class. The search results include relevant sections from `src/_pytest/python.py` and `src/_pytest/nodes.py`, particularly the `Function` class and its methods such as `repr_failure`, `_repr_failure_py`, and `_prunetraceback`. These methods are central to reporting test failures and handling exceptions within the pytest framework. The provided code spans are directly related to the handling and representation of exceptions, which are critical for addressing the reported issue.",
            "identified_spans": [
              {
                "span_ids": [
                  "Function.repr_failure",
                  "Function._repr_failure_py",
                  "Function._prunetraceback"
                ],
                "file_path": "src/_pytest/python.py"
              },
              {
                "span_ids": [
                  "Node._repr_failure_py",
                  "Node._prunetraceback"
                ],
                "file_path": "src/_pytest/nodes.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 8655,
          "output_tokens": 376,
          "retry_message": null,
          "completion_cost": 0.031605
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": true,
            "relevant": true,
            "scratch_pad": "The issue is related to an INTERNALERROR when an exception occurs in the `__repr__` method of a class, which is causing a failure with a 'RuntimeError: No active exception to reraise'. The file context provided includes relevant parts of the pytest framework, specifically the `Function` class and the `Node` class. These are key components where the representation of failures and handling of exceptions during test execution are managed. The `repr_failure` method in the `Function` class and the `_repr_failure_py` method in the `Node` class are where the representation of exceptions is controlled. While the provided file context does not include all possible helper functions or detailed error handling mechanisms within these classes, it does encompass the primary areas responsible for the reported issue. Therefore, the relevant code for addressing the issue in the context of exception handling within the `__repr__` method is mostly present.",
            "search_suggestions": null
          },
          "output": {},
          "input_tokens": 6186,
          "output_tokens": 225,
          "retry_message": null,
          "completion_cost": 0.021933
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": null,
            "file_path": "src/_pytest/_io/saferepr.py",
            "scratch_pad": "The issue occurs because `SomeClass` raises an exception when `__repr__` is called, which leads to an `INTERNALERROR` in pytest's error reporting. To handle this, we need to catch exceptions in `repr(obj)` in `saferepr.py` to ensure that the exception handling doesn't break due to an unexpected exception in `__repr__`.",
            "instructions": "Modify the `repr_instance` method in `_pytest/_io/saferepr.py` to handle exceptions that may be raised during the `repr(x)` call. Use a try-except block to catch any exceptions and provide a fallback representation if `repr(x)` fails."
          },
          "output": null,
          "input_tokens": 7065,
          "output_tokens": 198,
          "retry_message": "You must either provide an apply_change action or finish.",
          "completion_cost": 0.024165000000000002
        },
        {
          "action": {
            "action": "finish",
            "finish": "Finish the task due to the inability to directly apply changes as the necessary code span is not included in the provided context. The solution outlined involves modifying `saferepr.py` to include exception handling, which cannot be executed with the current context.",
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "Since the necessary files and code spans to directly apply changes within the provided context do not include `saferepr.py`, we cannot proceed with the `apply_change` action. Instead, we should finish the task as we've outlined the appropriate way to handle the issue, which involves modifying `saferepr.py` to include exception handling in the `repr_instance` method.",
            "instructions": null
          },
          "output": {
            "message": "Finish the task due to the inability to directly apply changes as the necessary code span is not included in the provided context. The solution outlined involves modifying `saferepr.py` to include exception handling, which cannot be executed with the current context."
          },
          "input_tokens": 7296,
          "output_tokens": 192,
          "retry_message": null,
          "completion_cost": 0.024768000000000002
        }
      ]
    },
    {
      "name": "Finished",
      "state": {
        "model": "gpt-4o",
        "output": {
          "model": "deepseek-coder",
          "temperature": 1.6
        },
        "message": "Finish the task due to the inability to directly apply changes as the necessary code span is not included in the provided context. The solution outlined involves modifying `saferepr.py` to include exception handling, which cannot be executed with the current context.",
        "max_tokens": 1000,
        "temperature": 0.0,
        "max_iterations": null,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "INTERNALERROR when exception in __repr__\nMinimal code to reproduce the issue: \r\n```python\r\nclass SomeClass:\r\n    def __getattribute__(self, attr):\r\n        raise\r\n    def __repr__(self):\r\n        raise\r\ndef test():\r\n    SomeClass().attr\r\n```\r\nSession traceback:\r\n```\r\n============================= test session starts ==============================\r\nplatform darwin -- Python 3.8.1, pytest-5.4.1, py-1.8.1, pluggy-0.13.1 -- /usr/local/opt/python@3.8/bin/python3.8\r\ncachedir: .pytest_cache\r\nrootdir: ******\r\nplugins: asyncio-0.10.0, mock-3.0.0, cov-2.8.1\r\ncollecting ... collected 1 item\r\n\r\ntest_pytest.py::test \r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/main.py\", line 191, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/main.py\", line 247, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\", line 84, in <lambda>\r\nINTERNALERROR>     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/main.py\", line 272, in pytest_runtestloop\r\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\", line 84, in <lambda>\r\nINTERNALERROR>     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/runner.py\", line 85, in pytest_runtest_protocol\r\nINTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/runner.py\", line 100, in runtestprotocol\r\nINTERNALERROR>     reports.append(call_and_report(item, \"call\", log))\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/runner.py\", line 188, in call_and_report\r\nINTERNALERROR>     report = hook.pytest_runtest_makereport(item=item, call=call)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\", line 84, in <lambda>\r\nINTERNALERROR>     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 203, in _multicall\r\nINTERNALERROR>     gen.send(outcome)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/skipping.py\", line 129, in pytest_runtest_makereport\r\nINTERNALERROR>     rep = outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/runner.py\", line 260, in pytest_runtest_makereport\r\nINTERNALERROR>     return TestReport.from_item_and_call(item, call)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/reports.py\", line 294, in from_item_and_call\r\nINTERNALERROR>     longrepr = item.repr_failure(excinfo)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/python.py\", line 1513, in repr_failure\r\nINTERNALERROR>     return self._repr_failure_py(excinfo, style=style)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/nodes.py\", line 355, in _repr_failure_py\r\nINTERNALERROR>     return excinfo.getrepr(\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\", line 634, in getrepr\r\nINTERNALERROR>     return fmt.repr_excinfo(self)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\", line 879, in repr_excinfo\r\nINTERNALERROR>     reprtraceback = self.repr_traceback(excinfo_)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\", line 823, in repr_traceback\r\nINTERNALERROR>     reprentry = self.repr_traceback_entry(entry, einfo)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\", line 784, in repr_traceback_entry\r\nINTERNALERROR>     reprargs = self.repr_args(entry) if not short else None\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\", line 693, in repr_args\r\nINTERNALERROR>     args.append((argname, saferepr(argvalue)))\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 82, in saferepr\r\nINTERNALERROR>     return SafeRepr(maxsize).repr(obj)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 51, in repr\r\nINTERNALERROR>     s = _format_repr_exception(exc, x)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 23, in _format_repr_exception\r\nINTERNALERROR>     exc_info, obj.__class__.__name__, id(obj)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 47, in repr\r\nINTERNALERROR>     s = super().repr(x)\r\nINTERNALERROR>   File \"/usr/local/Cellar/python@3.8/3.8.1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/reprlib.py\", line 52, in repr\r\nINTERNALERROR>     return self.repr1(x, self.maxlevel)\r\nINTERNALERROR>   File \"/usr/local/Cellar/python@3.8/3.8.1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/reprlib.py\", line 62, in repr1\r\nINTERNALERROR>     return self.repr_instance(x, level)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 60, in repr_instance\r\nINTERNALERROR>     s = _format_repr_exception(exc, x)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 23, in _format_repr_exception\r\nINTERNALERROR>     exc_info, obj.__class__.__name__, id(obj)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 56, in repr_instance\r\nINTERNALERROR>     s = repr(x)\r\nINTERNALERROR>   File \"/Users/stiflou/Documents/projets/apischema/tests/test_pytest.py\", line 6, in __repr__\r\nINTERNALERROR>     raise\r\nINTERNALERROR> RuntimeError: No active exception to reraise\r\n\r\n============================ no tests ran in 0.09s ============================\r\n```\n"
}