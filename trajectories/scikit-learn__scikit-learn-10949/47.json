{
  "info": {
    "duration": 337.34543633461,
    "submission": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex fe1f7236e..db99fd130 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -576,7 +576,8 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n     if warn_on_dtype and dtype_orig is not None and array.dtype != dtype_orig:\n         msg = (\"Data with input dtype %s was converted to %s%s.\"\n                % (dtype_orig, array.dtype, context))\n-        warnings.warn(msg, DataConversionWarning)\n+        if isinstance(array_orig, pd.DataFrame):\n+            warnings.warn(msg, DataConversionWarning)\n \n     if copy and np.may_share_memory(array, array_orig):\n         array = np.array(array, dtype=dtype, order=order)\n",
    "total_cost": 0.173412,
    "instance_id": "scikit-learn__scikit-learn-10949",
    "evaluation_name": "temperature_sweep_250_samples_50_problems_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue is related to the `warn_on_dtype` parameter not working as expected with pandas DataFrame inputs in `check_array` function from `sklearn.utils.validation`. The expected behavior is that a `DataConversionWarning` is thrown when the input data type is 'object' and it's converted to 'float64'. However, no warning is thrown. To address this, we should focus our search on the `check_array` function in `sklearn.utils.validation` to understand why the warning isn't triggered for DataFrame inputs.",
            "search_requests": [
              {
                "query": "check_array warn_on_dtype pandas DataFrame",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": "**/sklearn/utils/validation.py",
                "function_names": [
                  "check_array"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 2132,
                "span_id": "check_array",
                "file_path": "sklearn/utils/validation.py"
              }
            ],
            "search_requests": [
              {
                "query": "check_array warn_on_dtype pandas DataFrame",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": "**/sklearn/utils/validation.py",
                "function_names": [
                  "check_array"
                ]
              }
            ]
          },
          "input_tokens": 3865,
          "output_tokens": 220,
          "retry_message": null,
          "completion_cost": 0.014895000000000002
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 2132,
            "span_id": "check_array",
            "file_path": "sklearn/utils/validation.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue is that the 'warn_on_dtype' parameter in the 'check_array' function from 'sklearn.utils.validation' does not trigger a DataConversionWarning when the input is a pandas DataFrame. The search results include the 'check_array' function, which is directly related to the issue. The function includes the 'warn_on_dtype' parameter, but it appears to handle warnings in various conversion scenarios without specifically targeting DataConversionWarning for pandas DataFrame inputs. It is crucial to ensure that any dtype conversion when the input is a DataFrame triggers the appropriate warning according to the 'warn_on_dtype' parameter. Review of the entire 'check_array' function helps in understanding its handling and potential areas where enhancements might be needed. Therefore, the identified code spans are directly relevant to the issue and provide a comprehensive context for addressing it.",
            "identified_spans": [
              {
                "span_ids": [
                  "_shape_repr",
                  "check_array"
                ],
                "file_path": "sklearn/utils/validation.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 3774,
          "output_tokens": 252,
          "retry_message": null,
          "completion_cost": 0.015102
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The file context includes the `check_array` function from `sklearn.utils.validation`, where `warn_on_dtype` is expected to control the behavior of issuing warnings on datatype conversions. The function is detailed and covers the handling of array inputs, including the case for DataFrame inputs. However, there is no explicit check for the conversion of DataFrames to prevent the warning from being issued when input is a pandas DataFrame and dtype is 'object'. Thus, the relevant code context is partially provided, lacking the specific handling for DataFrame inputs.",
            "search_suggestions": "Look for additional functions or methods within the `check_array` function that handle the specific case of pandas DataFrame inputs and where the `warn_on_dtype` parameter affects the behavior of issuing warnings during dtype conversion."
          },
          "output": {
            "message": "Look for additional functions or methods within the `check_array` function that handle the specific case of pandas DataFrame inputs and where the `warn_on_dtype` parameter affects the behavior of issuing warnings during dtype conversion."
          },
          "input_tokens": 3695,
          "output_tokens": 193,
          "retry_message": null,
          "completion_cost": 0.013980000000000001
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Look for additional functions or methods within the `check_array` function that handle the specific case of pandas DataFrame inputs and where the `warn_on_dtype` parameter affects the behavior of issuing warnings during dtype conversion.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "Having identified the `check_array` function in `sklearn/utils/validation.py`, we now need to focus on the part of the function that handles the specific case of pandas DataFrame inputs and the behavior of the `warn_on_dtype` parameter when dtype conversion occurs. We should look for any additional helper functions or internal logic within `check_array` that might be responsible for issuing warnings during dtype conversion specifically for DataFrame inputs.",
            "search_requests": [
              {
                "query": "check_array pandas DataFrame warn_on_dtype",
                "class_names": [],
                "code_snippet": "warn_on_dtype and dtype_orig is not None and array.dtype != dtype_orig",
                "file_pattern": "**/sklearn/utils/validation.py",
                "function_names": [
                  "check_array"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 2132,
                "span_id": "check_array",
                "file_path": "sklearn/utils/validation.py"
              }
            ],
            "search_requests": [
              {
                "query": "check_array pandas DataFrame warn_on_dtype",
                "class_names": [],
                "code_snippet": "warn_on_dtype and dtype_orig is not None and array.dtype != dtype_orig",
                "file_pattern": "**/sklearn/utils/validation.py",
                "function_names": [
                  "check_array"
                ]
              }
            ]
          },
          "input_tokens": 6340,
          "output_tokens": 219,
          "retry_message": null,
          "completion_cost": 0.022305000000000002
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 2132,
            "span_id": "check_array",
            "file_path": "sklearn/utils/validation.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue indicates that the parameter `warn_on_dtype` is not working as expected when the input is a pandas DataFrame. When `check_array` is called with a DataFrame and `warn_on_dtype=True`, no warning is thrown, despite data type conversion occurring. The relevant code is likely within the `check_array` function where the dtype conversion and warning logic reside. Reviewing the code in `check_array`, it appears that the logic for issuing a warning when `warn_on_dtype` is True and dtype conversion occurs is correctly implemented. However, the issue might arise from how the DataFrame is being processed within `check_array`. Relevant spans include the entire `check_array` function where there's a check for `warn_on_dtype` and dtype conversion to trigger the `DataConversionWarning`.",
            "identified_spans": [
              {
                "span_ids": [
                  "check_array"
                ],
                "file_path": "sklearn/utils/validation.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 6019,
          "output_tokens": 219,
          "retry_message": null,
          "completion_cost": 0.021342
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The provided file context includes the `check_array` function, which is relevant to the reported issue. However, the specific logic for handling `warn_on_dtype` with DataFrame inputs might need deeper inspection within the function. The issue suggests that the warning is not being thrown when a DataFrame is passed with `warn_on_dtype=True`. This could involve checking the internal logic of `check_array` more thoroughly to ensure that the warning mechanism is correctly implemented for DataFrame inputs. Further inspection is suggested around the part of the function where dtype conversion is handled for DataFrame inputs to ensure that the warning is correctly triggered.",
            "search_suggestions": "Look into the internal logic of the `check_array` function where dtype conversion occurs, especially focusing on the handling of DataFrame inputs and the application of the `warn_on_dtype` parameter."
          },
          "output": {
            "message": "Look into the internal logic of the `check_array` function where dtype conversion occurs, especially focusing on the handling of DataFrame inputs and the application of the `warn_on_dtype` parameter."
          },
          "input_tokens": 4064,
          "output_tokens": 205,
          "retry_message": null,
          "completion_cost": 0.015267
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Look into the internal logic of the `check_array` function where dtype conversion occurs, especially focusing on the handling of DataFrame inputs and the application of the `warn_on_dtype` parameter.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": true,
            "scratch_pad": "The `check_array` function in `sklearn/utils/validation.py` does indeed handle the `warn_on_dtype` parameter and its effect on issuing warnings during dtype conversion. However, the provided context suggests that the warning logic might not be triggered for pandas DataFrame inputs. Given the code snippet and the provided context, it seems that all necessary parts of the `check_array` function have been identified and reviewed. Therefore, we can conclude that the search for relevant code is complete.",
            "search_requests": []
          },
          "output": {
            "message": "The `check_array` function in `sklearn/utils/validation.py` does indeed handle the `warn_on_dtype` parameter and its effect on issuing warnings during dtype conversion. However, the provided context suggests that the warning logic might not be triggered for pandas DataFrame inputs. Given the code snippet and the provided context, it seems that all necessary parts of the `check_array` function have been identified and reviewed. Therefore, we can conclude that the search for relevant code is complete."
          },
          "input_tokens": 6606,
          "output_tokens": 132,
          "retry_message": null,
          "completion_cost": 0.021797999999999998
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": "The `check_array` function in `sklearn/utils/validation.py` does indeed handle the `warn_on_dtype` parameter and its effect on issuing warnings during dtype conversion. However, the provided context suggests that the warning logic might not be triggered for pandas DataFrame inputs. Given the code snippet and the provided context, it seems that all necessary parts of the `check_array` function have been identified and reviewed. Therefore, we can conclude that the search for relevant code is complete.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "check_array",
            "file_path": "sklearn/utils/validation.py",
            "scratch_pad": "The issue describes that the 'warn_on_dtype' parameter does not trigger a warning when the input is a pandas DataFrame. This suggests that the dtype conversion warning logic is not properly executed or triggered for DataFrame inputs. Given the code context, it seems necessary to verify and potentially adjust the logic around dtype conversion and warning issuance specifically for pandas DataFrame inputs.",
            "instructions": "Ensure that the dtype conversion warning is correctly issued when the input is a pandas DataFrame and 'warn_on_dtype' is set to True. This may involve checking the condition under which the warning is issued and ensuring it applies correctly to DataFrame inputs."
          },
          "output": {
            "span_id": "check_array",
            "file_path": "sklearn/utils/validation.py",
            "instructions": "Ensure that the dtype conversion warning is correctly issued when the input is a pandas DataFrame and 'warn_on_dtype' is set to True. This may involve checking the condition under which the warning is issued and ensuring it applies correctly to DataFrame inputs."
          },
          "input_tokens": 3981,
          "output_tokens": 180,
          "retry_message": null,
          "completion_cost": 0.014643
        }
      ]
    },
    {
      "name": "ClarifyCodeChange",
      "state": {
        "model": "deepseek-coder",
        "span_id": "check_array",
        "end_line": null,
        "file_path": "sklearn/utils/validation.py",
        "max_tokens": 1000,
        "start_line": null,
        "temperature": 1.6,
        "instructions": "Ensure that the dtype conversion warning is correctly issued when the input is a pandas DataFrame and 'warn_on_dtype' is set to True. This may involve checking the condition under which the warning is issued and ensuring it applies correctly to DataFrame inputs.\n\nThe warning for dtype conversion should be issued based on the condition where 'warn_on_dtype' is True and the dtype of the array is different from the original dtype. The relevant lines of code for this check and the warning issuance are from line 576 to 579.",
        "max_iterations": null,
        "include_message_history": false,
        "max_tokens_in_edit_prompt": 500
      },
      "actions": [
        {
          "action": {
            "reject": null,
            "end_line": 579,
            "start_line": 576,
            "scratch_pad": "The warning for dtype conversion should be issued based on the condition where 'warn_on_dtype' is True and the dtype of the array is different from the original dtype. The relevant lines of code for this check and the warning issuance are from line 576 to 579."
          },
          "output": {
            "span_id": "check_array",
            "end_line": 582,
            "file_path": "sklearn/utils/validation.py",
            "start_line": 572,
            "instructions": "Ensure that the dtype conversion warning is correctly issued when the input is a pandas DataFrame and 'warn_on_dtype' is set to True. This may involve checking the condition under which the warning is issued and ensuring it applies correctly to DataFrame inputs.\n\nThe warning for dtype conversion should be issued based on the condition where 'warn_on_dtype' is True and the dtype of the array is different from the original dtype. The relevant lines of code for this check and the warning issuance are from line 576 to 579."
          },
          "input_tokens": 3882,
          "output_tokens": 99,
          "retry_message": null,
          "completion_cost": 0.013131
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "check_array",
        "end_line": 582,
        "file_path": "sklearn/utils/validation.py",
        "max_tokens": 1000,
        "start_line": 572,
        "temperature": 1.6,
        "instructions": "Ensure that the dtype conversion warning is correctly issued when the input is a pandas DataFrame and 'warn_on_dtype' is set to True. This may involve checking the condition under which the warning is issued and ensuring it applies correctly to DataFrame inputs.\n\nThe warning for dtype conversion should be issued based on the condition where 'warn_on_dtype' is True and the dtype of the array is different from the original dtype. The relevant lines of code for this check and the warning issuance are from line 576 to 579.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "```xml\n<replace>\n                             \" a minimum of %d is required%s.\"\n                             % (n_features, shape_repr, ensure_min_features,\n                                context))\n\n    if warn_on_dtype and dtype_orig is not None and array.dtype != dtype_orig:\n        msg = (\"Data with input dtype %s was converted to %s%s.\"\n               % (dtype_orig, array.dtype, context))\n        if isinstance(array_orig, pd.DataFrame):\n            warnings.warn(msg, DataConversionWarning)\n\n    if copy and np.may_share_memory(array, array_orig):\n        array = np.array(array, dtype=dtype, order=order)\n</replace>"
          },
          "output": {
            "diff": "--- sklearn/utils/validation.py\n+++ sklearn/utils/validation.py\n@@ -576,7 +576,8 @@\n     if warn_on_dtype and dtype_orig is not None and array.dtype != dtype_orig:\n         msg = (\"Data with input dtype %s was converted to %s%s.\"\n                % (dtype_orig, array.dtype, context))\n-        warnings.warn(msg, DataConversionWarning)\n+        if isinstance(array_orig, pd.DataFrame):\n+            warnings.warn(msg, DataConversionWarning)\n \n     if copy and np.may_share_memory(array, array_orig):\n         array = np.array(array, dtype=dtype, order=order)\n",
            "message": "Applied the change to sklearn/utils/validation.py.\n\n<scratch_pad>\n```xml\n</scratch_pad>",
            "verification_errors": [
              {
                "code": "E0602",
                "line": 579,
                "message": "Undefined variable 'pd'",
                "file_path": "sklearn/utils/validation.py"
              }
            ]
          },
          "input_tokens": 6153,
          "output_tokens": 166,
          "retry_message": null,
          "completion_cost": 0.020949
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": "--- sklearn/utils/validation.py\n+++ sklearn/utils/validation.py\n@@ -576,7 +576,8 @@\n     if warn_on_dtype and dtype_orig is not None and array.dtype != dtype_orig:\n         msg = (\"Data with input dtype %s was converted to %s%s.\"\n                % (dtype_orig, array.dtype, context))\n-        warnings.warn(msg, DataConversionWarning)\n+        if isinstance(array_orig, pd.DataFrame):\n+            warnings.warn(msg, DataConversionWarning)\n \n     if copy and np.may_share_memory(array, array_orig):\n         array = np.array(array, dtype=dtype, order=order)\n",
        "model": "deepseek-coder",
        "message": "Applied the change to sklearn/utils/validation.py.\n\n<scratch_pad>\n```xml\n</scratch_pad>",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": [
          {
            "code": "E0602",
            "line": 579,
            "message": "Undefined variable 'pd'",
            "file_path": "sklearn/utils/validation.py"
          }
        ],
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "top",
            "file_path": "sklearn/utils/validation.py",
            "scratch_pad": "The lint error indicates that the variable 'pd' is undefined. This is due to the fact that the pandas library was not imported in the module where the change was made. To resolve this, we need to import the pandas library at the beginning of the module.",
            "instructions": "Add the import statement for pandas at the beginning of the module to resolve the undefined variable 'pd' error."
          },
          "output": null,
          "input_tokens": 4451,
          "output_tokens": 145,
          "retry_message": "Span not found: top. Available spans: _shape_repr, check_array, check_X_y, _num_samples",
          "completion_cost": 0.015528
        },
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": null,
            "file_path": "sklearn/utils/validation.py",
            "scratch_pad": "The requested span 'top' was not found among the available spans, which include '_shape_repr', 'check_array', 'check_X_y', and '_num_samples'. To proceed, we need to include the pandas import statement in the module without specifying a span, as it should be placed at the beginning of the module.",
            "instructions": "Import the pandas library at the beginning of the 'sklearn/utils/validation.py' file."
          },
          "output": null,
          "input_tokens": 4631,
          "output_tokens": 160,
          "retry_message": "You must either provide an apply_change action or finish.",
          "completion_cost": 0.016293000000000002
        },
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": null,
            "file_path": "sklearn/utils/validation.py",
            "scratch_pad": "Since the initial code change that introduced the lint error did not specify a particular span within which to place the new code, and 'top' is not a valid span option, the best approach is to provide the corrected code directly without specifying a span. The corrected code should include the necessary import statement for pandas at the beginning of the module.",
            "instructions": "Apply the following change to the 'sklearn/utils/validation.py' file to resolve the lint error:\n\n```python\nimport pandas as pd\n\n# Original code following the import statement\n```\n"
          },
          "output": null,
          "input_tokens": 4810,
          "output_tokens": 188,
          "retry_message": "You must either provide an apply_change action or finish.",
          "completion_cost": 0.01725
        }
      ]
    }
  ],
  "initial_message": "warn_on_dtype with DataFrame\n#### Description\r\n\r\n``warn_on_dtype`` has no effect when input is a pandas ``DataFrame``\r\n\r\n#### Steps/Code to Reproduce\r\n```python\r\nfrom sklearn.utils.validation import check_array\r\nimport pandas as pd\r\ndf = pd.DataFrame([[1, 2, 3], [2, 3, 4]], dtype=object)\r\nchecked = check_array(df, warn_on_dtype=True)\r\n```\r\n\r\n#### Expected result: \r\n\r\n```python-traceback\r\nDataConversionWarning: Data with input dtype object was converted to float64.\r\n```\r\n\r\n#### Actual Results\r\nNo warning is thrown\r\n\r\n#### Versions\r\nLinux-4.4.0-116-generic-x86_64-with-debian-stretch-sid\r\nPython 3.6.3 |Anaconda, Inc.| (default, Nov  3 2017, 19:19:16) \r\n[GCC 7.2.0]\r\nNumPy 1.13.1\r\nSciPy 0.19.1\r\nScikit-Learn 0.20.dev0\r\nPandas 0.21.0\r\n\nwarn_on_dtype with DataFrame\n#### Description\r\n\r\n``warn_on_dtype`` has no effect when input is a pandas ``DataFrame``\r\n\r\n#### Steps/Code to Reproduce\r\n```python\r\nfrom sklearn.utils.validation import check_array\r\nimport pandas as pd\r\ndf = pd.DataFrame([[1, 2, 3], [2, 3, 4]], dtype=object)\r\nchecked = check_array(df, warn_on_dtype=True)\r\n```\r\n\r\n#### Expected result: \r\n\r\n```python-traceback\r\nDataConversionWarning: Data with input dtype object was converted to float64.\r\n```\r\n\r\n#### Actual Results\r\nNo warning is thrown\r\n\r\n#### Versions\r\nLinux-4.4.0-116-generic-x86_64-with-debian-stretch-sid\r\nPython 3.6.3 |Anaconda, Inc.| (default, Nov  3 2017, 19:19:16) \r\n[GCC 7.2.0]\r\nNumPy 1.13.1\r\nSciPy 0.19.1\r\nScikit-Learn 0.20.dev0\r\nPandas 0.21.0\r\n\n"
}