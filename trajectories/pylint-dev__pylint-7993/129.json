{
  "info": {
    "duration": 190.61219930648804,
    "submission": "diff --git a/pylint/reporters/text.py b/pylint/reporters/text.py\nindex 29bd46798..51ea4d9ae 100644\n--- a/pylint/reporters/text.py\n+++ b/pylint/reporters/text.py\n@@ -178,11 +178,7 @@ class TextReporter(BaseReporter):\n         arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n-                warnings.warn(\n-                    f\"Don't recognize the argument '{argument[0]}' in the --msg-template. \"\n-                    \"Are you sure it is supported on the current version of pylint?\"\n-                )\n-                template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+                continue\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n",
    "total_cost": 0.160584,
    "instance_id": "pylint-dev__pylint-7993",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue involves the use of custom braces in the message template for Pylint, which is not working as expected in newer versions. The focus should be on the `--msg-template` option and how it handles custom formatting. Specifically, the `TextReporter` class in `pylint/reporters/text.py` is mentioned in the output and should be investigated. Also, the `Message` class in `pylint/message/message.py` and its `format` method could be relevant for understanding how messages are formatted.",
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "TextReporter",
                  "Message"
                ],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": [
                  "format"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 60,
                "span_id": "Message.format",
                "file_path": "pylint/message/message.py"
              }
            ],
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "TextReporter",
                  "Message"
                ],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": [
                  "format"
                ]
              }
            ]
          },
          "input_tokens": 3905,
          "output_tokens": 200,
          "retry_message": null,
          "completion_cost": 0.014714999999999999
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 60,
            "span_id": "Message.format",
            "file_path": "pylint/message/message.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue involves the use of custom braces in the message template for Pylint. The user observed that the message template syntax works in older versions of Pylint but not in the newer version (2.12.2). The key point is to identify the code that handles the message template formatting in the newer version to understand why the custom braces are not recognized. In the provided search results, the `Message.format` method in `pylint/message/message.py` appears to be responsible for formatting messages based on a template string. This method uses the `str.format()` method, which might be the root cause of the issue since it does not handle custom braces as expected. This code span is directly relevant to the reported issue as it deals with the formatting of messages using a template.",
            "identified_spans": [
              {
                "span_ids": [
                  "Message.format"
                ],
                "file_path": "pylint/message/message.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 2156,
          "output_tokens": 226,
          "retry_message": null,
          "completion_cost": 0.009858
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The provided file context includes the `Message` class in `pylint/message/message.py`, which has a `format` method that is relevant to how messages are formatted based on the `--msg-template` option. This is directly related to the reported issue about custom braces in the message template. However, the specific issue of handling braces in the message template, as mentioned in the `UserWarning`, is not addressed in the provided context. The `TextReporter` class mentioned in the output is also not present in the file context. Therefore, more context related to `TextReporter` and how it processes the `--msg-template` option might be needed to fully address the issue.",
            "search_suggestions": "Look for the `TextReporter` class in the pylint/reporters/text.py file to understand how the `--msg-template` option is processed and why custom braces might not be recognized in the newer versions of Pylint."
          },
          "output": {
            "message": "Look for the `TextReporter` class in the pylint/reporters/text.py file to understand how the `--msg-template` option is processed and why custom braces might not be recognized in the newer versions of Pylint."
          },
          "input_tokens": 2115,
          "output_tokens": 228,
          "retry_message": null,
          "completion_cost": 0.009765
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Look for the `TextReporter` class in the pylint/reporters/text.py file to understand how the `--msg-template` option is processed and why custom braces might not be recognized in the newer versions of Pylint.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "Based on the provided context, the `Message` class in `pylint/message/message.py` has a `format` method that uses the `template.format(**asdict(self))` approach to format messages. This implies that the message template relies on Python's built-in string formatting capabilities. Given the issue involves custom braces not being recognized in newer versions, it suggests a potential change or restriction in how the template is parsed or formatted. To find the exact cause, we should look into the `TextReporter` class in `pylint/reporters/text.py` to understand how the `--msg-template` option is processed and if there are any specific checks or transformations applied to the template string that might cause this issue.",
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "TextReporter"
                ],
                "code_snippet": null,
                "file_pattern": "pylint/reporters/text.py",
                "function_names": []
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 45,
                "span_id": "TextReporter",
                "file_path": "pylint/reporters/text.py"
              },
              {
                "rank": 0,
                "tokens": 60,
                "span_id": "TextReporter.__init__",
                "file_path": "pylint/reporters/text.py"
              },
              {
                "rank": 0,
                "tokens": 197,
                "span_id": "TextReporter.on_set_current_module",
                "file_path": "pylint/reporters/text.py"
              },
              {
                "rank": 0,
                "tokens": 70,
                "span_id": "TextReporter.write_message",
                "file_path": "pylint/reporters/text.py"
              },
              {
                "rank": 0,
                "tokens": 69,
                "span_id": "TextReporter.handle_message",
                "file_path": "pylint/reporters/text.py"
              },
              {
                "rank": 0,
                "tokens": 30,
                "span_id": "TextReporter._display",
                "file_path": "pylint/reporters/text.py"
              }
            ],
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "TextReporter"
                ],
                "code_snippet": null,
                "file_pattern": "pylint/reporters/text.py",
                "function_names": []
              }
            ]
          },
          "input_tokens": 4645,
          "output_tokens": 249,
          "retry_message": null,
          "completion_cost": 0.01767
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 45,
            "span_id": "TextReporter",
            "file_path": "pylint/reporters/text.py"
          },
          {
            "rank": 0,
            "tokens": 60,
            "span_id": "TextReporter.__init__",
            "file_path": "pylint/reporters/text.py"
          },
          {
            "rank": 0,
            "tokens": 197,
            "span_id": "TextReporter.on_set_current_module",
            "file_path": "pylint/reporters/text.py"
          },
          {
            "rank": 0,
            "tokens": 70,
            "span_id": "TextReporter.write_message",
            "file_path": "pylint/reporters/text.py"
          },
          {
            "rank": 0,
            "tokens": 69,
            "span_id": "TextReporter.handle_message",
            "file_path": "pylint/reporters/text.py"
          },
          {
            "rank": 0,
            "tokens": 30,
            "span_id": "TextReporter._display",
            "file_path": "pylint/reporters/text.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue centers around the inability to use custom braces in the message template for Pylint 2.12.2, which was working on older versions like Pylint 1.7 with Python 3.6. The issue seems to stem from the handling of the `--msg-template` argument and how it processes the custom template strings. Specifically, the error message suggests that the argument '{ \"Category\"' is not recognized by Pylint 2.12.2. The current context includes a section from pylint/message/message.py, particularly the `Message.format` method, which might be related to how messages are formatted. The new search results provide more context in pylint/reporters/text.py, particularly focusing on the `TextReporter` class and its methods like `on_set_current_module`, which handles the template argument and verifies its components, raising a warning if an unknown argument is found. The `write_message` method also appears relevant, as it formats messages according to the template. The key relevant code spans include the initialization of `TextReporter`, handling of the message template, and the message writing process. Based on the issue description and the identified code, the relevant files and spans are those dealing with the message template processing and message output.",
            "identified_spans": [
              {
                "span_ids": [
                  "TextReporter",
                  "TextReporter.__init__",
                  "TextReporter.on_set_current_module",
                  "TextReporter.write_message",
                  "TextReporter.handle_message"
                ],
                "file_path": "pylint/reporters/text.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 3018,
          "output_tokens": 380,
          "retry_message": null,
          "completion_cost": 0.014754
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The provided file context includes the `Message` class in `pylint/message/message.py` which has a `format` method using `template.format(**asdict(self))`. This suggests that message formatting relies on Python's string formatting. Additionally, the `TextReporter` class in `pylint/reporters/text.py` processes the `--msg-template` option and issues a warning if an argument in the template is not recognized. This behavior aligns with the reported issue. The template processing and warning mechanism suggest that the issue lies in how the template is parsed or recognized, which is partially covered in the provided context. However, the exact code segment handling the parsing or transforming the template string to cause the custom braces issue is not fully presented.",
            "search_suggestions": "Look into the exact method or segment in `pylint/reporters/text.py` that parses or transforms the `--msg-template` option to understand why custom braces are not recognized and causing the reported issue."
          },
          "output": {
            "message": "Look into the exact method or segment in `pylint/reporters/text.py` that parses or transforms the `--msg-template` option to understand why custom braces are not recognized and causing the reported issue."
          },
          "input_tokens": 2956,
          "output_tokens": 244,
          "retry_message": null,
          "completion_cost": 0.012528000000000001
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Look into the exact method or segment in `pylint/reporters/text.py` that parses or transforms the `--msg-template` option to understand why custom braces are not recognized and causing the reported issue.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": true,
            "scratch_pad": "The `TextReporter` class in `pylint/reporters/text.py` processes the `--msg-template` option. In the `on_set_current_module` method, the provided template is parsed using a regular expression to find all arguments. If an argument is not recognized from `MESSAGE_FIELDS`, a warning is issued and that argument is removed from the template. This explains why custom braces are not recognized. The issue arises because custom arguments in the message template format are not part of the recognized `MESSAGE_FIELDS`. This mechanism was likely introduced to ensure only supported fields are used in the message template, which might have unintentionally affected custom formatting in a way not foreseen by users migrating from older versions.",
            "search_requests": [
              {
                "query": "on_set_current_module",
                "class_names": [
                  "TextReporter"
                ],
                "code_snippet": "",
                "file_pattern": "pylint/reporters/text.py",
                "function_names": [
                  "on_set_current_module"
                ]
              }
            ]
          },
          "output": {
            "message": "The `TextReporter` class in `pylint/reporters/text.py` processes the `--msg-template` option. In the `on_set_current_module` method, the provided template is parsed using a regular expression to find all arguments. If an argument is not recognized from `MESSAGE_FIELDS`, a warning is issued and that argument is removed from the template. This explains why custom braces are not recognized. The issue arises because custom arguments in the message template format are not part of the recognized `MESSAGE_FIELDS`. This mechanism was likely introduced to ensure only supported fields are used in the message template, which might have unintentionally affected custom formatting in a way not foreseen by users migrating from older versions."
          },
          "input_tokens": 5750,
          "output_tokens": 269,
          "retry_message": null,
          "completion_cost": 0.021285000000000002
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": "The `TextReporter` class in `pylint/reporters/text.py` processes the `--msg-template` option. In the `on_set_current_module` method, the provided template is parsed using a regular expression to find all arguments. If an argument is not recognized from `MESSAGE_FIELDS`, a warning is issued and that argument is removed from the template. This explains why custom braces are not recognized. The issue arises because custom arguments in the message template format are not part of the recognized `MESSAGE_FIELDS`. This mechanism was likely introduced to ensure only supported fields are used in the message template, which might have unintentionally affected custom formatting in a way not foreseen by users migrating from older versions.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "TextReporter.on_set_current_module",
            "file_path": "pylint/reporters/text.py",
            "scratch_pad": "The issue stems from the regex parsing in `on_set_current_module` which removes any arguments not recognized in `MESSAGE_FIELDS`. This behavior disallows custom formatting with braces in the message template. To resolve this, we need to ensure that the custom format is preserved even if it's not explicitly listed in `MESSAGE_FIELDS`.",
            "instructions": "Update the `on_set_current_module` method in `TextReporter` to allow custom braces in the message template without issuing a warning or removing the custom format."
          },
          "output": {
            "span_id": "TextReporter.on_set_current_module",
            "end_line": 186,
            "file_path": "pylint/reporters/text.py",
            "start_line": 166,
            "instructions": "Update the `on_set_current_module` method in `TextReporter` to allow custom braces in the message template without issuing a warning or removing the custom format."
          },
          "input_tokens": 4105,
          "output_tokens": 176,
          "retry_message": null,
          "completion_cost": 0.014955
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "TextReporter.on_set_current_module",
        "end_line": 186,
        "file_path": "pylint/reporters/text.py",
        "max_tokens": 1000,
        "start_line": 166,
        "temperature": 1.6,
        "instructions": "Update the `on_set_current_module` method in `TextReporter` to allow custom braces in the message template without issuing a warning or removing the custom format.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "<replace>\n    def on_set_current_module(self, module: str, filepath: str | None) -> None:\n        \"\"\"Set the format template to be used and check for unrecognized arguments.\"\"\"\n        template = str(self.linter.config.msg_template or self._template)\n\n        # Return early if the template is the same as the previous one\n        if template == self._template:\n            return\n\n        # Set template to the currently selected template\n        self._template = template\n\n        # Check to see if all parameters in the template are attributes of the Message\n        arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n        for argument in arguments:\n            if argument[0] not in MESSAGE_FIELDS:\n                continue\n        self._fixed_template = template\n</replace>"
          },
          "output": {
            "diff": "--- pylint/reporters/text.py\n+++ pylint/reporters/text.py\n@@ -178,11 +178,7 @@\n         arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n-                warnings.warn(\n-                    f\"Don't recognize the argument '{argument[0]}' in the --msg-template. \"\n-                    \"Are you sure it is supported on the current version of pylint?\"\n-                )\n-                template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+                continue\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n",
            "message": "Applied the change to pylint/reporters/text.py.",
            "verification_errors": []
          },
          "input_tokens": 3914,
          "output_tokens": 192,
          "retry_message": null,
          "completion_cost": 0.014622000000000001
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": "--- pylint/reporters/text.py\n+++ pylint/reporters/text.py\n@@ -178,11 +178,7 @@\n         arguments = re.findall(r\"\\{(.+?)(:.*)?\\}\", template)\n         for argument in arguments:\n             if argument[0] not in MESSAGE_FIELDS:\n-                warnings.warn(\n-                    f\"Don't recognize the argument '{argument[0]}' in the --msg-template. \"\n-                    \"Are you sure it is supported on the current version of pylint?\"\n-                )\n-                template = re.sub(r\"\\{\" + argument[0] + r\"(:.*?)?\\}\", \"\", template)\n+                continue\n         self._fixed_template = template\n \n     def write_message(self, msg: Message) -> None:\n",
        "model": "deepseek-coder",
        "message": "Applied the change to pylint/reporters/text.py.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": [],
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "review",
            "finish": null,
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "The initial change was successful in allowing custom braces without issuing warnings for unrecognized arguments in the `--msg-template`. Now, I see if further adjustments are needed or if the issue is resolved.",
            "instructions": null
          },
          "output": null,
          "input_tokens": 4446,
          "output_tokens": 101,
          "retry_message": "Review isn't possible. If the change is done you can finish or reject the task.",
          "completion_cost": 0.014853000000000002
        },
        {
          "action": {
            "action": "finish",
            "finish": "The initial change was implemented correctly, resolving the issue of custom braces being unrecognized in the `--msg-template`. No further changes are necessary.",
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "Since the change was applied and it successfully removed the warnings for unrecognized arguments in the `--msg-template`, I believe the issue is resolved as per the requirement.",
            "instructions": null
          },
          "output": {
            "message": "The initial change was implemented correctly, resolving the issue of custom braces being unrecognized in the `--msg-template`. No further changes are necessary."
          },
          "input_tokens": 4573,
          "output_tokens": 124,
          "retry_message": null,
          "completion_cost": 0.015579
        }
      ]
    },
    {
      "name": "Finished",
      "state": {
        "model": "gpt-4o",
        "output": {
          "model": "deepseek-coder",
          "temperature": 1.6
        },
        "message": "The initial change was implemented correctly, resolving the issue of custom braces being unrecognized in the `--msg-template`. No further changes are necessary.",
        "max_tokens": 1000,
        "temperature": 0.0,
        "max_iterations": null,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "Using custom braces in message template does not work\n### Bug description\n\nHave any list of errors:\r\n\r\nOn pylint 1.7 w/ python3.6 - I am able to use this as my message template\r\n```\r\n$ pylint test.py --msg-template='{{ \"Category\": \"{category}\" }}'\r\nNo config file found, using default configuration\r\n************* Module [redacted].test\r\n{ \"Category\": \"convention\" }\r\n{ \"Category\": \"error\" }\r\n{ \"Category\": \"error\" }\r\n{ \"Category\": \"convention\" }\r\n{ \"Category\": \"convention\" }\r\n{ \"Category\": \"convention\" }\r\n{ \"Category\": \"error\" }\r\n```\r\n\r\nHowever, on Python3.9 with Pylint 2.12.2, I get the following:\r\n```\r\n$ pylint test.py --msg-template='{{ \"Category\": \"{category}\" }}'\r\n[redacted]/site-packages/pylint/reporters/text.py:206: UserWarning: Don't recognize the argument '{ \"Category\"' in the --msg-template. Are you sure it is supported on the current version of pylint?\r\n  warnings.warn(\r\n************* Module [redacted].test\r\n\" }\r\n\" }\r\n\" }\r\n\" }\r\n\" }\r\n\" }\r\n```\r\n\r\nIs this intentional or a bug?\n\n### Configuration\n\n_No response_\n\n### Command used\n\n```shell\npylint test.py --msg-template='{{ \"Category\": \"{category}\" }}'\n```\n\n\n### Pylint output\n\n```shell\n[redacted]/site-packages/pylint/reporters/text.py:206: UserWarning: Don't recognize the argument '{ \"Category\"' in the --msg-template. Are you sure it is supported on the current version of pylint?\r\n  warnings.warn(\r\n************* Module [redacted].test\r\n\" }\r\n\" }\r\n\" }\r\n\" }\r\n\" }\r\n\" }\n```\n\n\n### Expected behavior\n\nExpect the dictionary to print out with `\"Category\"` as the key.\n\n### Pylint version\n\n```shell\nAffected Version:\r\npylint 2.12.2\r\nastroid 2.9.2\r\nPython 3.9.9+ (heads/3.9-dirty:a2295a4, Dec 21 2021, 22:32:52) \r\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]\r\n\r\n\r\nPreviously working version:\r\nNo config file found, using default configuration\r\npylint 1.7.4, \r\nastroid 1.6.6\r\nPython 3.6.8 (default, Nov 16 2020, 16:55:22) \r\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]\n```\n\n\n### OS / Environment\n\n_No response_\n\n### Additional dependencies\n\n_No response_\n"
}