{
  "info": {
    "duration": 207.04692554473877,
    "submission": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex c49a3ce6a..41448753f 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1136,6 +1136,10 @@ class _RepeatedSplits(metaclass=ABCMeta):\n             for train_index, test_index in cv.split(X, y, groups):\n                 yield train_index, test_index\n \n+    def __repr__(self):\n+        return (f\"{self.__class__.__name__}(n_splits={self.cvargs['n_splits']}, \"\n+                f\"n_repeats={self.n_repeats}, random_state={self.random_state})\")\n+\n     def get_n_splits(self, X=None, y=None, groups=None):\n         \"\"\"Returns the number of splitting iterations in the cross-validator\n \n",
    "total_cost": 0.136872,
    "instance_id": "scikit-learn__scikit-learn-14983",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue involves incorrect __repr__ strings for RepeatedKFold and RepeatedStratifiedKFold classes in the sklearn.model_selection module. These classes are likely defined in the _split.py file within the model_selection directory. To solve this issue, we need to find the implementations of these classes and the methods responsible for generating their __repr__ strings.",
            "search_requests": [
              {
                "query": "RepeatedKFold and RepeatedStratifiedKFold __repr__ strings",
                "class_names": [
                  "RepeatedKFold",
                  "RepeatedStratifiedKFold"
                ],
                "code_snippet": null,
                "file_pattern": "**/sklearn/model_selection/**/*.py",
                "function_names": []
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 437,
                "span_id": "RepeatedStratifiedKFold",
                "file_path": "sklearn/model_selection/_split.py"
              },
              {
                "rank": 1,
                "tokens": 458,
                "span_id": "RepeatedKFold",
                "file_path": "sklearn/model_selection/_split.py"
              }
            ],
            "search_requests": [
              {
                "query": "RepeatedKFold and RepeatedStratifiedKFold __repr__ strings",
                "class_names": [
                  "RepeatedKFold",
                  "RepeatedStratifiedKFold"
                ],
                "code_snippet": null,
                "file_pattern": "**/sklearn/model_selection/**/*.py",
                "function_names": []
              }
            ]
          },
          "input_tokens": 3497,
          "output_tokens": 185,
          "retry_message": null,
          "completion_cost": 0.013266
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 437,
            "span_id": "RepeatedStratifiedKFold",
            "file_path": "sklearn/model_selection/_split.py"
          },
          {
            "rank": 1,
            "tokens": 458,
            "span_id": "RepeatedKFold",
            "file_path": "sklearn/model_selection/_split.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue is about the incorrect __repr__ string for `RepeatedKFold` and `RepeatedStratifiedKFold`. From the search results, it is clear that both these classes inherit from `_RepeatedSplits`. The current search results include the `__init__` methods for both `RepeatedKFold` and `RepeatedStratifiedKFold`, which initialize with `n_splits`, `n_repeats`, and `random_state`. The issue likely arises because the `__repr__` method is either missing or incorrectly defined in these classes. To address the issue, one would need to define or correct the `__repr__` method in `RepeatedKFold` and `RepeatedStratifiedKFold`. The identified spans so far do not include the `__repr__` method, so it is likely missing and needs to be added. Based on the issue, the relevant code spans to address this would be the entire classes `RepeatedKFold` and `RepeatedStratifiedKFold`.",
            "identified_spans": [
              {
                "span_ids": [
                  "RepeatedKFold",
                  "RepeatedKFold.__init__",
                  "RepeatedStratifiedKFold",
                  "RepeatedStratifiedKFold.__init__"
                ],
                "file_path": "sklearn/model_selection/_split.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 1814,
          "output_tokens": 315,
          "retry_message": null,
          "completion_cost": 0.010166999999999999
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The file context includes the definitions of RepeatedKFold and RepeatedStratifiedKFold classes. However, the __repr__ methods for these classes are not present in the provided context. The missing __repr__ methods are essential to address the reported issue of incorrect representation strings. Therefore, the relevant code to fix the issue is not complete in this file context.",
            "search_suggestions": "Look for the implementations of the __repr__ methods in the _RepeatedSplits class or within the RepeatedKFold and RepeatedStratifiedKFold classes."
          },
          "output": {
            "message": "Look for the implementations of the __repr__ methods in the _RepeatedSplits class or within the RepeatedKFold and RepeatedStratifiedKFold classes."
          },
          "input_tokens": 1652,
          "output_tokens": 147,
          "retry_message": null,
          "completion_cost": 0.007161000000000001
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Look for the implementations of the __repr__ methods in the _RepeatedSplits class or within the RepeatedKFold and RepeatedStratifiedKFold classes.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "Based on the provided file context, the implementations of the RepeatedKFold and RepeatedStratifiedKFold classes do not include a __repr__ method. This explains why the __repr__ string is not showing correctly. The next step is to look for the _RepeatedSplits class to check if it includes a __repr__ method. If not, this will need to be implemented in either the _RepeatedSplits class or directly in the RepeatedKFold and RepeatedStratifiedKFold classes.",
            "search_requests": [
              {
                "query": "implementation of _RepeatedSplits class __repr__ method",
                "class_names": [
                  "_RepeatedSplits"
                ],
                "code_snippet": null,
                "file_pattern": "**/sklearn/model_selection/_split.py",
                "function_names": []
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 174,
                "span_id": "_RepeatedSplits",
                "file_path": "sklearn/model_selection/_split.py"
              },
              {
                "rank": 3,
                "tokens": 188,
                "span_id": "_RepeatedSplits.get_n_splits",
                "file_path": "sklearn/model_selection/_split.py"
              },
              {
                "rank": 5,
                "tokens": 220,
                "span_id": "_RepeatedSplits.split",
                "file_path": "sklearn/model_selection/_split.py"
              }
            ],
            "search_requests": [
              {
                "query": "implementation of _RepeatedSplits class __repr__ method",
                "class_names": [
                  "_RepeatedSplits"
                ],
                "code_snippet": null,
                "file_pattern": "**/sklearn/model_selection/_split.py",
                "function_names": []
              }
            ]
          },
          "input_tokens": 3994,
          "output_tokens": 217,
          "retry_message": null,
          "completion_cost": 0.015237
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 174,
            "span_id": "_RepeatedSplits",
            "file_path": "sklearn/model_selection/_split.py"
          },
          {
            "rank": 3,
            "tokens": 188,
            "span_id": "_RepeatedSplits.get_n_splits",
            "file_path": "sklearn/model_selection/_split.py"
          },
          {
            "rank": 5,
            "tokens": 220,
            "span_id": "_RepeatedSplits.split",
            "file_path": "sklearn/model_selection/_split.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue involves the incorrect __repr__ string for both `RepeatedKFold` and `RepeatedStratifiedKFold`. Currently, the __repr__ methods for these classes are not implemented or not correctly implemented, causing them to display the default object representation instead of the expected parameters. To address this issue, it is crucial to find the relevant sections of the code responsible for the representation of these classes. After analyzing the search results, it is evident that the `_RepeatedSplits` class is a common base class for both `RepeatedKFold` and `RepeatedStratifiedKFold`. However, the `_RepeatedSplits` class does not appear to define a __repr__ method, which suggests that the issue might be related to this missing method. Therefore, the relevant code spans to focus on would be the definitions of `_RepeatedSplits`, `RepeatedKFold`, and `RepeatedStratifiedKFold`.",
            "identified_spans": [
              {
                "span_ids": [
                  "_RepeatedSplits",
                  "RepeatedKFold",
                  "RepeatedStratifiedKFold"
                ],
                "file_path": "sklearn/model_selection/_split.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 2368,
          "output_tokens": 278,
          "retry_message": null,
          "completion_cost": 0.011274
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "Based on the provided file context, the implementations of the RepeatedKFold and RepeatedStratifiedKFold classes do not include a __repr__ method. This explains why the __repr__ string is not showing correctly. The next step is to look for the _RepeatedSplits class to check if it includes a __repr__ method. If not, this will need to be implemented in either the _RepeatedSplits class or directly in the RepeatedKFold and RepeatedStratifiedKFold classes.",
            "search_suggestions": "Look for the _RepeatedSplits class in the file context to check if it includes a __repr__ method. If the _RepeatedSplits class does not include a __repr__ method, consider implementing this functionality either in the _RepeatedSplits class or directly in the RepeatedKFold and RepeatedStratifiedKFold classes."
          },
          "output": {
            "message": "Look for the _RepeatedSplits class in the file context to check if it includes a __repr__ method. If the _RepeatedSplits class does not include a __repr__ method, consider implementing this functionality either in the _RepeatedSplits class or directly in the RepeatedKFold and RepeatedStratifiedKFold classes."
          },
          "input_tokens": 2172,
          "output_tokens": 213,
          "retry_message": null,
          "completion_cost": 0.009711000000000001
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Look for the _RepeatedSplits class in the file context to check if it includes a __repr__ method. If the _RepeatedSplits class does not include a __repr__ method, consider implementing this functionality either in the _RepeatedSplits class or directly in the RepeatedKFold and RepeatedStratifiedKFold classes.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": true,
            "scratch_pad": "The _RepeatedSplits class, as shown in the file context, does not include a __repr__ method. This is likely why the RepeatedKFold and RepeatedStratifiedKFold classes are not displaying the correct __repr__ strings. To resolve this issue, we should implement the __repr__ method in the _RepeatedSplits class. This method should correctly format the string representation of the object, including the number of splits, number of repeats, and random state if applicable.",
            "search_requests": [
              {
                "query": "implementation of __repr__ method in _RepeatedSplits class",
                "class_names": [
                  "_RepeatedSplits"
                ],
                "code_snippet": null,
                "file_pattern": "**/sklearn/model_selection/_split.py",
                "function_names": [
                  "__repr__"
                ]
              }
            ]
          },
          "output": {
            "message": "The _RepeatedSplits class, as shown in the file context, does not include a __repr__ method. This is likely why the RepeatedKFold and RepeatedStratifiedKFold classes are not displaying the correct __repr__ strings. To resolve this issue, we should implement the __repr__ method in the _RepeatedSplits class. This method should correctly format the string representation of the object, including the number of splits, number of repeats, and random state if applicable."
          },
          "input_tokens": 4779,
          "output_tokens": 222,
          "retry_message": null,
          "completion_cost": 0.017667000000000002
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": "The _RepeatedSplits class, as shown in the file context, does not include a __repr__ method. This is likely why the RepeatedKFold and RepeatedStratifiedKFold classes are not displaying the correct __repr__ strings. To resolve this issue, we should implement the __repr__ method in the _RepeatedSplits class. This method should correctly format the string representation of the object, including the number of splits, number of repeats, and random state if applicable.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "_RepeatedSplits",
            "file_path": "sklearn/model_selection/_split.py",
            "scratch_pad": "To fix the issue where RepeatedKFold and RepeatedStratifiedKFold do not show correct __repr__ strings, we need to implement the __repr__ method in the _RepeatedSplits class. This method should format the string representation to include the number of splits, number of repeats, and random state if available.",
            "instructions": "Implement the __repr__ method in the _RepeatedSplits class to format the string representation as 'RepeatedKFold(n_splits=5, n_repeats=10, random_state=None)' for both RepeatedKFold and RepeatedStratifiedKFold."
          },
          "output": {
            "span_id": "_RepeatedSplits",
            "file_path": "sklearn/model_selection/_split.py",
            "instructions": "Implement the __repr__ method in the _RepeatedSplits class to format the string representation as 'RepeatedKFold(n_splits=5, n_repeats=10, random_state=None)' for both RepeatedKFold and RepeatedStratifiedKFold."
          },
          "input_tokens": 2857,
          "output_tokens": 189,
          "retry_message": null,
          "completion_cost": 0.011406000000000001
        }
      ]
    },
    {
      "name": "ClarifyCodeChange",
      "state": {
        "model": "deepseek-coder",
        "span_id": "_RepeatedSplits",
        "end_line": null,
        "file_path": "sklearn/model_selection/_split.py",
        "max_tokens": 1000,
        "start_line": null,
        "temperature": 1.6,
        "instructions": "Implement the __repr__ method in the _RepeatedSplits class to format the string representation as 'RepeatedKFold(n_splits=5, n_repeats=10, random_state=None)' for both RepeatedKFold and RepeatedStratifiedKFold.\n\nThe __repr__ method is not currently implemented in the _RepeatedSplits class. We need to add the __repr__ method between the end of the __init__ method and the start of the split method.",
        "max_iterations": null,
        "include_message_history": false,
        "max_tokens_in_edit_prompt": 500
      },
      "actions": [
        {
          "action": {
            "reject": null,
            "end_line": 1105,
            "start_line": 1105,
            "scratch_pad": "The __repr__ method is not currently implemented in the _RepeatedSplits class. We need to add the __repr__ method between the end of the __init__ method and the start of the split method."
          },
          "output": {
            "span_id": "_RepeatedSplits",
            "end_line": 1137,
            "file_path": "sklearn/model_selection/_split.py",
            "start_line": 1106,
            "instructions": "Implement the __repr__ method in the _RepeatedSplits class to format the string representation as 'RepeatedKFold(n_splits=5, n_repeats=10, random_state=None)' for both RepeatedKFold and RepeatedStratifiedKFold.\n\nThe __repr__ method is not currently implemented in the _RepeatedSplits class. We need to add the __repr__ method between the end of the __init__ method and the start of the split method."
          },
          "input_tokens": 948,
          "output_tokens": 84,
          "retry_message": null,
          "completion_cost": 0.004104
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "_RepeatedSplits",
        "end_line": 1137,
        "file_path": "sklearn/model_selection/_split.py",
        "max_tokens": 1000,
        "start_line": 1106,
        "temperature": 1.6,
        "instructions": "Implement the __repr__ method in the _RepeatedSplits class to format the string representation as 'RepeatedKFold(n_splits=5, n_repeats=10, random_state=None)' for both RepeatedKFold and RepeatedStratifiedKFold.\n\nThe __repr__ method is not currently implemented in the _RepeatedSplits class. We need to add the __repr__ method between the end of the __init__ method and the start of the split method.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "<replace>\n    def split(self, X, y=None, groups=None):\n        \"\"\"Generates indices to split data into training and test set.\n\n        Parameters\n        ----------\n        X : array-like, shape (n_samples, n_features)\n            Training data, where n_samples is the number of samples\n            and n_features is the number of features.\n\n        y : array-like, of length n_samples\n            The target variable for supervised learning problems.\n\n        groups : array-like, with shape (n_samples,), optional\n            Group labels for the samples used while splitting the dataset into\n            train/test set.\n\n        Yields\n        ------\n        train : ndarray\n            The training set indices for that split.\n\n        test : ndarray\n            The testing set indices for that split.\n        \"\"\"\n        n_repeats = self.n_repeats\n        rng = check_random_state(self.random_state)\n\n        for idx in range(n_repeats):\n            cv = self.cv(random_state=rng, shuffle=True,\n                         **self.cvargs)\n            for train_index, test_index in cv.split(X, y, groups):\n                yield train_index, test_index\n    \n    def __repr__(self):\n        return (f\"{self.__class__.__name__}(n_splits={self.cvargs['n_splits']}, \"\n                f\"n_repeats={self.n_repeats}, random_state={self.random_state})\")\n</replace>"
          },
          "output": {
            "diff": "--- sklearn/model_selection/_split.py\n+++ sklearn/model_selection/_split.py\n@@ -1135,6 +1135,10 @@\n                          **self.cvargs)\n             for train_index, test_index in cv.split(X, y, groups):\n                 yield train_index, test_index\n+    \n+    def __repr__(self):\n+        return (f\"{self.__class__.__name__}(n_splits={self.cvargs['n_splits']}, \"\n+                f\"n_repeats={self.n_repeats}, random_state={self.random_state})\")\n \n     def get_n_splits(self, X=None, y=None, groups=None):\n         \"\"\"Returns the number of splitting iterations in the cross-validator\n",
            "message": "Applied the change to sklearn/model_selection/_split.py.",
            "verification_errors": []
          },
          "input_tokens": 6194,
          "output_tokens": 369,
          "retry_message": null,
          "completion_cost": 0.024117
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": "--- sklearn/model_selection/_split.py\n+++ sklearn/model_selection/_split.py\n@@ -1135,6 +1135,10 @@\n                          **self.cvargs)\n             for train_index, test_index in cv.split(X, y, groups):\n                 yield train_index, test_index\n+    \n+    def __repr__(self):\n+        return (f\"{self.__class__.__name__}(n_splits={self.cvargs['n_splits']}, \"\n+                f\"n_repeats={self.n_repeats}, random_state={self.random_state})\")\n \n     def get_n_splits(self, X=None, y=None, groups=None):\n         \"\"\"Returns the number of splitting iterations in the cross-validator\n",
        "model": "deepseek-coder",
        "message": "Applied the change to sklearn/model_selection/_split.py.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": [],
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "finish",
            "finish": "The issue has been resolved by implementing the __repr__ method in the _RepeatedSplits class, which now correctly formats the string representation for RepeatedKFold and RepeatedStratifiedKFold.",
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "The __repr__ method has been successfully implemented in the _RepeatedSplits class. This should ensure that both RepeatedKFold and RepeatedStratifiedKFold now display the correct string representation, including the number of splits, number of repeats, and random state if applicable.",
            "instructions": null
          },
          "output": {
            "message": "The issue has been resolved by implementing the __repr__ method in the _RepeatedSplits class, which now correctly formats the string representation for RepeatedKFold and RepeatedStratifiedKFold."
          },
          "input_tokens": 3454,
          "output_tokens": 160,
          "retry_message": null,
          "completion_cost": 0.012761999999999999
        }
      ]
    },
    {
      "name": "Finished",
      "state": {
        "model": "gpt-4o",
        "output": {
          "model": "deepseek-coder",
          "temperature": 1.6
        },
        "message": "The issue has been resolved by implementing the __repr__ method in the _RepeatedSplits class, which now correctly formats the string representation for RepeatedKFold and RepeatedStratifiedKFold.",
        "max_tokens": 1000,
        "temperature": 0.0,
        "max_iterations": null,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "RepeatedKFold and RepeatedStratifiedKFold do not show correct __repr__ string\n#### Description\r\n\r\n`RepeatedKFold` and `RepeatedStratifiedKFold` do not show correct \\_\\_repr\\_\\_ string.\r\n\r\n#### Steps/Code to Reproduce\r\n\r\n```python\r\n>>> from sklearn.model_selection import RepeatedKFold, RepeatedStratifiedKFold\r\n>>> repr(RepeatedKFold())\r\n>>> repr(RepeatedStratifiedKFold())\r\n```\r\n\r\n#### Expected Results\r\n\r\n```python\r\n>>> repr(RepeatedKFold())\r\nRepeatedKFold(n_splits=5, n_repeats=10, random_state=None)\r\n>>> repr(RepeatedStratifiedKFold())\r\nRepeatedStratifiedKFold(n_splits=5, n_repeats=10, random_state=None)\r\n```\r\n\r\n#### Actual Results\r\n\r\n```python\r\n>>> repr(RepeatedKFold())\r\n'<sklearn.model_selection._split.RepeatedKFold object at 0x0000016421AA4288>'\r\n>>> repr(RepeatedStratifiedKFold())\r\n'<sklearn.model_selection._split.RepeatedStratifiedKFold object at 0x0000016420E115C8>'\r\n```\r\n\r\n#### Versions\r\n```\r\nSystem:\r\n    python: 3.7.4 (default, Aug  9 2019, 18:34:13) [MSC v.1915 64 bit (AMD64)]\r\nexecutable: D:\\anaconda3\\envs\\xyz\\python.exe\r\n   machine: Windows-10-10.0.16299-SP0\r\n\r\nBLAS:\r\n    macros:\r\n  lib_dirs:\r\ncblas_libs: cblas\r\n\r\nPython deps:\r\n       pip: 19.2.2\r\nsetuptools: 41.0.1\r\n   sklearn: 0.21.2\r\n     numpy: 1.16.4\r\n     scipy: 1.3.1\r\n    Cython: None\r\n    pandas: 0.24.2\r\n```\n"
}