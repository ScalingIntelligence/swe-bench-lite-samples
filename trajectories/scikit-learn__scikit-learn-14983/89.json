{
  "info": {
    "duration": 203.6083357334137,
    "submission": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex c49a3ce6a..bfd30dae5 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1163,6 +1163,9 @@ class _RepeatedSplits(metaclass=ABCMeta):\n                      **self.cvargs)\n         return cv.get_n_splits(X, y, groups) * self.n_repeats\n \n+    def __repr__(self):\n+        return _build_repr(self)\n+\n \n class RepeatedKFold(_RepeatedSplits):\n     \"\"\"Repeated K-Fold cross validator.\n",
    "total_cost": 0.168111,
    "instance_id": "scikit-learn__scikit-learn-14983",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue describes that `RepeatedKFold` and `RepeatedStratifiedKFold` are not showing the correct `__repr__` string. The expected output should include parameters like `n_splits`, `n_repeats`, and `random_state`. This suggests we need to focus on these classes and their `__repr__` methods. Given the context, it appears `RepeatedKFold` and `RepeatedStratifiedKFold` inherit from `_RepeatedSplits` which does not override `__repr__`. We should check for any parent classes used by these splits, such as `BaseCrossValidator` or `BaseEstimator`, and ensure they have appropriate `__repr__` definitions.",
            "search_requests": [
              {
                "query": "RepeatedKFold and RepeatedStratifiedKFold __repr__",
                "class_names": [
                  "RepeatedKFold",
                  "RepeatedStratifiedKFold",
                  "BaseCrossValidator",
                  "BaseEstimator"
                ],
                "code_snippet": null,
                "file_pattern": "**/model_selection/**/*.py",
                "function_names": []
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 437,
                "span_id": "RepeatedStratifiedKFold",
                "file_path": "sklearn/model_selection/_split.py"
              },
              {
                "rank": 1,
                "tokens": 458,
                "span_id": "RepeatedKFold",
                "file_path": "sklearn/model_selection/_split.py"
              },
              {
                "rank": 8,
                "tokens": 28,
                "span_id": "BaseCrossValidator._iter_test_indices",
                "file_path": "sklearn/model_selection/_split.py"
              },
              {
                "rank": 8,
                "tokens": 238,
                "span_id": "BaseCrossValidator.split",
                "file_path": "sklearn/model_selection/_split.py"
              },
              {
                "rank": 8,
                "tokens": 11,
                "span_id": "BaseCrossValidator.__repr__",
                "file_path": "sklearn/model_selection/_split.py"
              },
              {
                "rank": 8,
                "tokens": 31,
                "span_id": "BaseCrossValidator.get_n_splits",
                "file_path": "sklearn/model_selection/_split.py"
              },
              {
                "rank": 8,
                "tokens": 83,
                "span_id": "BaseCrossValidator._iter_test_masks",
                "file_path": "sklearn/model_selection/_split.py"
              },
              {
                "rank": 21,
                "tokens": 39,
                "span_id": "BaseCrossValidator",
                "file_path": "sklearn/model_selection/_split.py"
              }
            ],
            "search_requests": [
              {
                "query": "RepeatedKFold and RepeatedStratifiedKFold __repr__",
                "class_names": [
                  "RepeatedKFold",
                  "RepeatedStratifiedKFold",
                  "BaseCrossValidator",
                  "BaseEstimator"
                ],
                "code_snippet": null,
                "file_pattern": "**/model_selection/**/*.py",
                "function_names": []
              }
            ]
          },
          "input_tokens": 3497,
          "output_tokens": 254,
          "retry_message": null,
          "completion_cost": 0.014301000000000001
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 437,
            "span_id": "RepeatedStratifiedKFold",
            "file_path": "sklearn/model_selection/_split.py"
          },
          {
            "rank": 1,
            "tokens": 458,
            "span_id": "RepeatedKFold",
            "file_path": "sklearn/model_selection/_split.py"
          },
          {
            "rank": 8,
            "tokens": 28,
            "span_id": "BaseCrossValidator._iter_test_indices",
            "file_path": "sklearn/model_selection/_split.py"
          },
          {
            "rank": 8,
            "tokens": 238,
            "span_id": "BaseCrossValidator.split",
            "file_path": "sklearn/model_selection/_split.py"
          },
          {
            "rank": 8,
            "tokens": 11,
            "span_id": "BaseCrossValidator.__repr__",
            "file_path": "sklearn/model_selection/_split.py"
          },
          {
            "rank": 8,
            "tokens": 31,
            "span_id": "BaseCrossValidator.get_n_splits",
            "file_path": "sklearn/model_selection/_split.py"
          },
          {
            "rank": 8,
            "tokens": 83,
            "span_id": "BaseCrossValidator._iter_test_masks",
            "file_path": "sklearn/model_selection/_split.py"
          },
          {
            "rank": 21,
            "tokens": 39,
            "span_id": "BaseCrossValidator",
            "file_path": "sklearn/model_selection/_split.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue concerns the `__repr__` method of `RepeatedKFold` and `RepeatedStratifiedKFold` not displaying the correct string representation. The expected output should include parameters like `n_splits`, `n_repeats`, and `random_state`. The current implementation of `__repr__` for `BaseCrossValidator` is using `_build_repr`, which does not seem to be capturing these parameters correctly. Analyzing the provided code spans, the relevant spans are '_build_repr', 'RepeatedKFold.__init__', and 'RepeatedStratifiedKFold.__init__'. These spans contain the logic for initializing the classes and the method used for creating the string representation.",
            "identified_spans": [
              {
                "span_ids": [
                  "_build_repr",
                  "RepeatedKFold.__init__",
                  "RepeatedStratifiedKFold.__init__"
                ],
                "file_path": "sklearn/model_selection/_split.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 2851,
          "output_tokens": 242,
          "retry_message": null,
          "completion_cost": 0.012183
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The issue describes that `RepeatedKFold` and `RepeatedStratifiedKFold` are not showing the correct `__repr__` string. The expected output should include parameters like `n_splits`, `n_repeats`, and `random_state`. This suggests we need to focus on these classes and their `__repr__` methods. Given the context, it appears `RepeatedKFold` and `RepeatedStratifiedKFold` inherit from `_RepeatedSplits` which does not override `__repr__`. We should check for any parent classes used by these splits, such as `BaseCrossValidator` or `BaseEstimator`, and ensure they have appropriate `__repr__` definitions.",
            "search_suggestions": "Check the implementation of `_RepeatedSplits` and its parent classes to ensure the `__repr__` method is correctly defined and includes parameters like `n_splits`, `n_repeats`, and `random_state`."
          },
          "output": {
            "message": "Check the implementation of `_RepeatedSplits` and its parent classes to ensure the `__repr__` method is correctly defined and includes parameters like `n_splits`, `n_repeats`, and `random_state`."
          },
          "input_tokens": 2116,
          "output_tokens": 237,
          "retry_message": null,
          "completion_cost": 0.009903
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Check the implementation of `_RepeatedSplits` and its parent classes to ensure the `__repr__` method is correctly defined and includes parameters like `n_splits`, `n_repeats`, and `random_state`.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": true,
            "scratch_pad": "From the provided context, it seems that both `RepeatedKFold` and `RepeatedStratifiedKFold` derive from `_RepeatedSplits`, which does not define its own `__repr__` method. However, their parent class `BaseCrossValidator` does define a `__repr__` method that uses `_build_repr`, which constructs the representation string based on the class's initialization parameters. This method should include parameters like `n_splits`, `n_repeats`, and `random_state` since these are included in the `__init__` methods of `RepeatedKFold` and `RepeatedStratifiedKFold`.",
            "search_requests": []
          },
          "output": {
            "message": "From the provided context, it seems that both `RepeatedKFold` and `RepeatedStratifiedKFold` derive from `_RepeatedSplits`, which does not define its own `__repr__` method. However, their parent class `BaseCrossValidator` does define a `__repr__` method that uses `_build_repr`, which constructs the representation string based on the class's initialization parameters. This method should include parameters like `n_splits`, `n_repeats`, and `random_state` since these are included in the `__init__` methods of `RepeatedKFold` and `RepeatedStratifiedKFold`."
          },
          "input_tokens": 4483,
          "output_tokens": 168,
          "retry_message": null,
          "completion_cost": 0.015969
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": "From the provided context, it seems that both `RepeatedKFold` and `RepeatedStratifiedKFold` derive from `_RepeatedSplits`, which does not define its own `__repr__` method. However, their parent class `BaseCrossValidator` does define a `__repr__` method that uses `_build_repr`, which constructs the representation string based on the class's initialization parameters. This method should include parameters like `n_splits`, `n_repeats`, and `random_state` since these are included in the `__init__` methods of `RepeatedKFold` and `RepeatedStratifiedKFold`.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "BaseCrossValidator.__repr__",
            "file_path": "sklearn/model_selection/_split.py",
            "scratch_pad": "The issue seems to be that `_RepeatedSplits` does not define its own `__repr__` method, leading to the default object representation being used. To fix this, we need to define a `__repr__` method for `_RepeatedSplits` that constructs the representation string using `_build_repr`, similar to how it's done in other classes like `BaseShuffleSplit`. This will ensure that the `__repr__` method includes parameters like `n_splits`, `n_repeats`, and `random_state`.",
            "instructions": "Define a `__repr__` method for `_RepeatedSplits` that uses `_build_repr` to construct the representation string."
          },
          "output": {
            "span_id": "BaseCrossValidator.__repr__",
            "end_line": 106,
            "file_path": "sklearn/model_selection/_split.py",
            "start_line": 105,
            "instructions": "Define a `__repr__` method for `_RepeatedSplits` that uses `_build_repr` to construct the representation string."
          },
          "input_tokens": 3021,
          "output_tokens": 211,
          "retry_message": null,
          "completion_cost": 0.012228
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "BaseCrossValidator.__repr__",
        "end_line": 106,
        "file_path": "sklearn/model_selection/_split.py",
        "max_tokens": 1000,
        "start_line": 105,
        "temperature": 1.6,
        "instructions": "Define a `__repr__` method for `_RepeatedSplits` that uses `_build_repr` to construct the representation string.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "<replace>\n    def __repr__(self):\n        return _build_repr(self)\n</replace>"
          },
          "output": null,
          "input_tokens": 5372,
          "output_tokens": 25,
          "retry_message": "The code in the replace tag is the same as in the search. Use the reject function if you can't do any changes and want to reject the instructions.",
          "completion_cost": 0.016491000000000002
        },
        {
          "action": {
            "content": "<reject>\nThe provided instructions do not specify the exact changes needed in the __repr__ method for the _RepeatedSplits class.\n</reject>"
          },
          "output": {
            "message": "\nThe provided instructions do not specify the exact changes needed in the __repr__ method for the _RepeatedSplits class.\n"
          },
          "input_tokens": 5437,
          "output_tokens": 32,
          "retry_message": null,
          "completion_cost": 0.016791
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": "\nThe provided instructions do not specify the exact changes needed in the __repr__ method for the _RepeatedSplits class.\n",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "_RepeatedSplits.__repr__",
            "file_path": "sklearn/model_selection/_split.py",
            "scratch_pad": "To address the issue, we need to define a `__repr__` method for `_RepeatedSplits` that constructs the representation string using `_build_repr`. This method will ensure that the representation includes parameters like `n_splits`, `n_repeats`, and `random_state`. This will correct the output of `repr(RepeatedKFold())` and `repr(RepeatedStratifiedKFold())`.",
            "instructions": "Define a `__repr__` method for `_RepeatedSplits` that uses `_build_repr` to construct the representation string."
          },
          "output": null,
          "input_tokens": 3715,
          "output_tokens": 197,
          "retry_message": "Span not found: _RepeatedSplits.__repr__. Available spans: RepeatedKFold.__init__, _build_repr, RepeatedStratifiedKFold.__init__, RepeatedKFold, KFold, BaseShuffleSplit.__repr__, BaseCrossValidator.__repr__, RepeatedStratifiedKFold, StratifiedKFold, KFold.__init__, StratifiedKFold.__init__, _RepeatedSplits, _BaseKFold, check_cv, BaseShuffleSplit.__init__, BaseShuffleSplit, BaseCrossValidator, _BaseKFold.__init__, _RepeatedSplits.__init__",
          "completion_cost": 0.014100000000000001
        },
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "_RepeatedSplits",
            "file_path": "sklearn/model_selection/_split.py",
            "scratch_pad": "Apologies for the confusion. The span `_RepeatedSplits.__repr__` does not exist in the provided context. We need to add this method to the `_RepeatedSplits` class. The method should be similar to the `__repr__` method in `BaseShuffleSplit`, which uses `_build_repr`.",
            "instructions": "Add a `__repr__` method to the `_RepeatedSplits` class that uses `_build_repr` to construct the representation string."
          },
          "output": {
            "span_id": "_RepeatedSplits",
            "file_path": "sklearn/model_selection/_split.py",
            "instructions": "Add a `__repr__` method to the `_RepeatedSplits` class that uses `_build_repr` to construct the representation string."
          },
          "input_tokens": 4045,
          "output_tokens": 175,
          "retry_message": null,
          "completion_cost": 0.01476
        }
      ]
    },
    {
      "name": "ClarifyCodeChange",
      "state": {
        "model": "deepseek-coder",
        "span_id": "_RepeatedSplits",
        "end_line": null,
        "file_path": "sklearn/model_selection/_split.py",
        "max_tokens": 1000,
        "start_line": null,
        "temperature": 1.6,
        "instructions": "Add a `__repr__` method to the `_RepeatedSplits` class that uses `_build_repr` to construct the representation string.\n\nThe __repr__ method should be defined within the _RepeatedSplits class. The instructions specify using _build_repr in the __repr__ method, which suggests adding this method just below the existing methods like split and get_n_splits.",
        "max_iterations": null,
        "include_message_history": false,
        "max_tokens_in_edit_prompt": 500
      },
      "actions": [
        {
          "action": {
            "reject": null,
            "end_line": 1139,
            "start_line": 1139,
            "scratch_pad": "The __repr__ method should be defined within the _RepeatedSplits class. The instructions specify using _build_repr in the __repr__ method, which suggests adding this method just below the existing methods like split and get_n_splits."
          },
          "output": {
            "span_id": "_RepeatedSplits",
            "end_line": 1164,
            "file_path": "sklearn/model_selection/_split.py",
            "start_line": 1139,
            "instructions": "Add a `__repr__` method to the `_RepeatedSplits` class that uses `_build_repr` to construct the representation string.\n\nThe __repr__ method should be defined within the _RepeatedSplits class. The instructions specify using _build_repr in the __repr__ method, which suggests adding this method just below the existing methods like split and get_n_splits."
          },
          "input_tokens": 918,
          "output_tokens": 92,
          "retry_message": null,
          "completion_cost": 0.004134
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "_RepeatedSplits",
        "end_line": 1164,
        "file_path": "sklearn/model_selection/_split.py",
        "max_tokens": 1000,
        "start_line": 1139,
        "temperature": 1.6,
        "instructions": "Add a `__repr__` method to the `_RepeatedSplits` class that uses `_build_repr` to construct the representation string.\n\nThe __repr__ method should be defined within the _RepeatedSplits class. The instructions specify using _build_repr in the __repr__ method, which suggests adding this method just below the existing methods like split and get_n_splits.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "```\n<replace>\n    def get_n_splits(self, X=None, y=None, groups=None):\n        \"\"\"Returns the number of splitting iterations in the cross-validator\n\n        Parameters\n        ----------\n        X : object\n            Always ignored, exists for compatibility.\n            ``np.zeros(n_samples)`` may be used as a placeholder.\n\n        y : object\n            Always ignored, exists for compatibility.\n            ``np.zeros(n_samples)`` may be used as a placeholder.\n\n        groups : array-like, with shape (n_samples,), optional\n            Group labels for the samples used while splitting the dataset into\n            train/test set.\n\n        Returns\n        -------\n        n_splits : int\n            Returns the number of splitting iterations in the cross-validator.\n        \"\"\"\n        rng = check_random_state(self.random_state)\n        cv = self.cv(random_state=rng, shuffle=True,\n                     **self.cvargs)\n        return cv.get_n_splits(X, y, groups) * self.n_repeats\n    \n    def __repr__(self):\n        return _build_repr(self)\n</replace>"
          },
          "output": {
            "diff": "--- sklearn/model_selection/_split.py\n+++ sklearn/model_selection/_split.py\n@@ -1162,6 +1162,9 @@\n         cv = self.cv(random_state=rng, shuffle=True,\n                      **self.cvargs)\n         return cv.get_n_splits(X, y, groups) * self.n_repeats\n+    \n+    def __repr__(self):\n+        return _build_repr(self)\n \n \n class RepeatedKFold(_RepeatedSplits):\n",
            "message": "Applied the change to sklearn/model_selection/_split.py.\n\n<scratch_pad>\n```\n</scratch_pad>",
            "verification_errors": []
          },
          "input_tokens": 6066,
          "output_tokens": 280,
          "retry_message": null,
          "completion_cost": 0.022397999999999998
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": "--- sklearn/model_selection/_split.py\n+++ sklearn/model_selection/_split.py\n@@ -1162,6 +1162,9 @@\n         cv = self.cv(random_state=rng, shuffle=True,\n                      **self.cvargs)\n         return cv.get_n_splits(X, y, groups) * self.n_repeats\n+    \n+    def __repr__(self):\n+        return _build_repr(self)\n \n \n class RepeatedKFold(_RepeatedSplits):\n",
        "model": "deepseek-coder",
        "message": "Applied the change to sklearn/model_selection/_split.py.\n\n<scratch_pad>\n```\n</scratch_pad>",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": [],
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "finish",
            "finish": "The issue with the incorrect `__repr__` string for `RepeatedKFold` and `RepeatedStratifiedKFold` has been resolved by defining the `__repr__` method in the `_RepeatedSplits` class.",
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "The change has been successfully applied. The `__repr__` method for `_RepeatedSplits` now correctly uses `_build_repr` to construct the representation string, which includes parameters like `n_splits`, `n_repeats`, and `random_state`.",
            "instructions": null
          },
          "output": {
            "message": "The issue with the incorrect `__repr__` string for `RepeatedKFold` and `RepeatedStratifiedKFold` has been resolved by defining the `__repr__` method in the `_RepeatedSplits` class."
          },
          "input_tokens": 4101,
          "output_tokens": 170,
          "retry_message": null,
          "completion_cost": 0.014853
        }
      ]
    },
    {
      "name": "Finished",
      "state": {
        "model": "gpt-4o",
        "output": {
          "model": "deepseek-coder",
          "temperature": 1.6
        },
        "message": "The issue with the incorrect `__repr__` string for `RepeatedKFold` and `RepeatedStratifiedKFold` has been resolved by defining the `__repr__` method in the `_RepeatedSplits` class.",
        "max_tokens": 1000,
        "temperature": 0.0,
        "max_iterations": null,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "RepeatedKFold and RepeatedStratifiedKFold do not show correct __repr__ string\n#### Description\r\n\r\n`RepeatedKFold` and `RepeatedStratifiedKFold` do not show correct \\_\\_repr\\_\\_ string.\r\n\r\n#### Steps/Code to Reproduce\r\n\r\n```python\r\n>>> from sklearn.model_selection import RepeatedKFold, RepeatedStratifiedKFold\r\n>>> repr(RepeatedKFold())\r\n>>> repr(RepeatedStratifiedKFold())\r\n```\r\n\r\n#### Expected Results\r\n\r\n```python\r\n>>> repr(RepeatedKFold())\r\nRepeatedKFold(n_splits=5, n_repeats=10, random_state=None)\r\n>>> repr(RepeatedStratifiedKFold())\r\nRepeatedStratifiedKFold(n_splits=5, n_repeats=10, random_state=None)\r\n```\r\n\r\n#### Actual Results\r\n\r\n```python\r\n>>> repr(RepeatedKFold())\r\n'<sklearn.model_selection._split.RepeatedKFold object at 0x0000016421AA4288>'\r\n>>> repr(RepeatedStratifiedKFold())\r\n'<sklearn.model_selection._split.RepeatedStratifiedKFold object at 0x0000016420E115C8>'\r\n```\r\n\r\n#### Versions\r\n```\r\nSystem:\r\n    python: 3.7.4 (default, Aug  9 2019, 18:34:13) [MSC v.1915 64 bit (AMD64)]\r\nexecutable: D:\\anaconda3\\envs\\xyz\\python.exe\r\n   machine: Windows-10-10.0.16299-SP0\r\n\r\nBLAS:\r\n    macros:\r\n  lib_dirs:\r\ncblas_libs: cblas\r\n\r\nPython deps:\r\n       pip: 19.2.2\r\nsetuptools: 41.0.1\r\n   sklearn: 0.21.2\r\n     numpy: 1.16.4\r\n     scipy: 1.3.1\r\n    Cython: None\r\n    pandas: 0.24.2\r\n```\n"
}