{
  "info": {
    "duration": 226.13311505317688,
    "submission": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex fb0a5426e6..7eb7e0a246 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -137,7 +137,10 @@ def use(style):\n                     \"correspond to the styles shipped by seaborn. However, \"\n                     \"they will remain available as 'seaborn-v0_8-<style>'. \"\n                     \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+                if s == \"seaborn-colorblind\":\n+                    s = \"seaborn-v0_8-colorblind\"\n+                else:\n+                    s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n         return s\n \n     for style in map(fix_style, styles):\n",
    "total_cost": 0.15109799999999998,
    "instance_id": "matplotlib__matplotlib-24265",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue is a key error related to accessing 'seaborn-colorblind' from matplotlib.pyplot.style.library. Given the initial context, we know that this functionality worked in matplotlib v3.4.3 but not in v3.6.1. The investigation should focus on changes between these versions, especially in the style or library management parts of the codebase. Based on the files provided, we can narrow down the search to files that deal directly with styles and libraries in matplotlib.",
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "style.library"
                ],
                "code_snippet": "plt.style.library[\"seaborn-colorblind\"]",
                "file_pattern": "lib/matplotlib/style/**/*.py",
                "function_names": []
              }
            ]
          },
          "output": null,
          "input_tokens": 4107,
          "output_tokens": 202,
          "retry_message": "\n\nUnfortunately, I didn\u2019t find any relevant results.",
          "completion_cost": 0.015351
        },
        {
          "action": {
            "complete": false,
            "scratch_pad": "Since the initial search didn't yield relevant results, it suggests that the error might be due to upstream changes or configurations impacted by the upgrade. The next approach should widen the scope to include the neighboring code that interfaces with the style library, focusing on any change in behavior. Additionally, we should look into configuration management in conjunction with version differences.",
            "search_requests": [
              {
                "query": "changes in style library behavior between versions 3.4.3 and 3.6.1",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": "lib/matplotlib/**/*.py",
                "function_names": [
                  "use",
                  "update_user_library",
                  "update_nested_dict"
                ]
              },
              {
                "query": "managing matplotlib configuration differences",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": [
                  "update_matplotlibrc",
                  "matplotlib_fname"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 112,
                "span_id": "update_nested_dict",
                "file_path": "lib/matplotlib/style/core.py"
              },
              {
                "rank": 1,
                "tokens": 50,
                "span_id": "update_user_library",
                "file_path": "lib/matplotlib/style/core.py"
              },
              {
                "rank": 2,
                "tokens": 777,
                "span_id": "use",
                "file_path": "lib/matplotlib/style/core.py"
              },
              {
                "rank": 185,
                "tokens": 591,
                "span_id": "use",
                "file_path": "lib/matplotlib/__init__.py"
              },
              {
                "rank": 0,
                "tokens": 376,
                "span_id": "matplotlib_fname",
                "file_path": "lib/matplotlib/__init__.py"
              },
              {
                "rank": 2,
                "tokens": 179,
                "span_id": "update_matplotlibrc",
                "file_path": "setup.py"
              }
            ],
            "search_requests": [
              {
                "query": "changes in style library behavior between versions 3.4.3 and 3.6.1",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": "lib/matplotlib/**/*.py",
                "function_names": [
                  "use",
                  "update_user_library",
                  "update_nested_dict"
                ]
              },
              {
                "query": "managing matplotlib configuration differences",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": [
                  "update_matplotlibrc",
                  "matplotlib_fname"
                ]
              }
            ]
          },
          "input_tokens": 4342,
          "output_tokens": 256,
          "retry_message": null,
          "completion_cost": 0.016866000000000003
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 112,
            "span_id": "update_nested_dict",
            "file_path": "lib/matplotlib/style/core.py"
          },
          {
            "rank": 1,
            "tokens": 50,
            "span_id": "update_user_library",
            "file_path": "lib/matplotlib/style/core.py"
          },
          {
            "rank": 2,
            "tokens": 777,
            "span_id": "use",
            "file_path": "lib/matplotlib/style/core.py"
          },
          {
            "rank": 185,
            "tokens": 591,
            "span_id": "use",
            "file_path": "lib/matplotlib/__init__.py"
          },
          {
            "rank": 0,
            "tokens": 376,
            "span_id": "matplotlib_fname",
            "file_path": "lib/matplotlib/__init__.py"
          },
          {
            "rank": 2,
            "tokens": 179,
            "span_id": "update_matplotlibrc",
            "file_path": "setup.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue is about a KeyError when trying to access 'seaborn-colorblind' in matplotlib.pyplot.style.library with matplotlib version 3.6.1. The search results contain relevant code spans that show the handling of styles and deprecation warnings related to seaborn styles. Specifically, the 'use' function and the 'fix_style' function within 'lib/matplotlib/style/core.py' are relevant as they handle the updating of styles and include a deprecation warning for seaborn styles in version 3.6. These spans are directly relevant to understanding how matplotlib handles styles and deprecations, which is key to diagnosing the reported issue. Additionally, the code spans in 'lib/matplotlib/__init__.py' and 'setup.py' are not directly relevant to the issue at hand but do provide context on the overall structure and setup of matplotlib.",
            "identified_spans": [
              {
                "span_ids": [
                  "_apply_style",
                  "use",
                  "context",
                  "_base_library"
                ],
                "file_path": "lib/matplotlib/style/core.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 4343,
          "output_tokens": 275,
          "retry_message": null,
          "completion_cost": 0.017154000000000003
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": true,
            "relevant": true,
            "scratch_pad": "The file context provided includes relevant code that deals with style handling in matplotlib, specifically the functions `use` and `fix_style`. These functions manage the application of styles, including handling deprecation warnings for certain seaborn styles like 'seaborn-colorblind'. The code contains logic that would affect how 'seaborn-colorblind' is handled, with a deprecation warning specified for versions greater than or equal to 3.6. This indicates that the removal or change of handling for 'seaborn-colorblind' in version 3.6.1 could be directly related to the reported KeyError. Therefore, the file context provided is relevant and complete for addressing the reported issue.",
            "search_suggestions": null
          },
          "output": {},
          "input_tokens": 2109,
          "output_tokens": 183,
          "retry_message": null,
          "completion_cost": 0.009072
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": null,
            "file_path": "lib/matplotlib/style/core.py",
            "scratch_pad": "The issue is related to the deprecation of seaborn styles in matplotlib version 3.6.1. The current implementation attempts to use 'seaborn-colorblind' which is no longer available and results in a KeyError. To resolve this, we need to update the fix_style function to handle the replacement of deprecated seaborn styles with their corresponding new styles ('seaborn-v0_8-<style>').",
            "instructions": "Update the fix_style function to correctly replace the deprecated 'seaborn-colorblind' style with 'seaborn-v0_8-colorblind'."
          },
          "output": null,
          "input_tokens": 2340,
          "output_tokens": 198,
          "retry_message": "You must either provide an apply_change action or finish.",
          "completion_cost": 0.00999
        },
        {
          "action": {
            "action": "apply_change",
            "finish": null,
            "reject": null,
            "span_id": "_apply_style",
            "file_path": "lib/matplotlib/style/core.py",
            "scratch_pad": "We need to modify the fix_style function to correctly handle the replacement of deprecated seaborn styles. The current implementation already includes a replacement mechanism for seaborn styles, but it only partially covers 'seaborn-colorblind'. We need to ensure that 'seaborn-colorblind' is replaced with 'seaborn-v0_8-colorblind'.",
            "instructions": "In the fix_style function, modify the replacement logic to include 'seaborn-colorblind' and replace it with 'seaborn-v0_8-colorblind'."
          },
          "output": {
            "span_id": "_apply_style",
            "end_line": 62,
            "file_path": "lib/matplotlib/style/core.py",
            "start_line": 61,
            "instructions": "In the fix_style function, modify the replacement logic to include 'seaborn-colorblind' and replace it with 'seaborn-v0_8-colorblind'."
          },
          "input_tokens": 2557,
          "output_tokens": 193,
          "retry_message": null,
          "completion_cost": 0.010565999999999999
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "_apply_style",
        "end_line": 62,
        "file_path": "lib/matplotlib/style/core.py",
        "max_tokens": 1000,
        "start_line": 61,
        "temperature": 1.6,
        "instructions": "In the fix_style function, modify the replacement logic to include 'seaborn-colorblind' and replace it with 'seaborn-v0_8-colorblind'.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "<replace>\ndef _apply_style(d, warn=True):\n    mpl.rcParams.update(_remove_blacklisted_style_params(d, warn=warn))\n</replace>"
          },
          "output": null,
          "input_tokens": 2470,
          "output_tokens": 45,
          "retry_message": "The code in the replace tag is the same as in the search. Use the reject function if you can't do any changes and want to reject the instructions.",
          "completion_cost": 0.008085
        },
        {
          "action": {
            "content": "<reject>\nThe requested change involves modifying the logic of the `fix_style` function to handle the 'seaborn-colorblind' style, which is not directly related to the provided `_apply_style` function.\n</reject>"
          },
          "output": {
            "message": "\nThe requested change involves modifying the logic of the `fix_style` function to handle the 'seaborn-colorblind' style, which is not directly related to the provided `_apply_style` function.\n"
          },
          "input_tokens": 2555,
          "output_tokens": 52,
          "retry_message": null,
          "completion_cost": 0.008445
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": "\nThe requested change involves modifying the logic of the `fix_style` function to handle the 'seaborn-colorblind' style, which is not directly related to the provided `_apply_style` function.\n",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "apply_change",
            "finish": null,
            "reject": null,
            "span_id": "fix_style",
            "file_path": "lib/matplotlib/style/core.py",
            "scratch_pad": "Given the structure of the current `fix_style` function, it appears that it already handles deprecation warnings for seaborn styles and attempts to replace them appropriately. However, it seems that the specific replacement for 'seaborn-colorblind' might not be correctly handled, as the output after replacement should be 'seaborn-v0_8-colorblind'. The issue could be that the replacement mechanism is not accurately transforming 'seaborn-colorblind' to the desired format. Therefore, I suggest modifying the replacement logic within the `fix_style` function to ensure that 'seaborn-colorblind' is correctly replaced.",
            "instructions": "Modify the replacement logic in the `fix_style` function so that 'seaborn-colorblind' is replaced by 'seaborn-v0_8-colorblind' with precision."
          },
          "output": null,
          "input_tokens": 2585,
          "output_tokens": 250,
          "retry_message": "Span not found: fix_style. Available spans: _apply_style, use, context, _remove_blacklisted_style_params",
          "completion_cost": 0.011505000000000001
        },
        {
          "action": {
            "action": "apply_change",
            "finish": null,
            "reject": null,
            "span_id": "use",
            "file_path": "lib/matplotlib/style/core.py",
            "scratch_pad": "Since 'fix_style' is not an available span, we need to find the correct span where the replacement logic for deprecated seaborn styles is applied. The 'use' function contains the logic for fixing the style, therefore, we should modify the 'use' function to correctly handle the 'seaborn-colorblind' style.",
            "instructions": "Within the 'use' function, modify the logic that handles deprecated seaborn styles so that 'seaborn-colorblind' is correctly replaced with 'seaborn-v0_8-colorblind'."
          },
          "output": {
            "span_id": "use",
            "file_path": "lib/matplotlib/style/core.py",
            "instructions": "Within the 'use' function, modify the logic that handles deprecated seaborn styles so that 'seaborn-colorblind' is correctly replaced with 'seaborn-v0_8-colorblind'."
          },
          "input_tokens": 2871,
          "output_tokens": 188,
          "retry_message": null,
          "completion_cost": 0.011433
        }
      ]
    },
    {
      "name": "ClarifyCodeChange",
      "state": {
        "model": "deepseek-coder",
        "span_id": "use",
        "end_line": null,
        "file_path": "lib/matplotlib/style/core.py",
        "max_tokens": 1000,
        "start_line": null,
        "temperature": 1.6,
        "instructions": "Within the 'use' function, modify the logic that handles deprecated seaborn styles so that 'seaborn-colorblind' is correctly replaced with 'seaborn-v0_8-colorblind'.\n\nThe line to modify is within the 'fix_style' function, specifically where the replacement of 'seaborn' with 'seaborn-v0_8' is done. The current replacement logic applies to all seaborn styles, but the instruction requires focusing on 'seaborn-colorblind' specifically.",
        "max_iterations": null,
        "include_message_history": false,
        "max_tokens_in_edit_prompt": 500
      },
      "actions": [
        {
          "action": {
            "reject": null,
            "end_line": 140,
            "start_line": 140,
            "scratch_pad": "The line to modify is within the 'fix_style' function, specifically where the replacement of 'seaborn' with 'seaborn-v0_8' is done. The current replacement logic applies to all seaborn styles, but the instruction requires focusing on 'seaborn-colorblind' specifically."
          },
          "output": {
            "span_id": "use",
            "end_line": 141,
            "file_path": "lib/matplotlib/style/core.py",
            "start_line": 113,
            "instructions": "Within the 'use' function, modify the logic that handles deprecated seaborn styles so that 'seaborn-colorblind' is correctly replaced with 'seaborn-v0_8-colorblind'.\n\nThe line to modify is within the 'fix_style' function, specifically where the replacement of 'seaborn' with 'seaborn-v0_8' is done. The current replacement logic applies to all seaborn styles, but the instruction requires focusing on 'seaborn-colorblind' specifically."
          },
          "input_tokens": 1729,
          "output_tokens": 112,
          "retry_message": null,
          "completion_cost": 0.006867
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "use",
        "end_line": 141,
        "file_path": "lib/matplotlib/style/core.py",
        "max_tokens": 1000,
        "start_line": 113,
        "temperature": 1.6,
        "instructions": "Within the 'use' function, modify the logic that handles deprecated seaborn styles so that 'seaborn-colorblind' is correctly replaced with 'seaborn-v0_8-colorblind'.\n\nThe line to modify is within the 'fix_style' function, specifically where the replacement of 'seaborn' with 'seaborn-v0_8' is done. The current replacement logic applies to all seaborn styles, but the instruction requires focusing on 'seaborn-colorblind' specifically.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "```xml\n<replace>\n    def fix_style(s):\n        if isinstance(s, str):\n            s = style_alias.get(s, s)\n            if s in [\n                \"seaborn\",\n                \"seaborn-bright\",\n                \"seaborn-colorblind\",\n                \"seaborn-dark\",\n                \"seaborn-darkgrid\",\n                \"seaborn-dark-palette\",\n                \"seaborn-deep\",\n                \"seaborn-muted\",\n                \"seaborn-notebook\",\n                \"seaborn-paper\",\n                \"seaborn-pastel\",\n                \"seaborn-poster\",\n                \"seaborn-talk\",\n                \"seaborn-ticks\",\n                \"seaborn-white\",\n                \"seaborn-whitegrid\",\n            ]:\n                _api.warn_deprecated(\n                    \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n                    \"are deprecated since %(since)s, as they no longer \"\n                    \"correspond to the styles shipped by seaborn. However, \"\n                    \"they will remain available as 'seaborn-v0_8-<style>'. \"\n                    \"Alternatively, directly use the seaborn API instead.\")\n                if s == \"seaborn-colorblind\":\n                    s = \"seaborn-v0_8-colorblind\"\n                else:\n                    s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n        return s\n</replace>"
          },
          "output": {
            "diff": "--- lib/matplotlib/style/core.py\n+++ lib/matplotlib/style/core.py\n@@ -137,7 +137,10 @@\n                     \"correspond to the styles shipped by seaborn. However, \"\n                     \"they will remain available as 'seaborn-v0_8-<style>'. \"\n                     \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+                if s == \"seaborn-colorblind\":\n+                    s = \"seaborn-v0_8-colorblind\"\n+                else:\n+                    s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n         return s\n \n     for style in map(fix_style, styles):\n",
            "message": "Applied the change to lib/matplotlib/style/core.py.\n\n<scratch_pad>\n```xml\n</scratch_pad>",
            "verification_errors": []
          },
          "input_tokens": 2819,
          "output_tokens": 357,
          "retry_message": null,
          "completion_cost": 0.013812000000000001
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": "--- lib/matplotlib/style/core.py\n+++ lib/matplotlib/style/core.py\n@@ -137,7 +137,10 @@\n                     \"correspond to the styles shipped by seaborn. However, \"\n                     \"they will remain available as 'seaborn-v0_8-<style>'. \"\n                     \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+                if s == \"seaborn-colorblind\":\n+                    s = \"seaborn-v0_8-colorblind\"\n+                else:\n+                    s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n         return s\n \n     for style in map(fix_style, styles):\n",
        "model": "deepseek-coder",
        "message": "Applied the change to lib/matplotlib/style/core.py.\n\n<scratch_pad>\n```xml\n</scratch_pad>",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": [],
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "finish",
            "finish": "The changes to the 'use' function have been reviewed and appear to be correctly targeted at addressing the reported issue with 'seaborn-colorblind' in Matplotlib version 3.6.1, ensuring it maps correctly to 'seaborn-v0_8-colorblind'. No further modifications are needed.",
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "The change applied seems appropriate and correctly updates the logic to target 'seaborn-colorblind' specifically while maintaining the earlier style replacement logic for other seaborn styles. Given the isolated and context-relevant nature of the changes, I'm confident that this resolves the issue as reported.",
            "instructions": null
          },
          "output": {
            "message": "The changes to the 'use' function have been reviewed and appear to be correctly targeted at addressing the reported issue with 'seaborn-colorblind' in Matplotlib version 3.6.1, ensuring it maps correctly to 'seaborn-v0_8-colorblind'. No further modifications are needed."
          },
          "input_tokens": 3049,
          "output_tokens": 187,
          "retry_message": null,
          "completion_cost": 0.011952
        }
      ]
    },
    {
      "name": "Finished",
      "state": {
        "model": "gpt-4o",
        "output": {
          "model": "deepseek-coder",
          "temperature": 1.6
        },
        "message": "The changes to the 'use' function have been reviewed and appear to be correctly targeted at addressing the reported issue with 'seaborn-colorblind' in Matplotlib version 3.6.1, ensuring it maps correctly to 'seaborn-v0_8-colorblind'. No further modifications are needed.",
        "max_tokens": 1000,
        "temperature": 0.0,
        "max_iterations": null,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "[Bug]: Setting matplotlib.pyplot.style.library['seaborn-colorblind'] result in key error on matplotlib v3.6.1\n### Bug summary\n\nI have code that executes:\r\n```\r\nimport matplotlib.pyplot as plt\r\nthe_rc = plt.style.library[\"seaborn-colorblind\"]\r\n```\r\n\r\nUsing version 3.4.3 of matplotlib, this works fine. I recently installed my code on a machine with matplotlib version 3.6.1 and upon importing my code, this generated a key error for line `the_rc = plt.style.library[\"seaborn-colorblind\"]` saying \"seaborn-colorblind\" was a bad key.\n\n### Code for reproduction\n\n```python\nimport matplotlib.pyplot as plt\r\nthe_rc = plt.style.library[\"seaborn-colorblind\"]\n```\n\n\n### Actual outcome\n\nTraceback (most recent call last):\r\nKeyError: 'seaborn-colorblind'\n\n### Expected outcome\n\nseaborn-colorblind should be set as the matplotlib library style and I should be able to continue plotting with that style.\n\n### Additional information\n\n- Bug occurs with matplotlib version 3.6.1\r\n- Bug does not occur with matplotlib version 3.4.3\r\n- Tested on MacOSX and Ubuntu (same behavior on both)\n\n### Operating system\n\nOS/X\n\n### Matplotlib Version\n\n3.6.1\n\n### Matplotlib Backend\n\nMacOSX\n\n### Python version\n\n3.9.7\n\n### Jupyter version\n\n_No response_\n\n### Installation\n\npip\n"
}