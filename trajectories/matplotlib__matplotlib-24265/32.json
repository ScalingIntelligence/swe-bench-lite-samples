{
  "info": {
    "duration": 159.1013286113739,
    "submission": "diff --git a/lib/matplotlib/style/core.py b/lib/matplotlib/style/core.py\nindex fb0a5426e6..d22aa5b658 100644\n--- a/lib/matplotlib/style/core.py\n+++ b/lib/matplotlib/style/core.py\n@@ -131,13 +131,19 @@ def use(style):\n                 \"seaborn-white\",\n                 \"seaborn-whitegrid\",\n             ]:\n-                _api.warn_deprecated(\n-                    \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n-                    \"are deprecated since %(since)s, as they no longer \"\n-                    \"correspond to the styles shipped by seaborn. However, \"\n-                    \"they will remain available as 'seaborn-v0_8-<style>'. \"\n-                    \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+                if s == \"seaborn-colorblind\":\n+                    _api.warn_deprecated(\n+                        \"3.6\", message=\"The 'seaborn-colorblind' style is deprecated since %(since)s and is causing a key error. \"\n+                        \"Falling back to 'seaborn-v0_8-colorblind' style.\")\n+                    s = \"seaborn-v0_8-colorblind\"\n+                else:\n+                    _api.warn_deprecated(\n+                        \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n+                        \"are deprecated since %(since)s, as they no longer \"\n+                        \"correspond to the styles shipped by seaborn. However, \"\n+                        \"they will remain available as 'seaborn-v0_8-<style>'. \"\n+                        \"Alternatively, directly use the seaborn API instead.\")\n+                    s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n         return s\n \n     for style in map(fix_style, styles):\n",
    "total_cost": 0.11655599999999999,
    "instance_id": "matplotlib__matplotlib-24265",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue is related to setting a specific style in matplotlib, specifically the 'seaborn-colorblind' style. The problem arises in version 3.6.1 of matplotlib, whereas it works in version 3.4.3. The error occurs when accessing the style.library dictionary, indicating that 'seaborn-colorblind' is not a recognized key in the library. To address this, we should investigate the changes in the core module that handles styles between these versions, specifically focusing on how style libraries are managed and updated.",
            "search_requests": [
              {
                "query": "seaborn-colorblind",
                "class_names": [],
                "code_snippet": "plt.style.library[\"seaborn-colorblind\"]",
                "file_pattern": "**/matplotlib/style/core.py",
                "function_names": []
              },
              {
                "query": "seaborn-colorblind",
                "class_names": [],
                "code_snippet": "plt.style.library[\"seaborn-colorblind\"]",
                "file_pattern": "**/matplotlib/style/__init__.py",
                "function_names": []
              }
            ]
          },
          "output": null,
          "input_tokens": 4107,
          "output_tokens": 266,
          "retry_message": "\n\nUnfortunately, I didn\u2019t find any relevant results.",
          "completion_cost": 0.016311
        },
        {
          "action": {
            "complete": false,
            "scratch_pad": "Since the initial search did not yield any relevant results for the handling of the 'seaborn-colorblind' style in the `core.py` and `__init__.py` files within the matplotlib/style directory, it might be helpful to broaden the search to include other parts of the matplotlib package that might be related to style handling or look for differences in the style management between versions 3.4.3 and 3.6.1. Specifically, it would be beneficial to inspect any changes or additions to the `matplotlib/style` directory or any infrastructure related to style handling in the newer version.",
            "search_requests": [
              {
                "query": "handling style library",
                "class_names": [],
                "code_snippet": "",
                "file_pattern": "**/matplotlib/**/*.py",
                "function_names": [
                  "use",
                  "update_user_library",
                  "update_nested_dict"
                ]
              },
              {
                "query": "version difference style handling",
                "class_names": [],
                "code_snippet": "",
                "file_pattern": "**/matplotlib/**/*.py",
                "function_names": []
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 112,
                "span_id": "update_nested_dict",
                "file_path": "lib/matplotlib/style/core.py"
              },
              {
                "rank": 1,
                "tokens": 777,
                "span_id": "use",
                "file_path": "lib/matplotlib/style/core.py"
              },
              {
                "rank": 5,
                "tokens": 50,
                "span_id": "update_user_library",
                "file_path": "lib/matplotlib/style/core.py"
              },
              {
                "rank": 169,
                "tokens": 591,
                "span_id": "use",
                "file_path": "lib/matplotlib/__init__.py"
              },
              {
                "rank": 0,
                "tokens": 376,
                "span_id": "matplotlib_fname",
                "file_path": "lib/matplotlib/__init__.py"
              },
              {
                "rank": 0,
                "tokens": 74,
                "span_id": "impl:11",
                "file_path": "lib/matplotlib/__init__.py"
              },
              {
                "rank": 3,
                "tokens": 147,
                "span_id": "_check_versions",
                "file_path": "lib/matplotlib/__init__.py"
              },
              {
                "rank": 3,
                "tokens": 88,
                "span_id": "__getattr__",
                "file_path": "lib/matplotlib/__init__.py"
              },
              {
                "rank": 4,
                "tokens": 69,
                "span_id": "impl:39",
                "file_path": "lib/matplotlib/__init__.py"
              },
              {
                "rank": 4,
                "tokens": 915,
                "span_id": "_preprocess_data",
                "file_path": "lib/matplotlib/__init__.py"
              },
              {
                "rank": 6,
                "tokens": 306,
                "span_id": "imports",
                "file_path": "lib/matplotlib/__init__.py"
              },
              {
                "rank": 7,
                "tokens": 176,
                "span_id": "_get_version",
                "file_path": "lib/matplotlib/__init__.py"
              },
              {
                "rank": 8,
                "tokens": 234,
                "span_id": "_parse_to_version_info",
                "file_path": "lib/matplotlib/__init__.py"
              },
              {
                "rank": 1,
                "tokens": 777,
                "span_id": "use",
                "file_path": "lib/matplotlib/style/core.py"
              },
              {
                "rank": 5,
                "tokens": 34,
                "span_id": "imports",
                "file_path": "lib/matplotlib/style/__init__.py"
              },
              {
                "rank": 11,
                "tokens": 22,
                "span_id": "_Style.get_styles",
                "file_path": "lib/matplotlib/patches.py"
              },
              {
                "rank": 11,
                "tokens": 169,
                "span_id": "_Style.__new__",
                "file_path": "lib/matplotlib/patches.py"
              }
            ],
            "search_requests": [
              {
                "query": "handling style library",
                "class_names": [],
                "code_snippet": "",
                "file_pattern": "**/matplotlib/**/*.py",
                "function_names": [
                  "use",
                  "update_user_library",
                  "update_nested_dict"
                ]
              },
              {
                "query": "version difference style handling",
                "class_names": [],
                "code_snippet": "",
                "file_pattern": "**/matplotlib/**/*.py",
                "function_names": []
              }
            ]
          },
          "input_tokens": 4423,
          "output_tokens": 286,
          "retry_message": null,
          "completion_cost": 0.017558999999999998
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 112,
            "span_id": "update_nested_dict",
            "file_path": "lib/matplotlib/style/core.py"
          },
          {
            "rank": 0,
            "tokens": 376,
            "span_id": "matplotlib_fname",
            "file_path": "lib/matplotlib/__init__.py"
          },
          {
            "rank": 0,
            "tokens": 74,
            "span_id": "impl:11",
            "file_path": "lib/matplotlib/__init__.py"
          },
          {
            "rank": 1,
            "tokens": 777,
            "span_id": "use",
            "file_path": "lib/matplotlib/style/core.py"
          },
          {
            "rank": 1,
            "tokens": 777,
            "span_id": "use",
            "file_path": "lib/matplotlib/style/core.py"
          },
          {
            "rank": 3,
            "tokens": 147,
            "span_id": "_check_versions",
            "file_path": "lib/matplotlib/__init__.py"
          },
          {
            "rank": 3,
            "tokens": 88,
            "span_id": "__getattr__",
            "file_path": "lib/matplotlib/__init__.py"
          },
          {
            "rank": 4,
            "tokens": 69,
            "span_id": "impl:39",
            "file_path": "lib/matplotlib/__init__.py"
          },
          {
            "rank": 4,
            "tokens": 915,
            "span_id": "_preprocess_data",
            "file_path": "lib/matplotlib/__init__.py"
          },
          {
            "rank": 5,
            "tokens": 50,
            "span_id": "update_user_library",
            "file_path": "lib/matplotlib/style/core.py"
          },
          {
            "rank": 5,
            "tokens": 34,
            "span_id": "imports",
            "file_path": "lib/matplotlib/style/__init__.py"
          },
          {
            "rank": 6,
            "tokens": 306,
            "span_id": "imports",
            "file_path": "lib/matplotlib/__init__.py"
          },
          {
            "rank": 7,
            "tokens": 176,
            "span_id": "_get_version",
            "file_path": "lib/matplotlib/__init__.py"
          },
          {
            "rank": 8,
            "tokens": 234,
            "span_id": "_parse_to_version_info",
            "file_path": "lib/matplotlib/__init__.py"
          },
          {
            "rank": 11,
            "tokens": 22,
            "span_id": "_Style.get_styles",
            "file_path": "lib/matplotlib/patches.py"
          },
          {
            "rank": 11,
            "tokens": 169,
            "span_id": "_Style.__new__",
            "file_path": "lib/matplotlib/patches.py"
          },
          {
            "rank": 169,
            "tokens": 591,
            "span_id": "use",
            "file_path": "lib/matplotlib/__init__.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue involves a key error when trying to access the 'seaborn-colorblind' style in `matplotlib.pyplot.style.library` on version 3.6.1. The search results show relevant code spans within `lib/matplotlib/style/core.py`, specifically the `use` function where the styles are checked and potentially modified. This function lists the valid styles including 'seaborn-colorblind', which indicates it should be available but may not be due to a change in version handling. Additionally, the `update_user_library` function and its associated `update_nested_dict` function suggest mechanisms for updating the style library, which might provide insight into why the style is missing in the newer version.",
            "identified_spans": [
              {
                "span_ids": [
                  "use",
                  "update_user_library",
                  "update_nested_dict"
                ],
                "file_path": "lib/matplotlib/style/core.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 3848,
          "output_tokens": 242,
          "retry_message": null,
          "completion_cost": 0.015174
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": true,
            "relevant": true,
            "scratch_pad": "The provided file context in 'core.py' contains the relevant code for handling matplotlib styles, including the 'seaborn-colorblind' style. The code includes a deprecation warning for seaborn styles, indicating a change that could explain the key error experienced in matplotlib v3.6.1. The function `use` processes the style settings and handles the 'seaborn-colorblind' style specifically, suggesting that this is the relevant part of the codebase dealing with the reported issue. Additionally, the provided context includes functions dealing with style libraries and file handling, which are likely related to where the style configurations are read or updated, providing a comprehensive context to understand the code's behavior regarding styles. Therefore, based on the code provided, it can be concluded that the pertinent code context has been identified to address the reported issue.",
            "search_suggestions": null
          },
          "output": {},
          "input_tokens": 2360,
          "output_tokens": 211,
          "retry_message": null,
          "completion_cost": 0.010245
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "span_id='use'",
            "file_path": "lib/matplotlib/style/core.py",
            "scratch_pad": "The issue stems from the removal of the 'seaborn-colorblind' style in matplotlib version 3.6.1. This style was previously included and is now deprecated. To fix the reported issue, we need to update the code to handle this deprecation gracefully by checking for the 'seaborn-colorblind' style and providing a helpful message or alternative style when it is not found.",
            "instructions": "Add a check for the 'seaborn-colorblind' style in the use function and handle the case where the style is deprecated. Provide a warning message and fallback to an alternative style."
          },
          "output": null,
          "input_tokens": 2968,
          "output_tokens": 197,
          "retry_message": "Span not found: span_id='use'. Available spans: update_user_library, use, update_nested_dict, read_style_directory, impl:13, reload_library, _apply_style, context, load_base_library, impl:5, impl:19, _remove_blacklisted_style_params",
          "completion_cost": 0.011859000000000001
        },
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "use",
            "file_path": "lib/matplotlib/style/core.py",
            "scratch_pad": "Apologies for the confusion. It seems I provided an incorrect span ID. Let's correct the span ID to the actual one containing the 'use' function.",
            "instructions": "Add a check for the 'seaborn-colorblind' style in the 'use' function and handle the case where the style is deprecated. Provide a warning message and fallback to an alternative style."
          },
          "output": {
            "span_id": "use",
            "file_path": "lib/matplotlib/style/core.py",
            "instructions": "Add a check for the 'seaborn-colorblind' style in the 'use' function and handle the case where the style is deprecated. Provide a warning message and fallback to an alternative style."
          },
          "input_tokens": 3245,
          "output_tokens": 146,
          "retry_message": null,
          "completion_cost": 0.011925000000000002
        }
      ]
    },
    {
      "name": "ClarifyCodeChange",
      "state": {
        "model": "deepseek-coder",
        "span_id": "use",
        "end_line": null,
        "file_path": "lib/matplotlib/style/core.py",
        "max_tokens": 1000,
        "start_line": null,
        "temperature": 1.6,
        "instructions": "Add a check for the 'seaborn-colorblind' style in the 'use' function and handle the case where the style is deprecated. Provide a warning message and fallback to an alternative style.\n\nThe specific modification is required in the 'use' function where the 'seaborn-colorblind' style is checked and handled. This involves adding a conditional check for 'seaborn-colorblind' and providing a warning message with a fallback to an alternative style within the 'fix_style' function.",
        "max_iterations": null,
        "include_message_history": false,
        "max_tokens_in_edit_prompt": 500
      },
      "actions": [
        {
          "action": {
            "reject": null,
            "end_line": 140,
            "start_line": 134,
            "scratch_pad": "The specific modification is required in the 'use' function where the 'seaborn-colorblind' style is checked and handled. This involves adding a conditional check for 'seaborn-colorblind' and providing a warning message with a fallback to an alternative style within the 'fix_style' function."
          },
          "output": {
            "span_id": "use",
            "end_line": 140,
            "file_path": "lib/matplotlib/style/core.py",
            "start_line": 134,
            "instructions": "Add a check for the 'seaborn-colorblind' style in the 'use' function and handle the case where the style is deprecated. Provide a warning message and fallback to an alternative style.\n\nThe specific modification is required in the 'use' function where the 'seaborn-colorblind' style is checked and handled. This involves adding a conditional check for 'seaborn-colorblind' and providing a warning message with a fallback to an alternative style within the 'fix_style' function."
          },
          "input_tokens": 1726,
          "output_tokens": 102,
          "retry_message": null,
          "completion_cost": 0.006708
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "use",
        "end_line": 140,
        "file_path": "lib/matplotlib/style/core.py",
        "max_tokens": 1000,
        "start_line": 134,
        "temperature": 1.6,
        "instructions": "Add a check for the 'seaborn-colorblind' style in the 'use' function and handle the case where the style is deprecated. Provide a warning message and fallback to an alternative style.\n\nThe specific modification is required in the 'use' function where the 'seaborn-colorblind' style is checked and handled. This involves adding a conditional check for 'seaborn-colorblind' and providing a warning message with a fallback to an alternative style within the 'fix_style' function.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "```xml\n<replace>\n                if s == \"seaborn-colorblind\":\n                    _api.warn_deprecated(\n                        \"3.6\", message=\"The 'seaborn-colorblind' style is deprecated since %(since)s and is causing a key error. \"\n                        \"Falling back to 'seaborn-v0_8-colorblind' style.\")\n                    s = \"seaborn-v0_8-colorblind\"\n                else:\n                    _api.warn_deprecated(\n                        \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n                        \"are deprecated since %(since)s, as they no longer \"\n                        \"correspond to the styles shipped by seaborn. However, \"\n                        \"they will remain available as 'seaborn-v0_8-<style>'. \"\n                        \"Alternatively, directly use the seaborn API instead.\")\n                    s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n</replace>"
          },
          "output": {
            "diff": "--- lib/matplotlib/style/core.py\n+++ lib/matplotlib/style/core.py\n@@ -131,13 +131,19 @@\n                 \"seaborn-white\",\n                 \"seaborn-whitegrid\",\n             ]:\n-                _api.warn_deprecated(\n-                    \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n-                    \"are deprecated since %(since)s, as they no longer \"\n-                    \"correspond to the styles shipped by seaborn. However, \"\n-                    \"they will remain available as 'seaborn-v0_8-<style>'. \"\n-                    \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+                if s == \"seaborn-colorblind\":\n+                    _api.warn_deprecated(\n+                        \"3.6\", message=\"The 'seaborn-colorblind' style is deprecated since %(since)s and is causing a key error. \"\n+                        \"Falling back to 'seaborn-v0_8-colorblind' style.\")\n+                    s = \"seaborn-v0_8-colorblind\"\n+                else:\n+                    _api.warn_deprecated(\n+                        \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n+                        \"are deprecated since %(since)s, as they no longer \"\n+                        \"correspond to the styles shipped by seaborn. However, \"\n+                        \"they will remain available as 'seaborn-v0_8-<style>'. \"\n+                        \"Alternatively, directly use the seaborn API instead.\")\n+                    s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n         return s\n \n     for style in map(fix_style, styles):\n",
            "message": "Applied the change to lib/matplotlib/style/core.py.\n\n<scratch_pad>\n```xml\n</scratch_pad>",
            "verification_errors": []
          },
          "input_tokens": 3319,
          "output_tokens": 228,
          "retry_message": null,
          "completion_cost": 0.013377
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": "--- lib/matplotlib/style/core.py\n+++ lib/matplotlib/style/core.py\n@@ -131,13 +131,19 @@\n                 \"seaborn-white\",\n                 \"seaborn-whitegrid\",\n             ]:\n-                _api.warn_deprecated(\n-                    \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n-                    \"are deprecated since %(since)s, as they no longer \"\n-                    \"correspond to the styles shipped by seaborn. However, \"\n-                    \"they will remain available as 'seaborn-v0_8-<style>'. \"\n-                    \"Alternatively, directly use the seaborn API instead.\")\n-                s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n+                if s == \"seaborn-colorblind\":\n+                    _api.warn_deprecated(\n+                        \"3.6\", message=\"The 'seaborn-colorblind' style is deprecated since %(since)s and is causing a key error. \"\n+                        \"Falling back to 'seaborn-v0_8-colorblind' style.\")\n+                    s = \"seaborn-v0_8-colorblind\"\n+                else:\n+                    _api.warn_deprecated(\n+                        \"3.6\", message=\"The seaborn styles shipped by Matplotlib \"\n+                        \"are deprecated since %(since)s, as they no longer \"\n+                        \"correspond to the styles shipped by seaborn. However, \"\n+                        \"they will remain available as 'seaborn-v0_8-<style>'. \"\n+                        \"Alternatively, directly use the seaborn API instead.\")\n+                    s = s.replace(\"seaborn\", \"seaborn-v0_8\")\n         return s\n \n     for style in map(fix_style, styles):\n",
        "model": "deepseek-coder",
        "message": "Applied the change to lib/matplotlib/style/core.py.\n\n<scratch_pad>\n```xml\n</scratch_pad>",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": [],
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "finish",
            "finish": "The issue has been properly addressed with the applied change.",
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "The change applied correctly addresses the issue by adding a specific check for the 'seaborn-colorblind' style and providing a fallback to 'seaborn-v0_8-colorblind'. This should prevent the key error and allow the code to continue plotting with an appropriate style even if 'seaborn-colorblind' is not available in matplotlib v3.6.1.",
            "instructions": null
          },
          "output": {
            "message": "The issue has been properly addressed with the applied change."
          },
          "input_tokens": 3701,
          "output_tokens": 153,
          "retry_message": null,
          "completion_cost": 0.013398
        }
      ]
    },
    {
      "name": "Finished",
      "state": {
        "model": "gpt-4o",
        "output": {
          "model": "deepseek-coder",
          "temperature": 1.6
        },
        "message": "The issue has been properly addressed with the applied change.",
        "max_tokens": 1000,
        "temperature": 0.0,
        "max_iterations": null,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "[Bug]: Setting matplotlib.pyplot.style.library['seaborn-colorblind'] result in key error on matplotlib v3.6.1\n### Bug summary\n\nI have code that executes:\r\n```\r\nimport matplotlib.pyplot as plt\r\nthe_rc = plt.style.library[\"seaborn-colorblind\"]\r\n```\r\n\r\nUsing version 3.4.3 of matplotlib, this works fine. I recently installed my code on a machine with matplotlib version 3.6.1 and upon importing my code, this generated a key error for line `the_rc = plt.style.library[\"seaborn-colorblind\"]` saying \"seaborn-colorblind\" was a bad key.\n\n### Code for reproduction\n\n```python\nimport matplotlib.pyplot as plt\r\nthe_rc = plt.style.library[\"seaborn-colorblind\"]\n```\n\n\n### Actual outcome\n\nTraceback (most recent call last):\r\nKeyError: 'seaborn-colorblind'\n\n### Expected outcome\n\nseaborn-colorblind should be set as the matplotlib library style and I should be able to continue plotting with that style.\n\n### Additional information\n\n- Bug occurs with matplotlib version 3.6.1\r\n- Bug does not occur with matplotlib version 3.4.3\r\n- Tested on MacOSX and Ubuntu (same behavior on both)\n\n### Operating system\n\nOS/X\n\n### Matplotlib Version\n\n3.6.1\n\n### Matplotlib Backend\n\nMacOSX\n\n### Python version\n\n3.9.7\n\n### Jupyter version\n\n_No response_\n\n### Installation\n\npip\n"
}