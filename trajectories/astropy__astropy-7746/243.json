{
  "info": {
    "duration": 259.5608034133911,
    "submission": "diff --git a/astropy/wcs/wcs.py b/astropy/wcs/wcs.py\nindex d3a06f2b3..5c0a7f08a 100644\n--- a/astropy/wcs/wcs.py\n+++ b/astropy/wcs/wcs.py\n@@ -1253,6 +1253,8 @@ reduce these to 2 dimensions using the naxis kwarg.\n                     \"(coords[N][{0}], origin)\".format(self.naxis))\n             if self.naxis == 1 and len(xy.shape) == 1:\n                 return _return_list_of_arrays([xy], origin)\n+            if xy.size == 0:\n+                return np.empty((0, self.naxis))\n             return _return_single_array(xy, origin)\n \n         elif len(args) == self.naxis + 1:\n@@ -1265,7 +1267,8 @@ reduce these to 2 dimensions using the naxis kwarg.\n                 raise TypeError(\n                     \"When providing more than two arguments, they must be \" +\n                     \"a 1-D array for each axis, followed by an origin.\")\n-\n+            if all(arr.size == 0 for arr in axes):\n+                return [np.empty(0) for _ in range(self.naxis)]\n             return _return_list_of_arrays(axes, origin)\n \n         raise TypeError(\n",
    "total_cost": 0.194826,
    "instance_id": "astropy__astropy-7746",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue involves the WCS transformation methods when empty lists or arrays are passed. The error suggests that the method wcs_pix2world is not handling empty inputs correctly, leading to an InconsistentAxisTypesError. The relevant code should be located in the astropy.wcs.wcs module, particularly around the methods wcs_pix2world and _array_converter. These methods are expected to handle various corner cases, including empty inputs. Additionally, the error traceback from the issue provides a precise code snippet to look for: `lambda xy, o: self.wcs.p2s(xy, o)['world']`. This lambda function is used within the _array_converter method to perform the pixel to world transformation.",
            "search_requests": [
              {
                "query": null,
                "class_names": [],
                "code_snippet": "lambda xy, o: self.wcs.p2s(xy, o)['world']",
                "file_pattern": "astropy/wcs/wcs.py",
                "function_names": [
                  "wcs_pix2world",
                  "_array_converter"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 64,
                "span_id": "WCS.wcs_pix2world",
                "file_path": "astropy/wcs/wcs.py"
              }
            ],
            "search_requests": [
              {
                "query": null,
                "class_names": [],
                "code_snippet": "lambda xy, o: self.wcs.p2s(xy, o)['world']",
                "file_pattern": "astropy/wcs/wcs.py",
                "function_names": [
                  "wcs_pix2world",
                  "_array_converter"
                ]
              }
            ]
          },
          "input_tokens": 3156,
          "output_tokens": 269,
          "retry_message": null,
          "completion_cost": 0.013503000000000001
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 64,
            "span_id": "WCS.wcs_pix2world",
            "file_path": "astropy/wcs/wcs.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue pertains to handling empty lists/arrays in the 'wcs_pix2world' method of the WCS class in the Astropy library. Specifically, the issue arises when passing empty lists/arrays, which should not result in an error but should return empty lists/arrays instead. The provided search results include two relevant code spans within the 'astropy/wcs/wcs.py' file. The first span ('WCS.__init__') is the constructor of the WCS class, which initializes the WCS object based on the provided header and other parameters. The second span ('WCS.wcs_pix2world') is the method in question, where the transformation from pixel to world coordinates is implemented. This method uses the '_array_converter' method to handle the transformation, which might be where the issue with empty arrays arises. Given the context of the issue, these spans are directly relevant as they deal with the initialization and the transformation method of the WCS class.",
            "identified_spans": [
              {
                "span_ids": [
                  "WCS.__init__",
                  "WCS.wcs_pix2world"
                ],
                "file_path": "astropy/wcs/wcs.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 2877,
          "output_tokens": 291,
          "retry_message": null,
          "completion_cost": 0.012996
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The file context contains the relevant methods that handle the WCS transformation. Specifically, the method wcs_pix2world is present, which calls the _array_converter method with a lambda function that performs the pixel to world transformation, matching the lambda function indicated in the error traceback from the issue. However, while the methods are present, the specific handling of empty lists/arrays within these methods is not explicitly detailed in the provided context. This suggests that the logic to handle empty inputs might be implicit or handled by lower-level functions called within these methods.",
            "search_suggestions": "Look further into the _array_converter method and the lambda function it uses, specifically where it processes the input for emptiness and how it communicates with lower-level functions like self.wcs.p2s. Additionally, check the implementation details of self.wcs.p2s to ensure it correctly handles cases where the input arrays are empty."
          },
          "output": {
            "message": "Look further into the _array_converter method and the lambda function it uses, specifically where it processes the input for emptiness and how it communicates with lower-level functions like self.wcs.p2s. Additionally, check the implementation details of self.wcs.p2s to ensure it correctly handles cases where the input arrays are empty."
          },
          "input_tokens": 3676,
          "output_tokens": 223,
          "retry_message": null,
          "completion_cost": 0.014373
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Look further into the _array_converter method and the lambda function it uses, specifically where it processes the input for emptiness and how it communicates with lower-level functions like self.wcs.p2s. Additionally, check the implementation details of self.wcs.p2s to ensure it correctly handles cases where the input arrays are empty.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The _array_converter method and the lambda function it uses for pixel to world transformation need closer inspection, especially regarding how they handle empty inputs. From the context provided, the _array_converter method uses a lambda function to call self.wcs.p2s, which is responsible for the actual transformation. The traceback indicates that an error occurs when handling empty input arrays, suggesting that the method might lack proper checks for empty inputs before attempting the transformation. Additionally, the implementation of self.wcs.p2s should be examined to ensure it correctly processes empty arrays. To address these concerns, we need to focus on the specific parts of the code where input emptiness is checked and how empty inputs are managed during the transformation process.",
            "search_requests": [
              {
                "query": null,
                "class_names": [],
                "code_snippet": "lambda xy, o: self.wcs.p2s(xy, o)['world']",
                "file_pattern": "astropy/wcs/wcs.py",
                "function_names": [
                  "_array_converter",
                  "self.wcs.p2s"
                ]
              }
            ]
          },
          "output": null,
          "input_tokens": 5527,
          "output_tokens": 312,
          "retry_message": "\n\nUnfortunately, I didn\u2019t find any relevant results.",
          "completion_cost": 0.021261000000000002
        },
        {
          "action": {
            "complete": false,
            "scratch_pad": "Since the initial search for the specific implementation of the _array_converter method and its handling of the lambda function did not yield results, it suggests that the issue might be deeper in the WCS transformation logic, possibly in the lower-level functions such as self.wcs.p2s. To continue troubleshooting, we should broaden our search to also include any initialization or configuration methods in the WCS class that might indirectly affect how empty arrays are handled. Additionally, looking into any utility or helper functions that are used within these critical methods could provide further insights into the handling of edge cases, specifically focusing on the management and checking for empty arrays.",
            "search_requests": [
              {
                "query": "handling of empty arrays in WCS transformation",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": "astropy/wcs/wcs.py",
                "function_names": [
                  "__init__",
                  "wcs_pix2world",
                  "_array_converter",
                  "self.wcs.p2s"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 561,
                "span_id": "WCS._array_converter",
                "file_path": "astropy/wcs/wcs.py"
              },
              {
                "rank": 4,
                "tokens": 64,
                "span_id": "WCS.wcs_pix2world",
                "file_path": "astropy/wcs/wcs.py"
              }
            ],
            "search_requests": [
              {
                "query": "handling of empty arrays in WCS transformation",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": "astropy/wcs/wcs.py",
                "function_names": [
                  "__init__",
                  "wcs_pix2world",
                  "_array_converter",
                  "self.wcs.p2s"
                ]
              }
            ]
          },
          "input_tokens": 5827,
          "output_tokens": 266,
          "retry_message": null,
          "completion_cost": 0.021471
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 561,
            "span_id": "WCS._array_converter",
            "file_path": "astropy/wcs/wcs.py"
          },
          {
            "rank": 4,
            "tokens": 64,
            "span_id": "WCS.wcs_pix2world",
            "file_path": "astropy/wcs/wcs.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue involves handling the transformation `wcs_pix2world` when passing empty lists or arrays, and the goal is to ensure that the function does not fail but instead returns empty lists or arrays. Existing code spans related to `wcs_pix2world` indicate that the function uses `_array_converter` to perform transformations, which is designed to handle array inputs and origin arguments. The new search results reveal more comprehensive implementations of `WCS.__init__`, `WCS._array_converter`, and `WCS.wcs_pix2world`. The `_array_converter` function in particular handles the array input, origin processing, and function application for transformations. It is responsible for ensuring that the inputs are either a list of arrays or a single array with an origin, and then processes these inputs accordingly using the provided transformation function. The code spans suggest that the necessary code is already in place to support the functionality. The only potential enhancement might be adding explicit checks for empty arrays in the `_array_converter` function to ensure it returns empty arrays instead of attempting computations on empty inputs.",
            "identified_spans": [
              {
                "span_ids": [
                  "WCS",
                  "WCS.__init__",
                  "WCS._array_converter",
                  "WCS.wcs_pix2world"
                ],
                "file_path": "astropy/wcs/wcs.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 5709,
          "output_tokens": 329,
          "retry_message": null,
          "completion_cost": 0.022062
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": true,
            "relevant": true,
            "scratch_pad": "The provided file context includes the relevant method `_array_converter` and the `wcs_pix2world` method, which seem to be directly related to the issue of handling empty lists/arrays during WCS transformations. The `_array_converter` method specifically handles different ways of passing coordinates and the `wcs_pix2world` method uses this converter. These methods appear to be where the handling of empty arrays would be implemented or modified to address the issue.",
            "search_suggestions": null
          },
          "output": {},
          "input_tokens": 5221,
          "output_tokens": 136,
          "retry_message": null,
          "completion_cost": 0.017703
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "WCS._array_converter",
            "file_path": "astropy/wcs/wcs.py",
            "scratch_pad": "The issue is related to the handling of empty lists/arrays when performing WCS transformations. The provided context does not directly address this issue. We need to modify the `_array_converter` method to handle empty arrays gracefully. Specifically, we should ensure that if the input arrays are empty, the output should also be empty without raising any errors.",
            "instructions": "Modify the `_array_converter` method to handle empty arrays by returning empty output arrays when the input arrays are empty."
          },
          "output": {
            "span_id": "WCS._array_converter",
            "file_path": "astropy/wcs/wcs.py",
            "instructions": "Modify the `_array_converter` method to handle empty arrays by returning empty output arrays when the input arrays are empty."
          },
          "input_tokens": 5448,
          "output_tokens": 159,
          "retry_message": null,
          "completion_cost": 0.018729000000000003
        }
      ]
    },
    {
      "name": "ClarifyCodeChange",
      "state": {
        "model": "deepseek-coder",
        "span_id": "WCS._array_converter",
        "end_line": null,
        "file_path": "astropy/wcs/wcs.py",
        "max_tokens": 1000,
        "start_line": null,
        "temperature": 1.6,
        "instructions": "Modify the `_array_converter` method to handle empty arrays by returning empty output arrays when the input arrays are empty.\n\nThe modification needs to occur within the main function `_array_converter`. This function handles different inputs based on the number of arguments. Currently, it does not explicitly handle the case where the input arrays are empty. We need to add a check for empty arrays and return empty output arrays accordingly within the function. The lines that need to be modified are those where the input arrays are first dealt with and decisions on how to process them are made.",
        "max_iterations": null,
        "include_message_history": false,
        "max_tokens_in_edit_prompt": 500
      },
      "actions": [
        {
          "action": {
            "reject": null,
            "end_line": 1269,
            "start_line": 1245,
            "scratch_pad": "The modification needs to occur within the main function `_array_converter`. This function handles different inputs based on the number of arguments. Currently, it does not explicitly handle the case where the input arrays are empty. We need to add a check for empty arrays and return empty output arrays accordingly within the function. The lines that need to be modified are those where the input arrays are first dealt with and decisions on how to process them are made."
          },
          "output": {
            "span_id": "WCS._array_converter",
            "end_line": 1269,
            "file_path": "astropy/wcs/wcs.py",
            "start_line": 1245,
            "instructions": "Modify the `_array_converter` method to handle empty arrays by returning empty output arrays when the input arrays are empty.\n\nThe modification needs to occur within the main function `_array_converter`. This function handles different inputs based on the number of arguments. Currently, it does not explicitly handle the case where the input arrays are empty. We need to add a check for empty arrays and return empty output arrays accordingly within the function. The lines that need to be modified are those where the input arrays are first dealt with and decisions on how to process them are made."
          },
          "input_tokens": 1551,
          "output_tokens": 137,
          "retry_message": null,
          "completion_cost": 0.006708
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "WCS._array_converter",
        "end_line": 1269,
        "file_path": "astropy/wcs/wcs.py",
        "max_tokens": 1000,
        "start_line": 1245,
        "temperature": 1.6,
        "instructions": "Modify the `_array_converter` method to handle empty arrays by returning empty output arrays when the input arrays are empty.\n\nThe modification needs to occur within the main function `_array_converter`. This function handles different inputs based on the number of arguments. Currently, it does not explicitly handle the case where the input arrays are empty. We need to add a check for empty arrays and return empty output arrays accordingly within the function. The lines that need to be modified are those where the input arrays are first dealt with and decisions on how to process them are made.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "<replace>\n        if len(args) == 2:\n            try:\n                xy, origin = args\n                xy = np.asarray(xy)\n                origin = int(origin)\n            except Exception:\n                raise TypeError(\n                    \"When providing two arguments, they must be \"\n                    \"(coords[N][{0}], origin)\".format(self.naxis))\n            if self.naxis == 1 and len(xy.shape) == 1:\n                return _return_list_of_arrays([xy], origin)\n            if xy.size == 0:\n                return np.empty((0, self.naxis))\n            return _return_single_array(xy, origin)\n\n        elif len(args) == self.naxis + 1:\n            axes = args[:-1]\n            origin = args[-1]\n            try:\n                axes = [np.asarray(x) for x in axes]\n                origin = int(origin)\n            except Exception:\n                raise TypeError(\n                    \"When providing more than two arguments, they must be \" +\n                    \"a 1-D array for each axis, followed by an origin.\")\n            if all(arr.size == 0 for arr in axes):\n                return [np.empty(0) for _ in range(self.naxis)]\n            return _return_list_of_arrays(axes, origin)\n</replace>"
          },
          "output": {
            "diff": "--- astropy/wcs/wcs.py\n+++ astropy/wcs/wcs.py\n@@ -1253,6 +1253,8 @@\n                     \"(coords[N][{0}], origin)\".format(self.naxis))\n             if self.naxis == 1 and len(xy.shape) == 1:\n                 return _return_list_of_arrays([xy], origin)\n+            if xy.size == 0:\n+                return np.empty((0, self.naxis))\n             return _return_single_array(xy, origin)\n \n         elif len(args) == self.naxis + 1:\n@@ -1265,7 +1267,8 @@\n                 raise TypeError(\n                     \"When providing more than two arguments, they must be \" +\n                     \"a 1-D array for each axis, followed by an origin.\")\n-\n+            if all(arr.size == 0 for arr in axes):\n+                return [np.empty(0) for _ in range(self.naxis)]\n             return _return_list_of_arrays(axes, origin)\n \n         raise TypeError(\n",
            "message": "Applied the change to astropy/wcs/wcs.py.",
            "verification_errors": []
          },
          "input_tokens": 6911,
          "output_tokens": 322,
          "retry_message": null,
          "completion_cost": 0.025563000000000002
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": "--- astropy/wcs/wcs.py\n+++ astropy/wcs/wcs.py\n@@ -1253,6 +1253,8 @@\n                     \"(coords[N][{0}], origin)\".format(self.naxis))\n             if self.naxis == 1 and len(xy.shape) == 1:\n                 return _return_list_of_arrays([xy], origin)\n+            if xy.size == 0:\n+                return np.empty((0, self.naxis))\n             return _return_single_array(xy, origin)\n \n         elif len(args) == self.naxis + 1:\n@@ -1265,7 +1267,8 @@\n                 raise TypeError(\n                     \"When providing more than two arguments, they must be \" +\n                     \"a 1-D array for each axis, followed by an origin.\")\n-\n+            if all(arr.size == 0 for arr in axes):\n+                return [np.empty(0) for _ in range(self.naxis)]\n             return _return_list_of_arrays(axes, origin)\n \n         raise TypeError(\n",
        "model": "deepseek-coder",
        "message": "Applied the change to astropy/wcs/wcs.py.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": [],
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "finish",
            "finish": "The changes have been successfully applied to handle empty lists/arrays when performing WCS transformations. Empty inputs now result in empty outputs, thereby resolving the reported issue.",
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "The changes applied to `_array_converter` method correctly handle the case of empty input arrays by returning empty output arrays. This addresses the issue reported where passing empty lists/arrays to WCS transformations was causing errors. The modifications ensure that the transformation methods can gracefully handle empty inputs without raising exceptions, aligning with the expected behavior of returning empty outputs for empty inputs.",
            "instructions": null
          },
          "output": {
            "message": "The changes have been successfully applied to handle empty lists/arrays when performing WCS transformations. Empty inputs now result in empty outputs, thereby resolving the reported issue."
          },
          "input_tokens": 5984,
          "output_tokens": 167,
          "retry_message": null,
          "completion_cost": 0.020457
        }
      ]
    },
    {
      "name": "Finished",
      "state": {
        "model": "gpt-4o",
        "output": {
          "model": "deepseek-coder",
          "temperature": 1.6
        },
        "message": "The changes have been successfully applied to handle empty lists/arrays when performing WCS transformations. Empty inputs now result in empty outputs, thereby resolving the reported issue.",
        "max_tokens": 1000,
        "temperature": 0.0,
        "max_iterations": null,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "Issue when passing empty lists/arrays to WCS transformations\nThe following should not fail but instead should return empty lists/arrays:\r\n\r\n```\r\nIn [1]: from astropy.wcs import WCS\r\n\r\nIn [2]: wcs = WCS('2MASS_h.fits')\r\n\r\nIn [3]: wcs.wcs_pix2world([], [], 0)\r\n---------------------------------------------------------------------------\r\nInconsistentAxisTypesError                Traceback (most recent call last)\r\n<ipython-input-3-e2cc0e97941a> in <module>()\r\n----> 1 wcs.wcs_pix2world([], [], 0)\r\n\r\n~/Dropbox/Code/Astropy/astropy/astropy/wcs/wcs.py in wcs_pix2world(self, *args, **kwargs)\r\n   1352         return self._array_converter(\r\n   1353             lambda xy, o: self.wcs.p2s(xy, o)['world'],\r\n-> 1354             'output', *args, **kwargs)\r\n   1355     wcs_pix2world.__doc__ = \"\"\"\r\n   1356         Transforms pixel coordinates to world coordinates by doing\r\n\r\n~/Dropbox/Code/Astropy/astropy/astropy/wcs/wcs.py in _array_converter(self, func, sky, ra_dec_order, *args)\r\n   1267                     \"a 1-D array for each axis, followed by an origin.\")\r\n   1268 \r\n-> 1269             return _return_list_of_arrays(axes, origin)\r\n   1270 \r\n   1271         raise TypeError(\r\n\r\n~/Dropbox/Code/Astropy/astropy/astropy/wcs/wcs.py in _return_list_of_arrays(axes, origin)\r\n   1223             if ra_dec_order and sky == 'input':\r\n   1224                 xy = self._denormalize_sky(xy)\r\n-> 1225             output = func(xy, origin)\r\n   1226             if ra_dec_order and sky == 'output':\r\n   1227                 output = self._normalize_sky(output)\r\n\r\n~/Dropbox/Code/Astropy/astropy/astropy/wcs/wcs.py in <lambda>(xy, o)\r\n   1351             raise ValueError(\"No basic WCS settings were created.\")\r\n   1352         return self._array_converter(\r\n-> 1353             lambda xy, o: self.wcs.p2s(xy, o)['world'],\r\n   1354             'output', *args, **kwargs)\r\n   1355     wcs_pix2world.__doc__ = \"\"\"\r\n\r\nInconsistentAxisTypesError: ERROR 4 in wcsp2s() at line 2646 of file cextern/wcslib/C/wcs.c:\r\nncoord and/or nelem inconsistent with the wcsprm.\r\n```\n"
}