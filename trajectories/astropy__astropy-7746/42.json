{
  "info": {
    "duration": 234.64126634597778,
    "submission": "diff --git a/astropy/wcs/wcs.py b/astropy/wcs/wcs.py\nindex d3a06f2b3..c33794ad1 100644\n--- a/astropy/wcs/wcs.py\n+++ b/astropy/wcs/wcs.py\n@@ -1212,6 +1212,9 @@ reduce these to 2 dimensions using the naxis kwarg.\n         \"\"\"\n \n         def _return_list_of_arrays(axes, origin):\n+            if all(np.size(ax) == 0 for ax in axes):\n+                return [np.array([])] * len(axes)\n+\n             try:\n                 axes = np.broadcast_arrays(*axes)\n             except ValueError:\n",
    "total_cost": 0.173298,
    "instance_id": "astropy__astropy-7746",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue involves transformations failing when passing empty lists/arrays to WCS methods. The error is specifically happening in the `wcs_pix2world` method in the WCS class. The search should focus on the WCS class to locate the `wcs_pix2world` method and identify how it handles empty lists/arrays.",
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "WCS"
                ],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": [
                  "wcs_pix2world"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 64,
                "span_id": "WCS.wcs_pix2world",
                "file_path": "astropy/wcs/wcs.py"
              }
            ],
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "WCS"
                ],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": [
                  "wcs_pix2world"
                ]
              }
            ]
          },
          "input_tokens": 3156,
          "output_tokens": 172,
          "retry_message": null,
          "completion_cost": 0.012048000000000001
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 64,
            "span_id": "WCS.wcs_pix2world",
            "file_path": "astropy/wcs/wcs.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The issue reported concerns the failure when passing empty lists/arrays to WCS transformations, specifically in the `wcs_pix2world` method. The provided search results contain the initial implementation of the `WCS` class and the method `wcs_pix2world`. The core logic of `wcs_pix2world` involves calling `_array_converter` with a lambda function that performs the actual transformation using `self.wcs.p2s(xy, o)['world']`. This method should handle empty lists/arrays gracefully, but it currently fails. Analyzing the provided code, it is clear that the `wcs_pix2world` method directly relies on the `_array_converter` function, which is also outlined in the search results. The `_array_converter` function processes the input arrays and calls `_return_list_of_arrays` to handle the transformation output. It appears that the logic in these functions does not account for the case of empty input arrays, leading to the error identified in the issue. The relevant sections of the code to address this issue are the `wcs_pix2world` method and the `_array_converter` method, both of which are contained within the `WCS` class in the provided search results.",
            "identified_spans": [
              {
                "span_ids": [
                  "WCS.wcs_pix2world"
                ],
                "file_path": "astropy/wcs/wcs.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 2877,
          "output_tokens": 344,
          "retry_message": null,
          "completion_cost": 0.013791000000000001
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The provided file context contains the relevant WCS class and the wcs_pix2world method. The method is defined to handle the transformation from pixel to world coordinates. It uses the _array_converter method to process the input and handle the conversion. However, it does not explicitly handle empty lists or arrays, which is the root cause of the reported issue. Further investigation into the _array_converter method and its handling of empty inputs is necessary to fully address the issue.",
            "search_suggestions": "Check the _array_converter method in the WCS class for how it processes input arrays and handles empty lists/arrays. Also, consider reviewing the internal methods like _return_list_of_arrays and the lambda function within wcs_pix2world to see how they handle empty inputs."
          },
          "output": {
            "message": "Check the _array_converter method in the WCS class for how it processes input arrays and handles empty lists/arrays. Also, consider reviewing the internal methods like _return_list_of_arrays and the lambda function within wcs_pix2world to see how they handle empty inputs."
          },
          "input_tokens": 3291,
          "output_tokens": 195,
          "retry_message": null,
          "completion_cost": 0.012798
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Check the _array_converter method in the WCS class for how it processes input arrays and handles empty lists/arrays. Also, consider reviewing the internal methods like _return_list_of_arrays and the lambda function within wcs_pix2world to see how they handle empty inputs.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue involves how the `_array_converter` method in the WCS class processes input arrays, especially when dealing with empty lists/arrays. Given the stack trace and the method definition, it's crucial to check how `_array_converter` handles empty inputs. Additionally, the internal methods `_return_list_of_arrays` and the lambda function within `wcs_pix2world` should be reviewed to understand how they handle empty inputs. Since `wcs_pix2world` calls `_array_converter` with a lambda function that directly interacts with the `wcs.p2s` method, understanding how these parts handle empty arrays is key to resolving the issue.",
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "WCS"
                ],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": [
                  "_array_converter",
                  "_return_list_of_arrays"
                ]
              },
              {
                "query": "how wcs.p2s handles empty arrays",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": []
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 561,
                "span_id": "WCS._array_converter",
                "file_path": "astropy/wcs/wcs.py"
              },
              {
                "rank": 0,
                "tokens": 561,
                "span_id": "WCS._array_converter",
                "file_path": "astropy/wcs/wcs.py"
              },
              {
                "rank": 7,
                "tokens": 278,
                "span_id": "WCS._normalize_sky",
                "file_path": "astropy/wcs/wcs.py"
              },
              {
                "rank": 1,
                "tokens": 512,
                "span_id": "impl:70",
                "file_path": "astropy/wcs/docstrings.py"
              },
              {
                "rank": 1,
                "tokens": 549,
                "span_id": "impl:78",
                "file_path": "astropy/wcs/docstrings.py"
              },
              {
                "rank": 3,
                "tokens": 506,
                "span_id": "impl:22",
                "file_path": "astropy/wcs/docstrings.py"
              },
              {
                "rank": 3,
                "tokens": 697,
                "span_id": "impl:30",
                "file_path": "astropy/wcs/docstrings.py"
              },
              {
                "rank": 4,
                "tokens": 992,
                "span_id": "impl:96",
                "file_path": "astropy/wcs/docstrings.py"
              },
              {
                "rank": 6,
                "tokens": 653,
                "span_id": "impl:244",
                "file_path": "astropy/wcs/docstrings.py"
              },
              {
                "rank": 8,
                "tokens": 544,
                "span_id": "impl:182",
                "file_path": "astropy/wcs/docstrings.py"
              },
              {
                "rank": 8,
                "tokens": 664,
                "span_id": "impl:188",
                "file_path": "astropy/wcs/docstrings.py"
              },
              {
                "rank": 9,
                "tokens": 509,
                "span_id": "impl:212",
                "file_path": "astropy/wcs/docstrings.py"
              },
              {
                "rank": 9,
                "tokens": 571,
                "span_id": "impl:204",
                "file_path": "astropy/wcs/docstrings.py"
              },
              {
                "rank": 2,
                "tokens": 172,
                "span_id": "NumericArray.parse",
                "file_path": "astropy/io/votable/converters.py"
              }
            ],
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "WCS"
                ],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": [
                  "_array_converter",
                  "_return_list_of_arrays"
                ]
              },
              {
                "query": "how wcs.p2s handles empty arrays",
                "class_names": [],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": []
              }
            ]
          },
          "input_tokens": 5102,
          "output_tokens": 311,
          "retry_message": null,
          "completion_cost": 0.019971
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 561,
            "span_id": "WCS._array_converter",
            "file_path": "astropy/wcs/wcs.py"
          },
          {
            "rank": 0,
            "tokens": 561,
            "span_id": "WCS._array_converter",
            "file_path": "astropy/wcs/wcs.py"
          },
          {
            "rank": 1,
            "tokens": 512,
            "span_id": "impl:70",
            "file_path": "astropy/wcs/docstrings.py"
          },
          {
            "rank": 1,
            "tokens": 549,
            "span_id": "impl:78",
            "file_path": "astropy/wcs/docstrings.py"
          },
          {
            "rank": 2,
            "tokens": 172,
            "span_id": "NumericArray.parse",
            "file_path": "astropy/io/votable/converters.py"
          },
          {
            "rank": 3,
            "tokens": 506,
            "span_id": "impl:22",
            "file_path": "astropy/wcs/docstrings.py"
          },
          {
            "rank": 3,
            "tokens": 697,
            "span_id": "impl:30",
            "file_path": "astropy/wcs/docstrings.py"
          },
          {
            "rank": 4,
            "tokens": 992,
            "span_id": "impl:96",
            "file_path": "astropy/wcs/docstrings.py"
          },
          {
            "rank": 6,
            "tokens": 653,
            "span_id": "impl:244",
            "file_path": "astropy/wcs/docstrings.py"
          },
          {
            "rank": 7,
            "tokens": 278,
            "span_id": "WCS._normalize_sky",
            "file_path": "astropy/wcs/wcs.py"
          },
          {
            "rank": 8,
            "tokens": 544,
            "span_id": "impl:182",
            "file_path": "astropy/wcs/docstrings.py"
          },
          {
            "rank": 8,
            "tokens": 664,
            "span_id": "impl:188",
            "file_path": "astropy/wcs/docstrings.py"
          },
          {
            "rank": 9,
            "tokens": 509,
            "span_id": "impl:212",
            "file_path": "astropy/wcs/docstrings.py"
          },
          {
            "rank": 9,
            "tokens": 571,
            "span_id": "impl:204",
            "file_path": "astropy/wcs/docstrings.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The issue reported involves the WCS transformation function wcs_pix2world failing when passed empty lists/arrays. To address this, we need to identify where the handling of empty inputs occurs within the WCS transformation chain. The relevant spans from the search results are: 1. WCS._array_converter: This function is responsible for converting the input arrays into the format expected by the underlying transformation function. It needs to handle the case where the input arrays are empty. 2. WCS.wcs_pix2world: This is the entry point function that delegates to _array_converter. Ensuring that _array_converter correctly handles empty arrays should resolve the reported issue.",
            "identified_spans": [
              {
                "span_ids": [
                  "WCS._array_converter",
                  "WCS.wcs_pix2world"
                ],
                "file_path": "astropy/wcs/wcs.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 5703,
          "output_tokens": 227,
          "retry_message": null,
          "completion_cost": 0.020513999999999998
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": true,
            "relevant": true,
            "scratch_pad": "The file context contains the relevant methods and classes for addressing the reported issue. Specifically, the `wcs_pix2world` method and the `_array_converter` method, which is used within `wcs_pix2world`, are present and directly related to the functionality of converting pixel coordinates to world coordinates. The issue involves handling empty lists/arrays, and the `_array_converter` method includes code for handling different argument lengths and shapes, potentially including empty arrays. Therefore, the relevant parts of the codebase for resolving the issue are fully present.",
            "search_suggestions": null
          },
          "output": {},
          "input_tokens": 5235,
          "output_tokens": 154,
          "retry_message": null,
          "completion_cost": 0.018015
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "WCS._array_converter",
            "file_path": "astropy/wcs/wcs.py",
            "scratch_pad": "The issue occurs in the `WCS._array_converter` method when handling empty lists/arrays. The current implementation does not handle such cases properly and fails with an `InconsistentAxisTypesError`. To fix this, we need to add a check for empty lists/arrays and handle them by returning empty lists/arrays immediately.",
            "instructions": "Add a check for empty lists/arrays at the beginning of the `_array_converter` method. If empty lists/arrays are detected, return empty lists/arrays immediately to avoid further processing and potential errors."
          },
          "output": {
            "span_id": "WCS._array_converter",
            "file_path": "astropy/wcs/wcs.py",
            "instructions": "Add a check for empty lists/arrays at the beginning of the `_array_converter` method. If empty lists/arrays are detected, return empty lists/arrays immediately to avoid further processing and potential errors."
          },
          "input_tokens": 5448,
          "output_tokens": 187,
          "retry_message": null,
          "completion_cost": 0.019149
        }
      ]
    },
    {
      "name": "ClarifyCodeChange",
      "state": {
        "model": "deepseek-coder",
        "span_id": "WCS._array_converter",
        "end_line": null,
        "file_path": "astropy/wcs/wcs.py",
        "max_tokens": 1000,
        "start_line": null,
        "temperature": 1.6,
        "instructions": "Add a check for empty lists/arrays at the beginning of the `_array_converter` method. If empty lists/arrays are detected, return empty lists/arrays immediately to avoid further processing and potential errors.\n\nThe check for empty lists/arrays should be integrated at the start of the function's logical body, immediately after the function's signature and docstring. This ensures that the check is performed before any further processing, allowing the function to return immediately if an empty list or array is detected.",
        "max_iterations": null,
        "include_message_history": false,
        "max_tokens_in_edit_prompt": 500
      },
      "actions": [
        {
          "action": {
            "reject": null,
            "end_line": 1208,
            "start_line": 1208,
            "scratch_pad": "The check for empty lists/arrays should be added at the beginning of the _array_converter method, specifically before any other processing begins. This will allow the method to return immediately if empty lists/arrays are detected."
          },
          "output": null,
          "input_tokens": 1569,
          "output_tokens": 85,
          "retry_message": "The line numbers 1208 - 1208 only covers to the signature of the Function.. You need to specify the exact part of the code that needs to be updated to fulfill the change.",
          "completion_cost": 0.005982
        },
        {
          "action": {
            "reject": null,
            "end_line": 1214,
            "start_line": 1214,
            "scratch_pad": "The check for empty lists/arrays should be integrated at the start of the function's logical body, immediately after the function's signature and docstring. This ensures that the check is performed before any further processing, allowing the function to return immediately if an empty list or array is detected."
          },
          "output": {
            "span_id": "WCS._array_converter",
            "end_line": 1231,
            "file_path": "astropy/wcs/wcs.py",
            "start_line": 1214,
            "instructions": "Add a check for empty lists/arrays at the beginning of the `_array_converter` method. If empty lists/arrays are detected, return empty lists/arrays immediately to avoid further processing and potential errors.\n\nThe check for empty lists/arrays should be integrated at the start of the function's logical body, immediately after the function's signature and docstring. This ensures that the check is performed before any further processing, allowing the function to return immediately if an empty list or array is detected."
          },
          "input_tokens": 1711,
          "output_tokens": 107,
          "retry_message": null,
          "completion_cost": 0.006738000000000001
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "WCS._array_converter",
        "end_line": 1231,
        "file_path": "astropy/wcs/wcs.py",
        "max_tokens": 1000,
        "start_line": 1214,
        "temperature": 1.6,
        "instructions": "Add a check for empty lists/arrays at the beginning of the `_array_converter` method. If empty lists/arrays are detected, return empty lists/arrays immediately to avoid further processing and potential errors.\n\nThe check for empty lists/arrays should be integrated at the start of the function's logical body, immediately after the function's signature and docstring. This ensures that the check is performed before any further processing, allowing the function to return immediately if an empty list or array is detected.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "```plaintext\n<replace>\n        def _return_list_of_arrays(axes, origin):\n            if all(np.size(ax) == 0 for ax in axes):\n                return [np.array([])] * len(axes)\n\n            try:\n                axes = np.broadcast_arrays(*axes)\n            except ValueError:\n                raise ValueError(\n                    \"Coordinate arrays are not broadcastable to each other\")\n\n            xy = np.hstack([x.reshape((x.size, 1)) for x in axes])\n\n            if ra_dec_order and sky == 'input':\n                xy = self._denormalize_sky(xy)\n            output = func(xy, origin)\n            if ra_dec_order and sky == 'output':\n                output = self._normalize_sky(output)\n                return (output[:, 0].reshape(axes[0].shape),\n                        output[:, 1].reshape(axes[0].shape))\n            return [output[:, i].reshape(axes[0].shape)\n                    for i in range(output.shape[1])]\n</replace>"
          },
          "output": {
            "diff": "--- astropy/wcs/wcs.py\n+++ astropy/wcs/wcs.py\n@@ -1212,6 +1212,9 @@\n         \"\"\"\n \n         def _return_list_of_arrays(axes, origin):\n+            if all(np.size(ax) == 0 for ax in axes):\n+                return [np.array([])] * len(axes)\n+\n             try:\n                 axes = np.broadcast_arrays(*axes)\n             except ValueError:\n",
            "message": "Applied the change to astropy/wcs/wcs.py.\n\n<scratch_pad>\n```plaintext\n</scratch_pad>",
            "verification_errors": []
          },
          "input_tokens": 6851,
          "output_tokens": 253,
          "retry_message": null,
          "completion_cost": 0.024348
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": "--- astropy/wcs/wcs.py\n+++ astropy/wcs/wcs.py\n@@ -1212,6 +1212,9 @@\n         \"\"\"\n \n         def _return_list_of_arrays(axes, origin):\n+            if all(np.size(ax) == 0 for ax in axes):\n+                return [np.array([])] * len(axes)\n+\n             try:\n                 axes = np.broadcast_arrays(*axes)\n             except ValueError:\n",
        "model": "deepseek-coder",
        "message": "Applied the change to astropy/wcs/wcs.py.\n\n<scratch_pad>\n```plaintext\n</scratch_pad>",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": [],
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "finish",
            "finish": "The issue has been resolved by ensuring that empty lists/arrays are properly handled, returning empty lists/arrays immediately without further processing.",
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "The provided git diff confirms that the change has been correctly applied. The check for empty lists/arrays is now in place at the beginning of the `_array_converter` method, ensuring that if all axes are empty, empty lists/arrays are returned immediately. This prevents further processing and potential errors when an empty list/array is passed to the WCS transformations.",
            "instructions": null
          },
          "output": {
            "message": "The issue has been resolved by ensuring that empty lists/arrays are properly handled, returning empty lists/arrays immediately without further processing."
          },
          "input_tokens": 5838,
          "output_tokens": 162,
          "retry_message": null,
          "completion_cost": 0.019944000000000003
        }
      ]
    },
    {
      "name": "Finished",
      "state": {
        "model": "gpt-4o",
        "output": {
          "model": "deepseek-coder",
          "temperature": 1.6
        },
        "message": "The issue has been resolved by ensuring that empty lists/arrays are properly handled, returning empty lists/arrays immediately without further processing.",
        "max_tokens": 1000,
        "temperature": 0.0,
        "max_iterations": null,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "Issue when passing empty lists/arrays to WCS transformations\nThe following should not fail but instead should return empty lists/arrays:\r\n\r\n```\r\nIn [1]: from astropy.wcs import WCS\r\n\r\nIn [2]: wcs = WCS('2MASS_h.fits')\r\n\r\nIn [3]: wcs.wcs_pix2world([], [], 0)\r\n---------------------------------------------------------------------------\r\nInconsistentAxisTypesError                Traceback (most recent call last)\r\n<ipython-input-3-e2cc0e97941a> in <module>()\r\n----> 1 wcs.wcs_pix2world([], [], 0)\r\n\r\n~/Dropbox/Code/Astropy/astropy/astropy/wcs/wcs.py in wcs_pix2world(self, *args, **kwargs)\r\n   1352         return self._array_converter(\r\n   1353             lambda xy, o: self.wcs.p2s(xy, o)['world'],\r\n-> 1354             'output', *args, **kwargs)\r\n   1355     wcs_pix2world.__doc__ = \"\"\"\r\n   1356         Transforms pixel coordinates to world coordinates by doing\r\n\r\n~/Dropbox/Code/Astropy/astropy/astropy/wcs/wcs.py in _array_converter(self, func, sky, ra_dec_order, *args)\r\n   1267                     \"a 1-D array for each axis, followed by an origin.\")\r\n   1268 \r\n-> 1269             return _return_list_of_arrays(axes, origin)\r\n   1270 \r\n   1271         raise TypeError(\r\n\r\n~/Dropbox/Code/Astropy/astropy/astropy/wcs/wcs.py in _return_list_of_arrays(axes, origin)\r\n   1223             if ra_dec_order and sky == 'input':\r\n   1224                 xy = self._denormalize_sky(xy)\r\n-> 1225             output = func(xy, origin)\r\n   1226             if ra_dec_order and sky == 'output':\r\n   1227                 output = self._normalize_sky(output)\r\n\r\n~/Dropbox/Code/Astropy/astropy/astropy/wcs/wcs.py in <lambda>(xy, o)\r\n   1351             raise ValueError(\"No basic WCS settings were created.\")\r\n   1352         return self._array_converter(\r\n-> 1353             lambda xy, o: self.wcs.p2s(xy, o)['world'],\r\n   1354             'output', *args, **kwargs)\r\n   1355     wcs_pix2world.__doc__ = \"\"\"\r\n\r\nInconsistentAxisTypesError: ERROR 4 in wcsp2s() at line 2646 of file cextern/wcslib/C/wcs.c:\r\nncoord and/or nelem inconsistent with the wcsprm.\r\n```\n"
}