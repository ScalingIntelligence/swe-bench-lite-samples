{
  "info": {
    "duration": 181.69278264045715,
    "submission": "diff --git a/sympy/physics/vector/point.py b/sympy/physics/vector/point.py\nindex d4e3cfcc90..d656440efe 100644\n--- a/sympy/physics/vector/point.py\n+++ b/sympy/physics/vector/point.py\n@@ -519,8 +519,11 @@ def vel(self, frame):\n \n         _check_frame(frame)\n         if not (frame in self._vel_dict):\n-            raise ValueError('Velocity of point ' + self.name + ' has not been'\n-                             ' defined in ReferenceFrame ' + frame.name)\n+            if self._pos_dict:\n+                return (self.pos_from(next(iter(self._pos_dict)))).dt(frame)\n+            else:\n+                raise ValueError('Velocity of point ' + self.name + ' has not been'\n+                                 ' defined in ReferenceFrame ' + frame.name)\n         return self._vel_dict[frame]\n \n     def partial_velocity(self, frame, *gen_speeds):\n",
    "total_cost": 0.18331799999999998,
    "instance_id": "sympy__sympy-20049",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue relates to the calculation of velocity in the `Point` class within the sympy.physics.vector module. The specific method of interest is `vel(self, frame)`. The error indicates that the velocity has not been defined in the specified ReferenceFrame, despite the position being set. To resolve this, we need to investigate the `vel` method and related methods in the `Point` class and potentially modify or supplement it to automatically calculate velocity based on position if not explicitly set.",
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "Point"
                ],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": [
                  "vel"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 160,
                "span_id": "Point.vel",
                "file_path": "sympy/physics/vector/point.py"
              }
            ],
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "Point"
                ],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": [
                  "vel"
                ]
              }
            ]
          },
          "input_tokens": 3427,
          "output_tokens": 159,
          "retry_message": null,
          "completion_cost": 0.012666
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 160,
            "span_id": "Point.vel",
            "file_path": "sympy/physics/vector/point.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue highlights a discrepancy where the calculation of angular velocity works between two reference frames but not the linear velocity. The key to addressing this issue is to ensure that the 'vel' method in the Point class can calculate the velocity if it hasn't been explicitly defined, similar to how the 'ang_vel_in' method works in the ReferenceFrame class. The existing code for the Point class includes methods to set and retrieve positions, velocities, and accelerations, but it currently raises a ValueError if the velocity hasn't been defined in the requested ReferenceFrame. To solve this issue, we should modify the 'vel' method to dynamically calculate the velocity if it's not already set, similar to how the expected output is derived (using the derivative of the position vector with respect to the frame). The identified code spans include methods related to setting and retrieving velocities, as well as the velocity calculation method ('vel') that currently raises an error. These spans are relevant because they provide the context needed to understand how velocities are managed and why the current implementation results in an error when trying to retrieve an undefined velocity. To address the issue, modification of the 'vel' method to include dynamic velocity calculation logic would be necessary.",
            "identified_spans": [
              {
                "span_ids": [
                  "Point.__init__",
                  "Point.vel",
                  "Point.set_vel"
                ],
                "file_path": "sympy/physics/vector/point.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 2987,
          "output_tokens": 335,
          "retry_message": null,
          "completion_cost": 0.013986
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The file context provided includes the relevant methods and attributes required to address the reported issue. The `vel` method in the `Point` class is explicitly defined and raises a ValueError if the velocity has not been defined for the specified ReferenceFrame. This aligns with the issue's description. The `set_vel`, `pos_from`, and `set_pos` methods are also provided, which are necessary for setting and retrieving position and velocity data. However, there is no direct implementation that automatically calculates the velocity based on the position if not explicitly set, suggesting that this functionality might need to be added.",
            "search_suggestions": "Look for places in the Point class where velocity could be automatically calculated from position data if not explicitly set. Also, consider reviewing related methods like `acc` and `locatenew` for potential integration points."
          },
          "output": {
            "message": "Look for places in the Point class where velocity could be automatically calculated from position data if not explicitly set. Also, consider reviewing related methods like `acc` and `locatenew` for potential integration points."
          },
          "input_tokens": 2772,
          "output_tokens": 203,
          "retry_message": null,
          "completion_cost": 0.011361
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Look for places in the Point class where velocity could be automatically calculated from position data if not explicitly set. Also, consider reviewing related methods like `acc` and `locatenew` for potential integration points.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "Based on the provided code, it appears that the `vel` method in the `Point` class will raise a `ValueError` if the velocity has not been explicitly set for the specified frame. This suggests that the velocity is not automatically calculated from position data if not explicitly set. Potential integration points for automatically calculating velocity could be in methods related to position setting or updating, such as `set_pos`, `locatenew`, or within the `vel` method itself, where a check could be added to compute velocity if it hasn't been set. Similarly, the `acc` method could be checked for potential integration of automatically calculating acceleration based on velocity if not explicitly set.",
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "Point"
                ],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": [
                  "set_pos",
                  "locatenew",
                  "vel"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 197,
                "span_id": "Point.set_pos",
                "file_path": "sympy/physics/vector/point.py"
              },
              {
                "rank": 0,
                "tokens": 176,
                "span_id": "Point.locatenew",
                "file_path": "sympy/physics/vector/point.py"
              },
              {
                "rank": 0,
                "tokens": 160,
                "span_id": "Point.vel",
                "file_path": "sympy/physics/vector/point.py"
              }
            ],
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "Point"
                ],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": [
                  "set_pos",
                  "locatenew",
                  "vel"
                ]
              }
            ]
          },
          "input_tokens": 4971,
          "output_tokens": 247,
          "retry_message": null,
          "completion_cost": 0.018618000000000003
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 197,
            "span_id": "Point.set_pos",
            "file_path": "sympy/physics/vector/point.py"
          },
          {
            "rank": 0,
            "tokens": 176,
            "span_id": "Point.locatenew",
            "file_path": "sympy/physics/vector/point.py"
          },
          {
            "rank": 0,
            "tokens": 160,
            "span_id": "Point.vel",
            "file_path": "sympy/physics/vector/point.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue highlights a limitation in the `Point.vel()` method where it raises a ValueError if the velocity has not been defined in the specified reference frame. The expected behavior is for the method to calculate the velocity if possible, similar to how angular velocities are calculated. I analyzed the provided search results and found that the relevant code spans include the `Point.__init__`, `Point.vel`, `Point.set_vel`, and other related methods such as `Point.a1pt_theory`, `Point.a2pt_theory`, `Point.v1pt_theory`, and `Point.v2pt_theory`. These methods handle the setting and retrieval of velocities, accelerations, and positions, which are directly related to the issue at hand. The current implementation of `Point.vel` raises an error if the velocity is not found, which aligns with the issue description. This suggests that the identified code spans are relevant and helpful in addressing the issue.",
            "identified_spans": [
              {
                "span_ids": [
                  "Point.__init__",
                  "Point.vel",
                  "Point.set_vel",
                  "Point.a1pt_theory",
                  "Point.a2pt_theory",
                  "Point.v1pt_theory",
                  "Point.v2pt_theory"
                ],
                "file_path": "sympy/physics/vector/point.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 4464,
          "output_tokens": 330,
          "retry_message": null,
          "completion_cost": 0.018342
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The file context provided contains the methods related to the Point class within the sympy.physics.vector module. Specifically, the methods such as `vel`, `acc`, `set_vel`, and `pos_from` are relevant to the issue involving the automatic calculation of velocity. However, the current implementation of the `vel` method raises a ValueError if the velocity is not explicitly set for the specified frame, which aligns with the reported issue. There is no explicit code for automatically calculating the velocity from the position if it has not been explicitly set, which is needed to address the issue. Additional methods or modifications within the Point class would be required to integrate automatic velocity calculations.",
            "search_suggestions": "Look for additional methods or sections in the Point class that might be responsible for updating or managing position and velocity relationships. Additionally, consider extending or modifying the `vel` method to include automatic calculation logic based on position data if the velocity has not been explicitly set."
          },
          "output": {
            "message": "Look for additional methods or sections in the Point class that might be responsible for updating or managing position and velocity relationships. Additionally, consider extending or modifying the `vel` method to include automatic calculation logic based on position data if the velocity has not been explicitly set."
          },
          "input_tokens": 2809,
          "output_tokens": 227,
          "retry_message": null,
          "completion_cost": 0.011832
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": "Look for additional methods or sections in the Point class that might be responsible for updating or managing position and velocity relationships. Additionally, consider extending or modifying the `vel` method to include automatic calculation logic based on position data if the velocity has not been explicitly set.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "From the provided `Point` class code, it's clear that the `vel` method currently relies on the velocity being explicitly set via `set_vel`. There is potential to extend the `vel` method to include automatic calculation logic based on position data if velocity hasn't been explicitly set. This could be done by checking if the velocity is in `self._vel_dict`. If not present, the method could calculate the velocity from the position using a derivative with respect to time, similar to how `acc` (acceleration) method handles its calculation when velocity is present but acceleration not explicitly set. This approach would involve modifying the `vel` method to include a calculation based on the position and the frame's angular velocity, using methods like `pos_from` and potentially `time_derivative` from related modules. This would seamlessly integrate the automatic velocity calculation without requiring explicit user definition every time.",
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "Point"
                ],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": [
                  "vel"
                ]
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 160,
                "span_id": "Point.vel",
                "file_path": "sympy/physics/vector/point.py"
              }
            ],
            "search_requests": [
              {
                "query": null,
                "class_names": [
                  "Point"
                ],
                "code_snippet": null,
                "file_pattern": null,
                "function_names": [
                  "vel"
                ]
              }
            ]
          },
          "input_tokens": 5277,
          "output_tokens": 281,
          "retry_message": null,
          "completion_cost": 0.020046
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 160,
            "span_id": "Point.vel",
            "file_path": "sympy/physics/vector/point.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue pertains to the functionality of calculating the velocity of a point in a given reference frame, which is not currently implemented. The user expects that if the position vector between two points is defined, the velocity should be calculable based on that positional relationship. Key methods and attributes that need to be considered are `Point.vel`, `Point.set_vel`, `Point.pos_from`, and the dictionaries `_vel_dict` and `_pos_dict`. The current implementation in `Point.vel` raises a ValueError if the velocity is not already explicitly set in `_vel_dict`, which aligns with the observed behavior in the provided example. The search results confirm the presence of the relevant methods and attributes necessary for addressing this issue.",
            "identified_spans": [
              {
                "span_ids": [
                  "Point.vel",
                  "Point.set_vel",
                  "Point.pos_from",
                  "Point.__init__"
                ],
                "file_path": "sympy/physics/vector/point.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 4464,
          "output_tokens": 250,
          "retry_message": null,
          "completion_cost": 0.017142
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "From the provided `Point` class code, it's clear that the `vel` method currently relies on the velocity being explicitly set via `set_vel`. There is potential to extend the `vel` method to include automatic calculation logic based on position data if velocity hasn't been explicitly set. This could be done by checking if the velocity is in `self._vel_dict`. If not present, the method could calculate the velocity from the position using a derivative with respect to time, similar to how `acc` (acceleration) method handles its calculation when velocity is present but acceleration not explicitly set. This approach would involve modifying the `vel` method to include a calculation based on the position and the frame's angular velocity, using methods like `pos_from` and potentially `time_derivative` from related modules. This would seamlessly integrate the automatic velocity calculation without requiring explicit user definition every time.",
            "search_suggestions": "explore the usage of `time_derivative` in the sympy.physics.mechanics module and how it can be integrated with `pos_from` method in the Point class to calculate velocity when not explicitly defined."
          },
          "output": {},
          "input_tokens": 2857,
          "output_tokens": 269,
          "retry_message": null,
          "completion_cost": 0.012606000000000001
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "Point.vel",
            "file_path": "sympy/physics/vector/point.py",
            "scratch_pad": "The issue reported involves the lack of functionality to calculate the velocity of a point if it hasn't been explicitly defined. This should be handled similarly to how angular velocity is calculated between reference frames. To address this, we need to modify the `vel` method to automatically calculate the velocity using the positional derivatives if the velocity hasn't been explicitly set.",
            "instructions": "Update the `vel` method in the `Point` class to calculate the velocity using positional derivatives if the velocity hasn't been set."
          },
          "output": {
            "span_id": "Point.vel",
            "end_line": 524,
            "file_path": "sympy/physics/vector/point.py",
            "start_line": 499,
            "instructions": "Update the `vel` method in the `Point` class to calculate the velocity using positional derivatives if the velocity hasn't been set."
          },
          "input_tokens": 3104,
          "output_tokens": 173,
          "retry_message": null,
          "completion_cost": 0.011907000000000001
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "Point.vel",
        "end_line": 524,
        "file_path": "sympy/physics/vector/point.py",
        "max_tokens": 1000,
        "start_line": 499,
        "temperature": 1.6,
        "instructions": "Update the `vel` method in the `Point` class to calculate the velocity using positional derivatives if the velocity hasn't been set.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "<replace>\n    def vel(self, frame):\n        \"\"\"The velocity Vector of this Point in the ReferenceFrame.\n\n        Parameters\n        ==========\n\n        frame : ReferenceFrame\n            The frame in which the returned velocity vector will be defined in\n\n        Examples\n        ========\n\n        >>> from sympy.physics.vector import Point, ReferenceFrame\n        >>> N = ReferenceFrame('N')\n        >>> p1 = Point('p1')\n        >>> p1.set_vel(N, 10 * N.x)\n        >>> p1.vel(N)\n        10*N.x\n\n        \"\"\"\n\n        _check_frame(frame)\n        if not (frame in self._vel_dict):\n            if self._pos_dict:\n                return (self.pos_from(next(iter(self._pos_dict)))).dt(frame)\n            else:\n                raise ValueError('Velocity of point ' + self.name + ' has not been'\n                                 ' defined in ReferenceFrame ' + frame.name)\n        return self._vel_dict[frame]\n</replace>"
          },
          "output": {
            "diff": "--- sympy/physics/vector/point.py\n+++ sympy/physics/vector/point.py\n@@ -519,8 +519,11 @@\n \n         _check_frame(frame)\n         if not (frame in self._vel_dict):\n-            raise ValueError('Velocity of point ' + self.name + ' has not been'\n-                             ' defined in ReferenceFrame ' + frame.name)\n+            if self._pos_dict:\n+                return (self.pos_from(next(iter(self._pos_dict)))).dt(frame)\n+            else:\n+                raise ValueError('Velocity of point ' + self.name + ' has not been'\n+                                 ' defined in ReferenceFrame ' + frame.name)\n         return self._vel_dict[frame]\n \n     def partial_velocity(self, frame, *gen_speeds):\n",
            "message": "Applied the change to sympy/physics/vector/point.py.",
            "verification_errors": []
          },
          "input_tokens": 5844,
          "output_tokens": 248,
          "retry_message": null,
          "completion_cost": 0.021252
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": "--- sympy/physics/vector/point.py\n+++ sympy/physics/vector/point.py\n@@ -519,8 +519,11 @@\n \n         _check_frame(frame)\n         if not (frame in self._vel_dict):\n-            raise ValueError('Velocity of point ' + self.name + ' has not been'\n-                             ' defined in ReferenceFrame ' + frame.name)\n+            if self._pos_dict:\n+                return (self.pos_from(next(iter(self._pos_dict)))).dt(frame)\n+            else:\n+                raise ValueError('Velocity of point ' + self.name + ' has not been'\n+                                 ' defined in ReferenceFrame ' + frame.name)\n         return self._vel_dict[frame]\n \n     def partial_velocity(self, frame, *gen_speeds):\n",
        "model": "deepseek-coder",
        "message": "Applied the change to sympy/physics/vector/point.py.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": [],
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "finish",
            "finish": "The issue regarding the calculation of velocity for a point has been resolved by implementing the suggested change. The `vel` method now correctly calculates the velocity using positional derivatives if it hasn't been explicitly set, matching the behavior observed with angular velocity calculations.",
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "The change has been successfully applied to the `vel` method of the `Point` class. This modification ensures that if the velocity hasn't been explicitly set, it will be calculated using the positional derivatives. The logic checks if the position dictionary is available and then calculates the velocity by differentiating the position vector with respect to time in the given frame. This aligns with the expected behavior and resolves the reported issue.",
            "instructions": null
          },
          "output": {
            "message": "The issue regarding the calculation of velocity for a point has been resolved by implementing the suggested change. The `vel` method now correctly calculates the velocity using positional derivatives if it hasn't been explicitly set, matching the behavior observed with angular velocity calculations."
          },
          "input_tokens": 3550,
          "output_tokens": 194,
          "retry_message": null,
          "completion_cost": 0.01356
        }
      ]
    },
    {
      "name": "Finished",
      "state": {
        "model": "gpt-4o",
        "output": {
          "model": "deepseek-coder",
          "temperature": 1.6
        },
        "message": "The issue regarding the calculation of velocity for a point has been resolved by implementing the suggested change. The `vel` method now correctly calculates the velocity using positional derivatives if it hasn't been explicitly set, matching the behavior observed with angular velocity calculations.",
        "max_tokens": 1000,
        "temperature": 0.0,
        "max_iterations": null,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "Point.vel() should calculate the velocity if possible\nIf you specify the orientation of two reference frames and then ask for the angular velocity between the two reference frames the angular velocity will be calculated. But if you try to do the same thing with velocities, this doesn't work. See below:\r\n\r\n```\r\nIn [1]: import sympy as sm                                                                               \r\n\r\nIn [2]: import sympy.physics.mechanics as me                                                             \r\n\r\nIn [3]: A = me.ReferenceFrame('A')                                                                       \r\n\r\nIn [5]: q = me.dynamicsymbols('q')                                                                       \r\n\r\nIn [6]: B = A.orientnew('B', 'Axis', (q, A.x))                                                           \r\n\r\nIn [7]: B.ang_vel_in(A)                                                                                  \r\nOut[7]: q'*A.x\r\n\r\nIn [9]: P = me.Point('P')                                                                                \r\n\r\nIn [10]: Q = me.Point('Q')                                                                               \r\n\r\nIn [11]: r = q*A.x + 2*q*A.y                                                                             \r\n\r\nIn [12]: Q.set_pos(P, r)                                                                                 \r\n\r\nIn [13]: Q.vel(A)                                                                                        \r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-13-0fc8041904cc> in <module>\r\n----> 1 Q.vel(A)\r\n\r\n~/miniconda3/lib/python3.6/site-packages/sympy/physics/vector/point.py in vel(self, frame)\r\n    453         if not (frame in self._vel_dict):\r\n    454             raise ValueError('Velocity of point ' + self.name + ' has not been'\r\n--> 455                              ' defined in ReferenceFrame ' + frame.name)\r\n    456         return self._vel_dict[frame]\r\n    457 \r\n\r\nValueError: Velocity of point Q has not been defined in ReferenceFrame A\r\n```\r\n\r\nThe expected result of the `Q.vel(A)` should be:\r\n\r\n```\r\nIn [14]: r.dt(A)                                                                                         \r\nOut[14]: q'*A.x + 2*q'*A.y\r\n```\r\n\r\nI think that this is possible. Maybe there is a reason it isn't implemented. But we should try to implement it because it is confusing why this works for orientations and not positions.\r\n\r\n\n"
}