{
  "info": {
    "duration": 155.2575500011444,
    "submission": "diff --git a/django/contrib/admin/helpers.py b/django/contrib/admin/helpers.py\nindex dd154f72ee..ba8c3463a0 100644\n--- a/django/contrib/admin/helpers.py\n+++ b/django/contrib/admin/helpers.py\n@@ -209,7 +209,11 @@ class AdminReadonlyField:\n             remote_field.model._meta.model_name,\n         )\n         try:\n-            url = reverse(url_name, args=[quote(remote_obj.pk)])\n+            url = reverse(\n+                url_name,\n+                args=[quote(remote_obj.pk)],\n+                current_app=self.model_admin.admin_site.name\n+            )\n             return format_html('<a href=\"{}\">{}</a>', url, remote_obj)\n         except NoReverseMatch:\n             return str(remote_obj)\n",
    "total_cost": 0.17045100000000002,
    "instance_id": "django__django-14855",
    "evaluation_name": "run_on_remaining_250_for_july_4_t_1.6"
  },
  "name": "AgenticLoop",
  "transitions": [
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "scratch_pad": "The issue describes a problem with the URL generation in a custom Admin Site for a readonly ForeignKey field in Django. The URL is incorrectly generated as /admin/... instead of /custom-admin/.... This issue seems to be rooted in the `get_admin_url` method in the `django.contrib.admin.helpers` module where the current_app parameter isn't being used. Other parts of the admin use the current_app parameter to identify the correct admin site name. The key area to focus on is the `get_admin_url` method and the context in which it is used, especially when dealing with readonly fields and ForeignKey fields in custom admin sites.",
            "search_requests": [
              {
                "query": "get_admin_url method for readonly fields in custom Admin Site",
                "class_names": [
                  "AdminReadonlyField"
                ],
                "code_snippet": null,
                "file_pattern": "**/admin/helpers.py",
                "function_names": [
                  "get_admin_url"
                ]
              },
              {
                "query": "handling of readonly_fields in ModelAdmin",
                "class_names": [
                  "ModelAdmin"
                ],
                "code_snippet": null,
                "file_pattern": "**/admin/options.py",
                "function_names": []
              },
              {
                "query": "custom AdminSite name usage",
                "class_names": [
                  "AdminSite"
                ],
                "code_snippet": null,
                "file_pattern": "**/admin/sites.py",
                "function_names": []
              }
            ]
          },
          "output": {
            "complete": false,
            "ranked_spans": [
              {
                "rank": 0,
                "tokens": 87,
                "span_id": "AdminReadonlyField.get_admin_url",
                "file_path": "django/contrib/admin/helpers.py"
              },
              {
                "rank": 0,
                "tokens": 6,
                "span_id": "AdminReadonlyField",
                "file_path": "django/contrib/admin/helpers.py"
              },
              {
                "rank": 0,
                "tokens": 54,
                "span_id": "AdminReadonlyField.label_tag",
                "file_path": "django/contrib/admin/helpers.py"
              },
              {
                "rank": 1,
                "tokens": 274,
                "span_id": "AdminReadonlyField.contents",
                "file_path": "django/contrib/admin/helpers.py"
              },
              {
                "rank": 0,
                "tokens": 100,
                "span_id": "ModelAdmin.get_model_perms",
                "file_path": "django/contrib/admin/options.py"
              },
              {
                "rank": 0,
                "tokens": 24,
                "span_id": "ModelAdmin._get_form_for_get_fields",
                "file_path": "django/contrib/admin/options.py"
              },
              {
                "rank": 2,
                "tokens": 409,
                "span_id": "ModelAdmin.get_form",
                "file_path": "django/contrib/admin/options.py"
              },
              {
                "rank": 4,
                "tokens": 33,
                "span_id": "ModelAdmin.change_view",
                "file_path": "django/contrib/admin/options.py"
              },
              {
                "rank": 4,
                "tokens": 29,
                "span_id": "ModelAdmin.add_view",
                "file_path": "django/contrib/admin/options.py"
              },
              {
                "rank": 4,
                "tokens": 73,
                "span_id": "ModelAdmin._get_edited_object_pks",
                "file_path": "django/contrib/admin/options.py"
              },
              {
                "rank": 5,
                "tokens": 912,
                "span_id": "ModelAdmin._changeform_view",
                "file_path": "django/contrib/admin/options.py"
              },
              {
                "rank": 7,
                "tokens": 101,
                "span_id": "ModelAdmin.get_changelist_form",
                "file_path": "django/contrib/admin/options.py"
              },
              {
                "rank": 9,
                "tokens": 290,
                "span_id": "ModelAdmin.get_inline_formsets",
                "file_path": "django/contrib/admin/options.py"
              },
              {
                "rank": 0,
                "tokens": 24,
                "span_id": "AdminSite.__repr__",
                "file_path": "django/contrib/admin/sites.py"
              },
              {
                "rank": 0,
                "tokens": 222,
                "span_id": "AdminSite",
                "file_path": "django/contrib/admin/sites.py"
              },
              {
                "rank": 3,
                "tokens": 44,
                "span_id": "AdminSite.has_permission",
                "file_path": "django/contrib/admin/sites.py"
              },
              {
                "rank": 3,
                "tokens": 92,
                "span_id": "AdminSite.unregister",
                "file_path": "django/contrib/admin/sites.py"
              },
              {
                "rank": 3,
                "tokens": 30,
                "span_id": "AdminSite.is_registered",
                "file_path": "django/contrib/admin/sites.py"
              },
              {
                "rank": 3,
                "tokens": 30,
                "span_id": "AdminSite.disable_action",
                "file_path": "django/contrib/admin/sites.py"
              },
              {
                "rank": 3,
                "tokens": 40,
                "span_id": "AdminSite.get_action",
                "file_path": "django/contrib/admin/sites.py"
              },
              {
                "rank": 3,
                "tokens": 31,
                "span_id": "AdminSite.actions",
                "file_path": "django/contrib/admin/sites.py"
              },
              {
                "rank": 3,
                "tokens": 45,
                "span_id": "AdminSite.add_action",
                "file_path": "django/contrib/admin/sites.py"
              }
            ],
            "search_requests": [
              {
                "query": "get_admin_url method for readonly fields in custom Admin Site",
                "class_names": [
                  "AdminReadonlyField"
                ],
                "code_snippet": null,
                "file_pattern": "**/admin/helpers.py",
                "function_names": [
                  "get_admin_url"
                ]
              },
              {
                "query": "handling of readonly_fields in ModelAdmin",
                "class_names": [
                  "ModelAdmin"
                ],
                "code_snippet": null,
                "file_pattern": "**/admin/options.py",
                "function_names": []
              },
              {
                "query": "custom AdminSite name usage",
                "class_names": [
                  "AdminSite"
                ],
                "code_snippet": null,
                "file_pattern": "**/admin/sites.py",
                "function_names": []
              }
            ]
          },
          "input_tokens": 3108,
          "output_tokens": 332,
          "retry_message": null,
          "completion_cost": 0.014304
        }
      ]
    },
    {
      "name": "IdentifyCode",
      "state": {
        "model": "deepseek-coder",
        "query": null,
        "class_name": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "code_snippet": null,
        "file_pattern": null,
        "ranked_spans": [
          {
            "rank": 0,
            "tokens": 87,
            "span_id": "AdminReadonlyField.get_admin_url",
            "file_path": "django/contrib/admin/helpers.py"
          },
          {
            "rank": 0,
            "tokens": 6,
            "span_id": "AdminReadonlyField",
            "file_path": "django/contrib/admin/helpers.py"
          },
          {
            "rank": 0,
            "tokens": 54,
            "span_id": "AdminReadonlyField.label_tag",
            "file_path": "django/contrib/admin/helpers.py"
          },
          {
            "rank": 1,
            "tokens": 274,
            "span_id": "AdminReadonlyField.contents",
            "file_path": "django/contrib/admin/helpers.py"
          },
          {
            "rank": 0,
            "tokens": 100,
            "span_id": "ModelAdmin.get_model_perms",
            "file_path": "django/contrib/admin/options.py"
          },
          {
            "rank": 0,
            "tokens": 24,
            "span_id": "ModelAdmin._get_form_for_get_fields",
            "file_path": "django/contrib/admin/options.py"
          },
          {
            "rank": 2,
            "tokens": 409,
            "span_id": "ModelAdmin.get_form",
            "file_path": "django/contrib/admin/options.py"
          },
          {
            "rank": 4,
            "tokens": 33,
            "span_id": "ModelAdmin.change_view",
            "file_path": "django/contrib/admin/options.py"
          },
          {
            "rank": 4,
            "tokens": 29,
            "span_id": "ModelAdmin.add_view",
            "file_path": "django/contrib/admin/options.py"
          },
          {
            "rank": 4,
            "tokens": 73,
            "span_id": "ModelAdmin._get_edited_object_pks",
            "file_path": "django/contrib/admin/options.py"
          },
          {
            "rank": 5,
            "tokens": 912,
            "span_id": "ModelAdmin._changeform_view",
            "file_path": "django/contrib/admin/options.py"
          },
          {
            "rank": 7,
            "tokens": 101,
            "span_id": "ModelAdmin.get_changelist_form",
            "file_path": "django/contrib/admin/options.py"
          },
          {
            "rank": 9,
            "tokens": 290,
            "span_id": "ModelAdmin.get_inline_formsets",
            "file_path": "django/contrib/admin/options.py"
          },
          {
            "rank": 0,
            "tokens": 24,
            "span_id": "AdminSite.__repr__",
            "file_path": "django/contrib/admin/sites.py"
          },
          {
            "rank": 0,
            "tokens": 222,
            "span_id": "AdminSite",
            "file_path": "django/contrib/admin/sites.py"
          },
          {
            "rank": 3,
            "tokens": 44,
            "span_id": "AdminSite.has_permission",
            "file_path": "django/contrib/admin/sites.py"
          },
          {
            "rank": 3,
            "tokens": 92,
            "span_id": "AdminSite.unregister",
            "file_path": "django/contrib/admin/sites.py"
          },
          {
            "rank": 3,
            "tokens": 30,
            "span_id": "AdminSite.is_registered",
            "file_path": "django/contrib/admin/sites.py"
          },
          {
            "rank": 3,
            "tokens": 30,
            "span_id": "AdminSite.disable_action",
            "file_path": "django/contrib/admin/sites.py"
          },
          {
            "rank": 3,
            "tokens": 40,
            "span_id": "AdminSite.get_action",
            "file_path": "django/contrib/admin/sites.py"
          },
          {
            "rank": 3,
            "tokens": 31,
            "span_id": "AdminSite.actions",
            "file_path": "django/contrib/admin/sites.py"
          },
          {
            "rank": 3,
            "tokens": 45,
            "span_id": "AdminSite.add_action",
            "file_path": "django/contrib/admin/sites.py"
          }
        ],
        "function_name": null,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false
      },
      "actions": [
        {
          "action": {
            "scratch_pad": "The reported issue involves the incorrect URL generation in a custom Admin Site when handling a ForeignKey field listed in readonly_fields. The current implementation in `django.contrib.admin.helpers` lacks the `current_app` parameter in the `reverse` function call within the `get_admin_url` method. This omission is causing the URL to be constructed using the default 'admin' namespace instead of the custom Admin Site's namespace. \n\nThe relevant code spans identified are primarily in `django/contrib/admin/helpers.py` and `django/contrib/admin/options.py`. Specifically, the `AdminReadonlyField` class in `django/contrib/admin/helpers.py` contains the method `get_admin_url` which is responsible for generating the URL for the ForeignKey field. This method currently does not pass the `current_app` parameter to the `reverse` function. \n\nAdditionally, the `ModelAdmin` class in `django/contrib/admin/options.py` is responsible for handling various aspects of the admin interface, including the management of readonly fields. The issue does not directly stem from this class, but understanding its methods such as `get_form`, `get_changelist_form`, and `get_inline_formsets` helps in understanding the broader context in which readonly fields are managed within the admin interface. \n\nFurthermore, the `AdminSite` class in `django/contrib/admin/sites.py` is relevant as it sets up the custom admin site and its namespace. The `AdminSite` class does not directly contribute to the issue but is part of the larger structure where custom admin sites are defined and managed. \n\nThe search task is not complete as there might be other parts of the codebase, possibly in custom implementations or other Django contrib modules, that interact with or depend on the identified code spans. However, for addressing the immediate issue, the identified code spans provide a sufficient starting point.",
            "identified_spans": [
              {
                "span_ids": [
                  "AdminReadonlyField.get_admin_url"
                ],
                "file_path": "django/contrib/admin/helpers.py"
              },
              {
                "span_ids": [
                  "ModelAdmin.get_form",
                  "ModelAdmin.get_changelist_form",
                  "ModelAdmin.get_inline_formsets"
                ],
                "file_path": "django/contrib/admin/options.py"
              }
            ]
          },
          "output": {},
          "input_tokens": 6780,
          "output_tokens": 564,
          "retry_message": null,
          "completion_cost": 0.0288
        }
      ]
    },
    {
      "name": "DecideRelevance",
      "state": {
        "model": "deepseek-coder",
        "max_tokens": 1000,
        "temperature": 1.6,
        "expand_context": true,
        "max_iterations": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": false,
        "finish_after_relevant_count": 2
      },
      "actions": [
        {
          "action": {
            "complete": false,
            "relevant": true,
            "scratch_pad": "The file context provided includes relevant parts of the Django admin code, specifically the `AdminReadonlyField` class and the `get_admin_url` method within `django/contrib/admin/helpers.py`. It also includes the `ModelAdmin` class within `django/contrib/admin/options.py`, which is related to how models are managed and displayed in the admin interface. These sections are directly relevant to the issue reported as they deal with readonly fields and their URLs in the Django admin. However, the specific method `get_admin_url` does not currently include the `current_app` parameter used to resolve the correct URL format for custom admin sites. This omission is a key part of the issue described. Given this context, it appears incomplete for resolving the issue without further modification or addition of the `current_app` parameter in the `get_admin_url` method.",
            "search_suggestions": null
          },
          "output": {
            "message": null
          },
          "input_tokens": 6549,
          "output_tokens": 223,
          "retry_message": null,
          "completion_cost": 0.022992000000000002
        }
      ]
    },
    {
      "name": "SearchCode",
      "state": {
        "model": "deepseek-coder",
        "message": null,
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": null,
        "max_search_results": 25,
        "support_test_files": false,
        "initial_context_tokens": 4000,
        "initial_search_results": 50,
        "include_message_history": true,
        "provide_initial_context": true,
        "initial_context_spans_per_file": 5,
        "max_retries_with_any_file_context": 3
      },
      "actions": [
        {
          "action": {
            "complete": true,
            "scratch_pad": "The issue with the URL generation for readonly fields in custom Admin Site in Django is well-documented in the provided `django/contrib/admin/helpers.py` and `django/contrib/admin/options.py` files. The `get_admin_url` method in `AdminReadonlyField` does not include the `current_app` parameter in its `reverse` call, which is why it defaults to the `/admin/` URL instead of the custom admin URL. This is a clear indicator that the method needs to be updated to include the `current_app` parameter to correctly handle the URL for custom admin sites. The `ModelAdmin` class in `django/contrib/admin/options.py` shows the usage of `current_app` parameter in other methods, which suggests consistency in using this parameter for URL generation across the admin site. Thus, it confirms the need to update the `get_admin_url` method in `AdminReadonlyField`, as outlined in the issue description.",
            "search_requests": []
          },
          "output": {
            "message": "The issue with the URL generation for readonly fields in custom Admin Site in Django is well-documented in the provided `django/contrib/admin/helpers.py` and `django/contrib/admin/options.py` files. The `get_admin_url` method in `AdminReadonlyField` does not include the `current_app` parameter in its `reverse` call, which is why it defaults to the `/admin/` URL instead of the custom admin URL. This is a clear indicator that the method needs to be updated to include the `current_app` parameter to correctly handle the URL for custom admin sites. The `ModelAdmin` class in `django/contrib/admin/options.py` shows the usage of `current_app` parameter in other methods, which suggests consistency in using this parameter for URL generation across the admin site. Thus, it confirms the need to update the `get_admin_url` method in `AdminReadonlyField`, as outlined in the issue description."
          },
          "input_tokens": 8895,
          "output_tokens": 239,
          "retry_message": null,
          "completion_cost": 0.030270000000000002
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": null,
        "model": "deepseek-coder",
        "message": "The issue with the URL generation for readonly fields in custom Admin Site in Django is well-documented in the provided `django/contrib/admin/helpers.py` and `django/contrib/admin/options.py` files. The `get_admin_url` method in `AdminReadonlyField` does not include the `current_app` parameter in its `reverse` call, which is why it defaults to the `/admin/` URL instead of the custom admin URL. This is a clear indicator that the method needs to be updated to include the `current_app` parameter to correctly handle the URL for custom admin sites. The `ModelAdmin` class in `django/contrib/admin/options.py` shows the usage of `current_app` parameter in other methods, which suggests consistency in using this parameter for URL generation across the admin site. Thus, it confirms the need to update the `get_admin_url` method in `AdminReadonlyField`, as outlined in the issue description.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": null,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "modify",
            "finish": null,
            "reject": null,
            "span_id": "AdminReadonlyField.get_admin_url",
            "file_path": "django/contrib/admin/helpers.py",
            "scratch_pad": "The issue described involves the URL generation for readonly fields in a custom Admin Site, where the URL defaults to /admin/ instead of the custom URL path. This discrepancy occurs due to the absence of the `current_app` parameter in the `reverse` call within the `get_admin_url` method of the `AdminReadonlyField` class. By including the `current_app` parameter and setting it to the admin site's name, the URL can be correctly generated to reflect the custom admin site path. This change aligns with the practices used elsewhere in Django's admin module, where the `current_app` parameter is consistently used for URL reversal.",
            "instructions": "Modify the `get_admin_url` method in the `AdminReadonlyField` class to include the `current_app` parameter in the `reverse` call. This parameter should be set to `self.model_admin.admin_site.name` to ensure the correct URL for custom admin sites is generated."
          },
          "output": {
            "span_id": "AdminReadonlyField.get_admin_url",
            "end_line": 215,
            "file_path": "django/contrib/admin/helpers.py",
            "start_line": 206,
            "instructions": "Modify the `get_admin_url` method in the `AdminReadonlyField` class to include the `current_app` parameter in the `reverse` call. This parameter should be set to `self.model_admin.admin_site.name` to ensure the correct URL for custom admin sites is generated."
          },
          "input_tokens": 7053,
          "output_tokens": 282,
          "retry_message": null,
          "completion_cost": 0.025389000000000002
        }
      ]
    },
    {
      "name": "EditCode",
      "state": {
        "model": "deepseek-coder",
        "verify": true,
        "span_id": "AdminReadonlyField.get_admin_url",
        "end_line": 215,
        "file_path": "django/contrib/admin/helpers.py",
        "max_tokens": 1000,
        "start_line": 206,
        "temperature": 1.6,
        "instructions": "Modify the `get_admin_url` method in the `AdminReadonlyField` class to include the `current_app` parameter in the `reverse` call. This parameter should be set to `self.model_admin.admin_site.name` to ensure the correct URL for custom admin sites is generated.",
        "max_iterations": 8,
        "chain_of_thought": false,
        "show_file_context": true,
        "show_initial_message": true,
        "max_prompt_file_tokens": 4000,
        "include_message_history": true
      },
      "actions": [
        {
          "action": {
            "content": "<replace>\n    def get_admin_url(self, remote_field, remote_obj):\n        url_name = 'admin:%s_%s_change' % (\n            remote_field.model._meta.app_label,\n            remote_field.model._meta.model_name,\n        )\n        try:\n            url = reverse(\n                url_name,\n                args=[quote(remote_obj.pk)],\n                current_app=self.model_admin.admin_site.name\n            )\n            return format_html('<a href=\"{}\">{}</a>', url, remote_obj)\n        except NoReverseMatch:\n            return str(remote_obj)\n</replace>"
          },
          "output": {
            "diff": "--- django/contrib/admin/helpers.py\n+++ django/contrib/admin/helpers.py\n@@ -209,7 +209,11 @@\n             remote_field.model._meta.model_name,\n         )\n         try:\n-            url = reverse(url_name, args=[quote(remote_obj.pk)])\n+            url = reverse(\n+                url_name,\n+                args=[quote(remote_obj.pk)],\n+                current_app=self.model_admin.admin_site.name\n+            )\n             return format_html('<a href=\"{}\">{}</a>', url, remote_obj)\n         except NoReverseMatch:\n             return str(remote_obj)\n",
            "message": "Applied the change to django/contrib/admin/helpers.py.",
            "verification_errors": []
          },
          "input_tokens": 6778,
          "output_tokens": 160,
          "retry_message": null,
          "completion_cost": 0.022734
        }
      ]
    },
    {
      "name": "PlanToCode",
      "state": {
        "diff": "--- django/contrib/admin/helpers.py\n+++ django/contrib/admin/helpers.py\n@@ -209,7 +209,11 @@\n             remote_field.model._meta.model_name,\n         )\n         try:\n-            url = reverse(url_name, args=[quote(remote_obj.pk)])\n+            url = reverse(\n+                url_name,\n+                args=[quote(remote_obj.pk)],\n+                current_app=self.model_admin.admin_site.name\n+            )\n             return format_html('<a href=\"{}\">{}</a>', url, remote_obj)\n         except NoReverseMatch:\n             return str(remote_obj)\n",
        "model": "deepseek-coder",
        "message": "Applied the change to django/contrib/admin/helpers.py.",
        "max_tokens": 1000,
        "temperature": 1.6,
        "max_iterations": 8,
        "finish_on_review": false,
        "verification_errors": [],
        "max_prompt_file_tokens": 4000,
        "include_message_history": true,
        "allow_hallucinated_spans": false,
        "max_tokens_in_edit_prompt": 500,
        "expand_context_with_related_spans": true
      },
      "actions": [
        {
          "action": {
            "action": "finish",
            "finish": "The modification to the `get_admin_url` method has successfully implemented the necessary changes to address the URL generation issue for readonly fields in custom Admin Sites. This concludes the task as the changes align with the reported issue and are consistent with Django's admin practices.",
            "reject": null,
            "span_id": null,
            "file_path": null,
            "scratch_pad": "The change applied in the previous step was successful, addressing the issue by including the `current_app` parameter in the `reverse` call within the `get_admin_url` method. This has corrected the URL generation for readonly fields in custom Admin Sites to use the custom URL path instead of the default `/admin/`. Since the changes are in line with the reported issue and align with the practices used elsewhere in Django's admin module, no further modifications are necessary. The issue has been fully addressed.",
            "instructions": null
          },
          "output": {
            "message": "The modification to the `get_admin_url` method has successfully implemented the necessary changes to address the URL generation issue for readonly fields in custom Admin Sites. This concludes the task as the changes align with the reported issue and are consistent with Django's admin practices."
          },
          "input_tokens": 7559,
          "output_tokens": 219,
          "retry_message": null,
          "completion_cost": 0.025962
        }
      ]
    },
    {
      "name": "Finished",
      "state": {
        "model": "gpt-4o",
        "output": {
          "model": "deepseek-coder",
          "temperature": 1.6
        },
        "message": "The modification to the `get_admin_url` method has successfully implemented the necessary changes to address the URL generation issue for readonly fields in custom Admin Sites. This concludes the task as the changes align with the reported issue and are consistent with Django's admin practices.",
        "max_tokens": 1000,
        "temperature": 0.0,
        "max_iterations": null,
        "include_message_history": false
      },
      "actions": []
    }
  ],
  "initial_message": "Wrong URL generated by get_admin_url for readonly field in custom Admin Site\nDescription\n\t\nWhen a model containing a ForeignKey field is viewed (or edited) in a custom Admin Site, and that ForeignKey field is listed in readonly_fields, the url generated for the link is /admin/... instead of /custom-admin/....\nThis appears to be caused by the following line in django.contrib.admin.helpers get_admin_url:\nurl = reverse(url_name, args=[quote(remote_obj.pk)])\nOther parts of the admin use the current_app keyword parameter to identify the correct current name of the Admin Site. (See django.contrib.admin.options.ModelAdmin response_add as just one example)\nI have been able to correct this specific issue by replacing the above line with:\nurl = reverse(\n\turl_name,\n\targs=[quote(remote_obj.pk)],\n\tcurrent_app=self.model_admin.admin_site.name\n)\nHowever, I don't know if there are any side effects and I have not yet run the full suite of tests on this. Mostly looking for feedback whether I'm on the right track.\n"
}