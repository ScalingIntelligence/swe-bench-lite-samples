2024-07-10 01:38:28,177 - INFO - Environment image sweb.env.x86_64.a33dddf55cdff5d8e23374:latest found for django__django-15790
Building instance image sweb.eval.x86_64.django__django-15790:latest for django__django-15790
2024-07-10 01:38:28,180 - INFO - Image sweb.eval.x86_64.django__django-15790:latest already exists, skipping build.
2024-07-10 01:38:28,180 - INFO - Creating container for django__django-15790...
2024-07-10 01:38:28,220 - INFO - Container for django__django-15790 created: cedab048a1a8850b07d8986fb4f70ceac31b9b6a95d59807025c3681c55e312a
2024-07-10 01:38:28,435 - INFO - Container for django__django-15790 started: cedab048a1a8850b07d8986fb4f70ceac31b9b6a95d59807025c3681c55e312a
2024-07-10 01:38:28,436 - INFO - Intermediate patch for django__django-15790 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_269839/model_name_managed_by_server/django__django-15790/patch.diff, now applying to container...
2024-07-10 01:38:28,822 - INFO - >>>>> Applied Patch:
Checking patch django/core/checks/templates.py...
Applied patch django/core/checks/templates.py cleanly.

2024-07-10 01:38:52,592 - INFO - Git diff before:
diff --git a/django/core/checks/templates.py b/django/core/checks/templates.py
index 5214276987..c19be7d06e 100644
--- a/django/core/checks/templates.py
+++ b/django/core/checks/templates.py
@@ -50,15 +50,22 @@ def check_string_if_invalid_is_string(app_configs, **kwargs):
 @register(Tags.templates)
 def check_for_template_tags_with_the_same_name(app_configs, **kwargs):
     errors = []
-    libraries = defaultdict(list)
+    custom_libraries = defaultdict(list)
+    discovered_libraries = defaultdict(list)
 
     for conf in settings.TEMPLATES:
-        custom_libraries = conf.get("OPTIONS", {}).get("libraries", {})
-        for module_name, module_path in custom_libraries.items():
-            libraries[module_name].append(module_path)
+        conf_custom_libraries = conf.get("OPTIONS", {}).get("libraries", {})
+        for module_name, module_path in conf_custom_libraries.items():
+            custom_libraries[module_name].append(module_path)
 
     for module_name, module_path in get_template_tag_modules():
-        libraries[module_name].append(module_path)
+        discovered_libraries[module_name].append(module_path)
+
+    libraries = defaultdict(list)
+    for library_name, items in custom_libraries.items():
+        libraries[library_name].extend(items)
+    for library_name, items in discovered_libraries.items():
+        libraries[library_name].extend(items)
 
     for library_name, items in libraries.items():
         if len(items) > 1:
2024-07-10 01:38:52,592 - INFO - Eval script for django__django-15790 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_269839/model_name_managed_by_server/django__django-15790/patch.diff, now applying to container...
2024-07-10 01:39:13,150 - INFO - Test output for django__django-15790 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_269839/model_name_managed_by_server/django__django-15790/test_output.txt
2024-07-10 01:39:13,865 - INFO - Git diff after:
diff --git a/django/core/checks/templates.py b/django/core/checks/templates.py
index 5214276987..c19be7d06e 100644
--- a/django/core/checks/templates.py
+++ b/django/core/checks/templates.py
@@ -50,15 +50,22 @@ def check_string_if_invalid_is_string(app_configs, **kwargs):
 @register(Tags.templates)
 def check_for_template_tags_with_the_same_name(app_configs, **kwargs):
     errors = []
-    libraries = defaultdict(list)
+    custom_libraries = defaultdict(list)
+    discovered_libraries = defaultdict(list)
 
     for conf in settings.TEMPLATES:
-        custom_libraries = conf.get("OPTIONS", {}).get("libraries", {})
-        for module_name, module_path in custom_libraries.items():
-            libraries[module_name].append(module_path)
+        conf_custom_libraries = conf.get("OPTIONS", {}).get("libraries", {})
+        for module_name, module_path in conf_custom_libraries.items():
+            custom_libraries[module_name].append(module_path)
 
     for module_name, module_path in get_template_tag_modules():
-        libraries[module_name].append(module_path)
+        discovered_libraries[module_name].append(module_path)
+
+    libraries = defaultdict(list)
+    for library_name, items in custom_libraries.items():
+        libraries[library_name].extend(items)
+    for library_name, items in discovered_libraries.items():
+        libraries[library_name].extend(items)
 
     for library_name, items in libraries.items():
         if len(items) > 1:
2024-07-10 01:39:13,865 - INFO - Grading answer for django__django-15790...
2024-07-10 01:39:13,871 - INFO - report: {'django__django-15790': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_template_tags_same_library_in_installed_apps_libraries (check_framework.test_templates.CheckTemplateTagLibrariesWithSameName)']}, 'PASS_TO_PASS': {'success': ['Error if template loaders are specified and APP_DIRS is True.', 'test_app_dirs_removed (check_framework.test_templates.CheckTemplateSettingsAppDirsTest)', 'test_loaders_removed (check_framework.test_templates.CheckTemplateSettingsAppDirsTest)', 'test_string_if_invalid_both_are_strings (check_framework.test_templates.CheckTemplateStringIfInvalidTest)', 'test_string_if_invalid_first_is_string (check_framework.test_templates.CheckTemplateStringIfInvalidTest)', 'test_string_if_invalid_not_specified (check_framework.test_templates.CheckTemplateStringIfInvalidTest)', 'test_string_if_invalid_not_string (check_framework.test_templates.CheckTemplateStringIfInvalidTest)', 'test_template_tags_with_different_library_name (check_framework.test_templates.CheckTemplateTagLibrariesWithSameName)', 'test_template_tags_with_different_name (check_framework.test_templates.CheckTemplateTagLibrariesWithSameName)', 'test_template_tags_with_same_library_name (check_framework.test_templates.CheckTemplateTagLibrariesWithSameName)', 'test_template_tags_with_same_library_name_and_module_name (check_framework.test_templates.CheckTemplateTagLibrariesWithSameName)', 'test_template_tags_with_same_name (check_framework.test_templates.CheckTemplateTagLibrariesWithSameName)'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-15790: resolved: False
2024-07-10 01:39:13,871 - INFO - Attempting to stop container sweb.eval.django__django-15790.evaluation_269839...
2024-07-10 01:39:14,084 - INFO - Attempting to remove container sweb.eval.django__django-15790.evaluation_269839...
2024-07-10 01:39:14,178 - INFO - Container sweb.eval.django__django-15790.evaluation_269839 removed.
