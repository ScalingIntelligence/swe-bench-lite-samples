2024-07-03 19:21:22,675 - INFO - Environment image sweb.env.x86_64.c795f4b88616b8462021ed:latest found for sympy__sympy-13437
Building instance image sweb.eval.x86_64.sympy__sympy-13437:latest for sympy__sympy-13437
2024-07-03 19:21:22,676 - INFO - Image sweb.eval.x86_64.sympy__sympy-13437:latest already exists, skipping build.
2024-07-03 19:21:22,676 - INFO - Creating container for sympy__sympy-13437...
2024-07-03 19:21:23,777 - INFO - Container for sympy__sympy-13437 created: 032abf3d147dec50ad48352b362f7c58cb2a8af027b4e7117d4b4f3120dba1a1
2024-07-03 19:22:47,791 - INFO - Container for sympy__sympy-13437 started: 032abf3d147dec50ad48352b362f7c58cb2a8af027b4e7117d4b4f3120dba1a1
2024-07-03 19:22:47,792 - INFO - Intermediate patch for sympy__sympy-13437 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_192893/model_name_managed_by_server/sympy__sympy-13437/patch.diff, now applying to container...
2024-07-03 19:22:48,310 - INFO - >>>>> Applied Patch:
Checking patch sympy/functions/combinatorial/numbers.py...
Checking patch sympy/series/limits.py...
Applied patch sympy/functions/combinatorial/numbers.py cleanly.
Applied patch sympy/series/limits.py cleanly.

2024-07-03 19:22:48,714 - INFO - Git diff before:
diff --git a/sympy/functions/combinatorial/numbers.py b/sympy/functions/combinatorial/numbers.py
index 896729ac87..48d5b3b030 100644
--- a/sympy/functions/combinatorial/numbers.py
+++ b/sympy/functions/combinatorial/numbers.py
@@ -432,16 +432,16 @@ def _bell_incomplete_poly(n, k, symbols):
             a = a * (n - m) / m
         return expand_mul(s)
 
-    @classmethod
-    def eval(cls, n, k_sym=None, symbols=None):
-        if n.is_Integer and n.is_nonnegative:
-            if k_sym is None:
-                return Integer(cls._bell(int(n)))
-            elif symbols is None:
-                return cls._bell_poly(int(n)).subs(_sym, k_sym)
-            else:
-                r = cls._bell_incomplete_poly(int(n), int(k_sym), symbols)
-                return r
+@classmethod
+def eval(cls, n, k_sym=None, symbols=None):
+    if n.is_Integer and n.is_nonnegative:
+        if k_sym is None:
+            return Integer(cls._bell(int(n)))
+        elif symbols is None:
+            return cls._bell_poly(int(n)).subs(_sym, k_sym)
+        else:
+            r = cls._bell_incomplete_poly(int(n), int(k_sym), symbols)
+            return r
 
     def _eval_rewrite_as_Sum(self, n, k_sym=None, symbols=None):
         from sympy import Sum
diff --git a/sympy/series/limits.py b/sympy/series/limits.py
index bfc0d7ecf3..f5e8dd763b 100644
--- a/sympy/series/limits.py
+++ b/sympy/series/limits.py
@@ -46,6 +46,11 @@ def limit(e, z, z0, dir="+"):
     Gruntz algorithm (see the gruntz() function).
     """
 
+    from sympy.functions.combinatorial.numbers import bell
+
+    if isinstance(e, bell) and z == e.args[0] and z0 == S.Infinity:
+        return S.Infinity
+
     return Limit(e, z, z0, dir).doit(deep=False)
2024-07-03 19:22:48,714 - INFO - Eval script for sympy__sympy-13437 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_192893/model_name_managed_by_server/sympy__sympy-13437/patch.diff, now applying to container...
2024-07-03 19:23:06,112 - INFO - Test output for sympy__sympy-13437 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_192893/model_name_managed_by_server/sympy__sympy-13437/test_output.txt
2024-07-03 19:23:06,173 - INFO - Git diff after:
diff --git a/sympy/functions/combinatorial/numbers.py b/sympy/functions/combinatorial/numbers.py
index 896729ac87..48d5b3b030 100644
--- a/sympy/functions/combinatorial/numbers.py
+++ b/sympy/functions/combinatorial/numbers.py
@@ -432,16 +432,16 @@ def _bell_incomplete_poly(n, k, symbols):
             a = a * (n - m) / m
         return expand_mul(s)
 
-    @classmethod
-    def eval(cls, n, k_sym=None, symbols=None):
-        if n.is_Integer and n.is_nonnegative:
-            if k_sym is None:
-                return Integer(cls._bell(int(n)))
-            elif symbols is None:
-                return cls._bell_poly(int(n)).subs(_sym, k_sym)
-            else:
-                r = cls._bell_incomplete_poly(int(n), int(k_sym), symbols)
-                return r
+@classmethod
+def eval(cls, n, k_sym=None, symbols=None):
+    if n.is_Integer and n.is_nonnegative:
+        if k_sym is None:
+            return Integer(cls._bell(int(n)))
+        elif symbols is None:
+            return cls._bell_poly(int(n)).subs(_sym, k_sym)
+        else:
+            r = cls._bell_incomplete_poly(int(n), int(k_sym), symbols)
+            return r
 
     def _eval_rewrite_as_Sum(self, n, k_sym=None, symbols=None):
         from sympy import Sum
diff --git a/sympy/series/limits.py b/sympy/series/limits.py
index bfc0d7ecf3..f5e8dd763b 100644
--- a/sympy/series/limits.py
+++ b/sympy/series/limits.py
@@ -46,6 +46,11 @@ def limit(e, z, z0, dir="+"):
     Gruntz algorithm (see the gruntz() function).
     """
 
+    from sympy.functions.combinatorial.numbers import bell
+
+    if isinstance(e, bell) and z == e.args[0] and z0 == S.Infinity:
+        return S.Infinity
+
     return Limit(e, z, z0, dir).doit(deep=False)
2024-07-03 19:23:06,174 - INFO - Grading answer for sympy__sympy-13437...
2024-07-03 19:23:06,183 - INFO - report: {'sympy__sympy-13437': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_bell']}, 'PASS_TO_PASS': {'success': ['test_bernoulli', 'test_fibonacci', 'test_harmonic', 'test_harmonic_rational', 'test_harmonic_evalf', 'test_harmonic_rewrite_polygamma', 'test_harmonic_rewrite_sum', 'test_euler', 'test_euler_odd', 'test_euler_polynomials', 'test_euler_polynomial_rewrite', 'test_catalan', 'test_genocchi', 'test_issue_8496'], 'failure': ['test_nC_nP_nT']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for sympy__sympy-13437: resolved: False
2024-07-03 19:23:06,184 - INFO - Attempting to stop container sweb.eval.sympy__sympy-13437.evaluation_192893...
2024-07-03 19:23:09,318 - INFO - Attempting to remove container sweb.eval.sympy__sympy-13437.evaluation_192893...
2024-07-03 19:23:09,858 - INFO - Container sweb.eval.sympy__sympy-13437.evaluation_192893 removed.
