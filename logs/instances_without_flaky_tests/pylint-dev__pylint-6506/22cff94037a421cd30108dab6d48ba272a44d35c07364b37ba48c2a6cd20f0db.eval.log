2024-07-03 12:42:06,870 - INFO - Environment image sweb.env.x86_64.e3afd7f04b325a4de4982d:latest found for pylint-dev__pylint-6506
Building instance image sweb.eval.x86_64.pylint-dev__pylint-6506:latest for pylint-dev__pylint-6506
2024-07-03 12:42:06,872 - INFO - Image sweb.eval.x86_64.pylint-dev__pylint-6506:latest already exists, skipping build.
2024-07-03 12:42:06,872 - INFO - Creating container for pylint-dev__pylint-6506...
2024-07-03 12:42:07,836 - INFO - Container for pylint-dev__pylint-6506 created: cfcb6e20966e076343a3c1759ba581ce914db4265f17499ed304cfc6a2d98ce3
2024-07-03 12:42:09,737 - INFO - Container for pylint-dev__pylint-6506 started: cfcb6e20966e076343a3c1759ba581ce914db4265f17499ed304cfc6a2d98ce3
2024-07-03 12:42:09,737 - INFO - Intermediate patch for pylint-dev__pylint-6506 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_161726/model_name_managed_by_server/pylint-dev__pylint-6506/patch.diff, now applying to container...
2024-07-03 12:42:09,918 - INFO - >>>>> Applied Patch:
Checking patch pylint/config/arguments_manager.py...
Applied patch pylint/config/arguments_manager.py cleanly.

2024-07-03 12:42:10,177 - INFO - Git diff before:
diff --git a/pylint/config/arguments_manager.py b/pylint/config/arguments_manager.py
index f5bd88e3e..66361e146 100644
--- a/pylint/config/arguments_manager.py
+++ b/pylint/config/arguments_manager.py
@@ -247,7 +247,10 @@ class _ArgumentsManager:
             if opt.startswith("--"):
                 unrecognized_options.append(opt[2:])
         if unrecognized_options:
-            raise _UnrecognizedOptionError(options=unrecognized_options)
+            msg = ", ".join(unrecognized_options)
+            print(f"Command line: unrecognized option found: {msg} (unrecognized-option)")
+            print(f"usage: {self._arg_parser.usage}")
+            return
 
     def _parse_command_line_configuration(
         self, arguments: Sequence[str] | None = None
@@ -259,6 +262,18 @@ class _ArgumentsManager:
             arguments, self.config
         )
 
+        unrecognized_options: list[str] = []
+        for opt in parsed_args:
+            if opt.startswith("--"):
+                unrecognized_options.append(opt[2:])
+            elif opt.startswith("-"):
+                unrecognized_options.append(opt[1:])
+        if unrecognized_options:
+            msg = ", ".join(unrecognized_options)
+            print(f"Command line: unrecognized option found: {msg} (unrecognized-option)")
+            print(f"usage: {self._arg_parser.usage}")
+            return []
+
         return parsed_args
 
     def reset_parsers(self, usage: str = "") -> None:  # pragma: no cover
2024-07-03 12:42:10,177 - INFO - Eval script for pylint-dev__pylint-6506 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_161726/model_name_managed_by_server/pylint-dev__pylint-6506/patch.diff, now applying to container...
2024-07-03 12:42:14,672 - INFO - Test output for pylint-dev__pylint-6506 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_161726/model_name_managed_by_server/pylint-dev__pylint-6506/test_output.txt
2024-07-03 12:42:14,721 - INFO - Git diff after:
diff --git a/pylint/config/arguments_manager.py b/pylint/config/arguments_manager.py
index f5bd88e3e..66361e146 100644
--- a/pylint/config/arguments_manager.py
+++ b/pylint/config/arguments_manager.py
@@ -247,7 +247,10 @@ class _ArgumentsManager:
             if opt.startswith("--"):
                 unrecognized_options.append(opt[2:])
         if unrecognized_options:
-            raise _UnrecognizedOptionError(options=unrecognized_options)
+            msg = ", ".join(unrecognized_options)
+            print(f"Command line: unrecognized option found: {msg} (unrecognized-option)")
+            print(f"usage: {self._arg_parser.usage}")
+            return
 
     def _parse_command_line_configuration(
         self, arguments: Sequence[str] | None = None
@@ -259,6 +262,18 @@ class _ArgumentsManager:
             arguments, self.config
         )
 
+        unrecognized_options: list[str] = []
+        for opt in parsed_args:
+            if opt.startswith("--"):
+                unrecognized_options.append(opt[2:])
+            elif opt.startswith("-"):
+                unrecognized_options.append(opt[1:])
+        if unrecognized_options:
+            msg = ", ".join(unrecognized_options)
+            print(f"Command line: unrecognized option found: {msg} (unrecognized-option)")
+            print(f"usage: {self._arg_parser.usage}")
+            return []
+
         return parsed_args
 
     def reset_parsers(self, usage: str = "") -> None:  # pragma: no cover
2024-07-03 12:42:14,721 - INFO - Grading answer for pylint-dev__pylint-6506...
2024-07-03 12:42:14,722 - INFO - report: {'pylint-dev__pylint-6506': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['tests/config/test_config.py::test_unknown_option_name', 'tests/config/test_config.py::test_unknown_short_option_name']}, 'PASS_TO_PASS': {'success': ['tests/config/test_config.py::test_can_read_toml_env_variable', 'tests/config/test_config.py::test_unknown_message_id', 'tests/config/test_config.py::test_unknown_confidence', 'tests/config/test_config.py::test_unknown_yes_no', 'tests/config/test_config.py::test_unknown_py_version', 'tests/config/test_config.py::test_short_verbose'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for pylint-dev__pylint-6506: resolved: False
2024-07-03 12:42:14,723 - INFO - Attempting to stop container sweb.eval.pylint-dev__pylint-6506.evaluation_161726...
2024-07-03 12:42:15,447 - INFO - Attempting to remove container sweb.eval.pylint-dev__pylint-6506.evaluation_161726...
2024-07-03 12:42:15,571 - INFO - Container sweb.eval.pylint-dev__pylint-6506.evaluation_161726 removed.
