2024-07-03 13:25:03,640 - INFO - Environment image sweb.env.x86_64.e3afd7f04b325a4de4982d:latest found for pylint-dev__pylint-6506
Building instance image sweb.eval.x86_64.pylint-dev__pylint-6506:latest for pylint-dev__pylint-6506
2024-07-03 13:25:03,642 - INFO - Image sweb.eval.x86_64.pylint-dev__pylint-6506:latest already exists, skipping build.
2024-07-03 13:25:03,642 - INFO - Creating container for pylint-dev__pylint-6506...
2024-07-03 13:25:04,195 - INFO - Container for pylint-dev__pylint-6506 created: b7cd77a2bf01750da9f60b47e4a278e4fb97fe8a41c92f4f7b696117844d5b43
2024-07-03 13:25:04,407 - INFO - Container for pylint-dev__pylint-6506 started: b7cd77a2bf01750da9f60b47e4a278e4fb97fe8a41c92f4f7b696117844d5b43
2024-07-03 13:25:04,407 - INFO - Intermediate patch for pylint-dev__pylint-6506 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_165376/model_name_managed_by_server/pylint-dev__pylint-6506/patch.diff, now applying to container...
2024-07-03 13:25:04,618 - INFO - >>>>> Applied Patch:
Checking patch pylint/config/option_parser.py...
Applied patch pylint/config/option_parser.py cleanly.

2024-07-03 13:25:06,089 - INFO - Git diff before:
diff --git a/pylint/config/option_parser.py b/pylint/config/option_parser.py
index b58fad3a4..b5fe6558b 100644
--- a/pylint/config/option_parser.py
+++ b/pylint/config/option_parser.py
@@ -17,37 +17,11 @@ def _level_options(group, outputlevel):
     ]
 
 
-class OptionParser(optparse.OptionParser):
-    def __init__(self, option_class, *args, **kwargs):
-        # TODO: 3.0: Remove deprecated class
-        warnings.warn(
-            "OptionParser has been deprecated and will be removed in pylint 3.0",
-            DeprecationWarning,
-        )
-        super().__init__(option_class=Option, *args, **kwargs)
-
-    def format_option_help(self, formatter=None):
-        if formatter is None:
-            formatter = self.formatter
-        outputlevel = getattr(formatter, "output_level", 0)
-        formatter.store_option_strings(self)
-        result = [formatter.format_heading("Options")]
-        formatter.indent()
-        if self.option_list:
-            result.append(optparse.OptionContainer.format_option_help(self, formatter))
-            result.append("\n")
-        for group in self.option_groups:
-            if group.level <= outputlevel and (
-                group.description or _level_options(group, outputlevel)
-            ):
-                result.append(group.format_help(formatter))
-                result.append("\n")
-        formatter.dedent()
-        # Drop the last "\n", or the header if no options or option groups:
-        return "".join(result[:-1])
+import sys
 
     def _match_long_opt(self, opt):  # pragma: no cover # Unused
         """Disable abbreviations."""
         if opt not in self._long_opt:
-            raise optparse.BadOptionError(opt)
+            print(f"error: unrecognized arguments: {opt}")
+            sys.exit(1)
         return opt
2024-07-03 13:25:06,090 - INFO - Eval script for pylint-dev__pylint-6506 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_165376/model_name_managed_by_server/pylint-dev__pylint-6506/patch.diff, now applying to container...
2024-07-03 13:25:10,603 - INFO - Test output for pylint-dev__pylint-6506 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_165376/model_name_managed_by_server/pylint-dev__pylint-6506/test_output.txt
2024-07-03 13:25:10,650 - INFO - Git diff after:
diff --git a/pylint/config/option_parser.py b/pylint/config/option_parser.py
index b58fad3a4..b5fe6558b 100644
--- a/pylint/config/option_parser.py
+++ b/pylint/config/option_parser.py
@@ -17,37 +17,11 @@ def _level_options(group, outputlevel):
     ]
 
 
-class OptionParser(optparse.OptionParser):
-    def __init__(self, option_class, *args, **kwargs):
-        # TODO: 3.0: Remove deprecated class
-        warnings.warn(
-            "OptionParser has been deprecated and will be removed in pylint 3.0",
-            DeprecationWarning,
-        )
-        super().__init__(option_class=Option, *args, **kwargs)
-
-    def format_option_help(self, formatter=None):
-        if formatter is None:
-            formatter = self.formatter
-        outputlevel = getattr(formatter, "output_level", 0)
-        formatter.store_option_strings(self)
-        result = [formatter.format_heading("Options")]
-        formatter.indent()
-        if self.option_list:
-            result.append(optparse.OptionContainer.format_option_help(self, formatter))
-            result.append("\n")
-        for group in self.option_groups:
-            if group.level <= outputlevel and (
-                group.description or _level_options(group, outputlevel)
-            ):
-                result.append(group.format_help(formatter))
-                result.append("\n")
-        formatter.dedent()
-        # Drop the last "\n", or the header if no options or option groups:
-        return "".join(result[:-1])
+import sys
 
     def _match_long_opt(self, opt):  # pragma: no cover # Unused
         """Disable abbreviations."""
         if opt not in self._long_opt:
-            raise optparse.BadOptionError(opt)
+            print(f"error: unrecognized arguments: {opt}")
+            sys.exit(1)
         return opt
2024-07-03 13:25:10,650 - INFO - Grading answer for pylint-dev__pylint-6506...
2024-07-03 13:25:10,651 - INFO - report: {'pylint-dev__pylint-6506': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['tests/config/test_config.py::test_unknown_option_name', 'tests/config/test_config.py::test_unknown_short_option_name']}, 'PASS_TO_PASS': {'success': [], 'failure': ['tests/config/test_config.py::test_can_read_toml_env_variable', 'tests/config/test_config.py::test_unknown_message_id', 'tests/config/test_config.py::test_unknown_confidence', 'tests/config/test_config.py::test_unknown_yes_no', 'tests/config/test_config.py::test_unknown_py_version', 'tests/config/test_config.py::test_short_verbose']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for pylint-dev__pylint-6506: resolved: False
2024-07-03 13:25:10,651 - INFO - Attempting to stop container sweb.eval.pylint-dev__pylint-6506.evaluation_165376...
2024-07-03 13:25:11,496 - INFO - Attempting to remove container sweb.eval.pylint-dev__pylint-6506.evaluation_165376...
2024-07-03 13:25:11,528 - INFO - Container sweb.eval.pylint-dev__pylint-6506.evaluation_165376 removed.
