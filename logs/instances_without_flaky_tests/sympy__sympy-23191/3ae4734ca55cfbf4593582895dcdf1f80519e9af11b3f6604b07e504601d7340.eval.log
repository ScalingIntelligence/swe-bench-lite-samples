2024-07-03 21:43:50,449 - INFO - Environment image sweb.env.x86_64.c795f4b88616b8462021ed:latest found for sympy__sympy-23191
Building instance image sweb.eval.x86_64.sympy__sympy-23191:latest for sympy__sympy-23191
2024-07-03 21:43:50,452 - INFO - Image sweb.eval.x86_64.sympy__sympy-23191:latest already exists, skipping build.
2024-07-03 21:43:50,453 - INFO - Creating container for sympy__sympy-23191...
2024-07-03 21:43:52,953 - INFO - Container for sympy__sympy-23191 created: 6170dbd9b94c16577cbab9d65da69e8c67610e9d651939ecc70531d43df10ce1
2024-07-03 21:45:58,999 - INFO - Container for sympy__sympy-23191 started: 6170dbd9b94c16577cbab9d65da69e8c67610e9d651939ecc70531d43df10ce1
2024-07-03 21:45:59,007 - INFO - Intermediate patch for sympy__sympy-23191 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_204720/model_name_managed_by_server/sympy__sympy-23191/patch.diff, now applying to container...
2024-07-03 21:45:59,551 - INFO - >>>>> Applied Patch:
Checking patch sympy/printing/pretty/pretty.py...
Applied patch sympy/printing/pretty/pretty.py cleanly.

2024-07-03 21:46:00,173 - INFO - Git diff before:
diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py
index 66461181d0..30d5b35fec 100644
--- a/sympy/printing/pretty/pretty.py
+++ b/sympy/printing/pretty/pretty.py
@@ -1121,30 +1121,25 @@ def _print_BasisDependent(self, expr):
                               k._pretty_form)
                 #For a general expr
                 else:
-                    #We always wrap the measure numbers in
-                    #parentheses
-                    arg_str = self._print(
-                        v).parens()[0]
-
+                    arg_str = self._print(v)
+                    if '\n' in arg_str or ('frac' in arg_str and self._use_unicode):
+                        arg_str = arg_str.parens()[0]
                     o1.append(arg_str + ' ' + k._pretty_form)
                 vectstrs.append(k._pretty_form)
 
-        #outstr = u("").join(o1)
         if o1[0].startswith(" + "):
             o1[0] = o1[0][3:]
         elif o1[0].startswith(" "):
             o1[0] = o1[0][1:]
-        #Fixing the newlines
         lengths = []
         strs = ['']
         flag = []
         for i, partstr in enumerate(o1):
             flag.append(0)
-            # XXX: What is this hack?
             if '\n' in partstr:
                 tempstr = partstr
                 tempstr = tempstr.replace(vectstrs[i], '')
-                if '\N{right parenthesis extension}' in tempstr:   # If scalar is a fraction
+                if '\N{right parenthesis extension}' in tempstr:
                     for paren in range(len(tempstr)):
                         flag[i] = 1
                         if tempstr[paren] == '\N{right parenthesis extension}':
2024-07-03 21:46:00,173 - INFO - Eval script for sympy__sympy-23191 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_204720/model_name_managed_by_server/sympy__sympy-23191/patch.diff, now applying to container...
2024-07-03 21:46:11,260 - INFO - Test output for sympy__sympy-23191 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_204720/model_name_managed_by_server/sympy__sympy-23191/test_output.txt
2024-07-03 21:46:11,313 - INFO - Git diff after:
diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py
index 66461181d0..30d5b35fec 100644
--- a/sympy/printing/pretty/pretty.py
+++ b/sympy/printing/pretty/pretty.py
@@ -1121,30 +1121,25 @@ def _print_BasisDependent(self, expr):
                               k._pretty_form)
                 #For a general expr
                 else:
-                    #We always wrap the measure numbers in
-                    #parentheses
-                    arg_str = self._print(
-                        v).parens()[0]
-
+                    arg_str = self._print(v)
+                    if '\n' in arg_str or ('frac' in arg_str and self._use_unicode):
+                        arg_str = arg_str.parens()[0]
                     o1.append(arg_str + ' ' + k._pretty_form)
                 vectstrs.append(k._pretty_form)
 
-        #outstr = u("").join(o1)
         if o1[0].startswith(" + "):
             o1[0] = o1[0][3:]
         elif o1[0].startswith(" "):
             o1[0] = o1[0][1:]
-        #Fixing the newlines
         lengths = []
         strs = ['']
         flag = []
         for i, partstr in enumerate(o1):
             flag.append(0)
-            # XXX: What is this hack?
             if '\n' in partstr:
                 tempstr = partstr
                 tempstr = tempstr.replace(vectstrs[i], '')
-                if '\N{right parenthesis extension}' in tempstr:   # If scalar is a fraction
+                if '\N{right parenthesis extension}' in tempstr:
                     for paren in range(len(tempstr)):
                         flag[i] = 1
                         if tempstr[paren] == '\N{right parenthesis extension}':
2024-07-03 21:46:11,313 - INFO - Grading answer for sympy__sympy-23191...
2024-07-03 21:46:11,314 - INFO - report: {'sympy__sympy-23191': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_issue_23058']}, 'PASS_TO_PASS': {'success': ['test_str_printing', 'test_latex_printing'], 'failure': ['test_pretty_print_unicode_v']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for sympy__sympy-23191: resolved: False
2024-07-03 21:46:11,314 - INFO - Attempting to stop container sweb.eval.sympy__sympy-23191.evaluation_204720...
2024-07-03 21:46:19,737 - INFO - Attempting to remove container sweb.eval.sympy__sympy-23191.evaluation_204720...
2024-07-03 21:46:21,513 - INFO - Container sweb.eval.sympy__sympy-23191.evaluation_204720 removed.
