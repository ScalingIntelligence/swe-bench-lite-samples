2024-07-03 16:22:53,086 - INFO - Environment image sweb.env.x86_64.7037e8c448a4b8ebfe9b13:latest found for matplotlib__matplotlib-23476
Building instance image sweb.eval.x86_64.matplotlib__matplotlib-23476:latest for matplotlib__matplotlib-23476
2024-07-03 16:22:53,087 - INFO - Image sweb.eval.x86_64.matplotlib__matplotlib-23476:latest already exists, skipping build.
2024-07-03 16:22:53,087 - INFO - Creating container for matplotlib__matplotlib-23476...
2024-07-03 16:22:55,148 - INFO - Container for matplotlib__matplotlib-23476 created: 1f458b6bd2cb0b2a8af6b51b8fc757c2af1eb2713a394e66fd760cee4045fcd8
2024-07-03 16:23:08,000 - INFO - Container for matplotlib__matplotlib-23476 started: 1f458b6bd2cb0b2a8af6b51b8fc757c2af1eb2713a394e66fd760cee4045fcd8
2024-07-03 16:23:08,001 - INFO - Intermediate patch for matplotlib__matplotlib-23476 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_177785/model_name_managed_by_server/matplotlib__matplotlib-23476/patch.diff, now applying to container...
2024-07-03 16:23:08,873 - INFO - >>>>> Applied Patch:
Checking patch lib/matplotlib/figure.py...
Applied patch lib/matplotlib/figure.py cleanly.

2024-07-03 16:23:10,008 - INFO - Git diff before:
diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py
index c55864243a..02466bfc8f 100644
--- a/lib/matplotlib/figure.py
+++ b/lib/matplotlib/figure.py
@@ -3032,31 +3032,34 @@ class Figure(FigureBase):
             state['_restore_to_pylab'] = True
         return state
 
-    def __setstate__(self, state):
-        version = state.pop('__mpl_version__')
-        restore_to_pylab = state.pop('_restore_to_pylab', False)
-
-        if version != mpl.__version__:
-            _api.warn_external(
-                f"This figure was saved with matplotlib version {version} and "
-                f"is unlikely to function correctly.")
-
-        self.__dict__ = state
-
-        # re-initialise some of the unstored state information
-        FigureCanvasBase(self)  # Set self.canvas.
-
-        if restore_to_pylab:
-            # lazy import to avoid circularity
-            import matplotlib.pyplot as plt
-            import matplotlib._pylab_helpers as pylab_helpers
-            allnums = plt.get_fignums()
-            num = max(allnums) + 1 if allnums else 1
-            mgr = plt._backend_mod.new_figure_manager_given_figure(num, self)
-            pylab_helpers.Gcf._set_new_active_manager(mgr)
-            plt.draw_if_interactive()
-
-        self.stale = True
+def __setstate__(self, state):
+    version = state.pop('__mpl_version__')
+    restore_to_pylab = state.pop('_restore_to_pylab', False)
+
+    if version != mpl.__version__:
+        _api.warn_external(
+            f"This figure was saved with matplotlib version {version} and "
+            f"is unlikely to function correctly.")
+
+    self.__dict__ = state
+
+    # Ensure the DPI is not modified during the unpickling process
+    self._dpi = state.get('_dpi', mpl.rcParams['figure.dpi'])
+
+    # Re-initialize some of the unstored state information
+    FigureCanvasBase(self)  # Set self.canvas.
+
+    if restore_to_pylab:
+        # lazy import to avoid circularity
+        import matplotlib.pyplot as plt
+        import matplotlib._pylab_helpers as pylab_helpers
+        allnums = plt.get_fignums()
+        num = max(allnums) + 1 if allnums else 1
+        mgr = plt._backend_mod.new_figure_manager_given_figure(num, self)
+        pylab_helpers.Gcf._set_new_active_manager(mgr)
+        plt.draw_if_interactive()
+
+    self.stale = True
 
     def add_axobserver(self, func):
         """Whenever the Axes state change, ``func(self)`` will be called."""
2024-07-03 16:23:10,009 - INFO - Eval script for matplotlib__matplotlib-23476 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_177785/model_name_managed_by_server/matplotlib__matplotlib-23476/patch.diff, now applying to container...
2024-07-03 16:23:20,606 - INFO - Test output for matplotlib__matplotlib-23476 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_177785/model_name_managed_by_server/matplotlib__matplotlib-23476/test_output.txt
2024-07-03 16:23:44,306 - INFO - Attempting to stop container sweb.eval.matplotlib__matplotlib-23476.evaluation_177785...
2024-07-03 16:23:44,311 - INFO - Failed to stop container sweb.eval.matplotlib__matplotlib-23476.evaluation_177785: 409 Client Error for http+docker://localhost/v1.43/containers/1f458b6bd2cb0b2a8af6b51b8fc757c2af1eb2713a394e66fd760cee4045fcd8/kill: Conflict ("Cannot kill container: 1f458b6bd2cb0b2a8af6b51b8fc757c2af1eb2713a394e66fd760cee4045fcd8: Container 1f458b6bd2cb0b2a8af6b51b8fc757c2af1eb2713a394e66fd760cee4045fcd8 is not running"). Trying to forcefully kill...
2024-07-03 16:23:44,316 - INFO - PID for container sweb.eval.matplotlib__matplotlib-23476.evaluation_177785: 0 - not killing.
2024-07-03 16:23:44,316 - INFO - Attempting to remove container sweb.eval.matplotlib__matplotlib-23476.evaluation_177785...
2024-07-03 16:23:46,052 - INFO - Container sweb.eval.matplotlib__matplotlib-23476.evaluation_177785 removed.
