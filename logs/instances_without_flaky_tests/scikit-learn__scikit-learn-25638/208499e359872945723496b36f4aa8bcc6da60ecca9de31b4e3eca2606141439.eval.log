2024-07-03 17:47:18,766 - INFO - Environment image sweb.env.x86_64.27dd9791e13f5c857a09f9:latest found for scikit-learn__scikit-learn-25638
Building instance image sweb.eval.x86_64.scikit-learn__scikit-learn-25638:latest for scikit-learn__scikit-learn-25638
2024-07-03 17:47:18,768 - INFO - Image sweb.eval.x86_64.scikit-learn__scikit-learn-25638:latest already exists, skipping build.
2024-07-03 17:47:18,768 - INFO - Creating container for scikit-learn__scikit-learn-25638...
2024-07-03 17:47:19,915 - INFO - Container for scikit-learn__scikit-learn-25638 created: 1d7342a954a42f2569bd5ef60a4ad4542da89f9992aa370adf89a4c7c9da5916
2024-07-03 17:47:39,690 - INFO - Container for scikit-learn__scikit-learn-25638 started: 1d7342a954a42f2569bd5ef60a4ad4542da89f9992aa370adf89a4c7c9da5916
2024-07-03 17:47:39,690 - INFO - Intermediate patch for scikit-learn__scikit-learn-25638 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_184636/model_name_managed_by_server/scikit-learn__scikit-learn-25638/patch.diff, now applying to container...
2024-07-03 17:47:40,348 - INFO - >>>>> Applied Patch:
Checking patch sklearn/utils/multiclass.py...
Applied patch sklearn/utils/multiclass.py cleanly.

2024-07-03 17:47:41,043 - INFO - Git diff before:
diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py
index 5eaef2fde..ac0755353 100644
--- a/sklearn/utils/multiclass.py
+++ b/sklearn/utils/multiclass.py
@@ -217,15 +217,19 @@ def type_of_target(y, input_name=""):
         * ``multiclass`` of integers is more specific but compatible with
           ``continuous``.
         * ``multilabel-indicator`` is more specific but compatible with
-          ``multiclass-multioutput``.
+multiclass-multioutput.
 
-    Parameters
-    ----------
-    y : {array-like, sparse matrix}
-        Target values. If a sparse matrix, `y` is expected to be a
-        CSR/CSC matrix.
+Parameters
+----------
+y : {array-like, sparse matrix}
+    Target values. If a sparse matrix, `y` is expected to be a
+    CSR/CSC matrix. We don't allow:
+        - mix of label indicator matrix and anything else,
+          because there are no explicit labels)
+        - mix of label indicator matrices of different sizes
+        - mix of string and integer labels
 
-    input_name : str, default=""
+input_name : str, default=""
         The data name used to construct the error message.
 
         .. versionadded:: 1.1.0
@@ -279,22 +283,18 @@ def type_of_target(y, input_name=""):
     >>> type_of_target(np.array([[0, 1], [1, 1]]))
     'multilabel-indicator'
     """
-    xp, is_array_api = get_namespace(y)
-    valid = (
-        (isinstance(y, Sequence) or issparse(y) or hasattr(y, "__array__"))
-        and not isinstance(y, str)
-        or is_array_api
+xp, is_array_api = get_namespace(y)
+valid = (
+    (isinstance(y, Sequence) or issparse(y) or hasattr(y, "__array__"))
+    and not isinstance(y, str)
+    or is_array_api
+)
+
+if not valid:
+    raise ValueError(
+        "Expected array-like (array or non-string sequence), got %r" % y
     )
 
-    if not valid:
-        raise ValueError(
-            "Expected array-like (array or non-string sequence), got %r" % y
-        )
-
-    sparse_pandas = y.__class__.__name__ in ["SparseSeries", "SparseArray"]
-    if sparse_pandas:
-        raise ValueError("y cannot be class 'SparseSeries' or 'SparseArray'")
-
     if is_multilabel(y):
         return "multilabel-indicator"
 
@@ -302,15 +302,15 @@ def type_of_target(y, input_name=""):
     # https://numpy.org/neps/nep-0034-infer-dtype-is-object.html
     # We therefore catch both deprecation (NumPy < 1.24) warning and
     # value error (NumPy >= 1.24).
-    with warnings.catch_warnings():
-        warnings.simplefilter("error", np.VisibleDeprecationWarning)
-        if not issparse(y):
-            try:
-                y = xp.asarray(y)
-            except (np.VisibleDeprecationWarning, ValueError):
-                # dtype=object should be provided explicitly for ragged arrays,
-                # see NEP 34
-                y = xp.asarray(y, dtype=object)
+with warnings.catch_warnings():
+    warnings.simplefilter("error", np.VisibleDeprecationWarning)
+    if not issparse(y):
+        try:
+            y = xp.asarray(y, dtype=object) if y.dtype.name in ['Int64', 'Float64', 'boolean'] else xp.asarray(y)
+        except (np.VisibleDeprecationWarning, ValueError):
+            # dtype=object should be provided explicitly for ragged arrays,
+            # see NEP 34
+            y = xp.asarray(y, dtype=object)
 
     # The old sequence of sequences format
     try:
2024-07-03 17:47:41,044 - INFO - Eval script for scikit-learn__scikit-learn-25638 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_184636/model_name_managed_by_server/scikit-learn__scikit-learn-25638/patch.diff, now applying to container...
2024-07-03 17:47:52,402 - INFO - Test output for scikit-learn__scikit-learn-25638 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_184636/model_name_managed_by_server/scikit-learn__scikit-learn-25638/test_output.txt
2024-07-03 17:47:52,441 - INFO - Git diff after:
diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py
index 5eaef2fde..ac0755353 100644
--- a/sklearn/utils/multiclass.py
+++ b/sklearn/utils/multiclass.py
@@ -217,15 +217,19 @@ def type_of_target(y, input_name=""):
         * ``multiclass`` of integers is more specific but compatible with
           ``continuous``.
         * ``multilabel-indicator`` is more specific but compatible with
-          ``multiclass-multioutput``.
+multiclass-multioutput.
 
-    Parameters
-    ----------
-    y : {array-like, sparse matrix}
-        Target values. If a sparse matrix, `y` is expected to be a
-        CSR/CSC matrix.
+Parameters
+----------
+y : {array-like, sparse matrix}
+    Target values. If a sparse matrix, `y` is expected to be a
+    CSR/CSC matrix. We don't allow:
+        - mix of label indicator matrix and anything else,
+          because there are no explicit labels)
+        - mix of label indicator matrices of different sizes
+        - mix of string and integer labels
 
-    input_name : str, default=""
+input_name : str, default=""
         The data name used to construct the error message.
 
         .. versionadded:: 1.1.0
@@ -279,22 +283,18 @@ def type_of_target(y, input_name=""):
     >>> type_of_target(np.array([[0, 1], [1, 1]]))
     'multilabel-indicator'
     """
-    xp, is_array_api = get_namespace(y)
-    valid = (
-        (isinstance(y, Sequence) or issparse(y) or hasattr(y, "__array__"))
-        and not isinstance(y, str)
-        or is_array_api
+xp, is_array_api = get_namespace(y)
+valid = (
+    (isinstance(y, Sequence) or issparse(y) or hasattr(y, "__array__"))
+    and not isinstance(y, str)
+    or is_array_api
+)
+
+if not valid:
+    raise ValueError(
+        "Expected array-like (array or non-string sequence), got %r" % y
     )
 
-    if not valid:
-        raise ValueError(
-            "Expected array-like (array or non-string sequence), got %r" % y
-        )
-
-    sparse_pandas = y.__class__.__name__ in ["SparseSeries", "SparseArray"]
-    if sparse_pandas:
-        raise ValueError("y cannot be class 'SparseSeries' or 'SparseArray'")
-
     if is_multilabel(y):
         return "multilabel-indicator"
 
@@ -302,15 +302,15 @@ def type_of_target(y, input_name=""):
     # https://numpy.org/neps/nep-0034-infer-dtype-is-object.html
     # We therefore catch both deprecation (NumPy < 1.24) warning and
     # value error (NumPy >= 1.24).
-    with warnings.catch_warnings():
-        warnings.simplefilter("error", np.VisibleDeprecationWarning)
-        if not issparse(y):
-            try:
-                y = xp.asarray(y)
-            except (np.VisibleDeprecationWarning, ValueError):
-                # dtype=object should be provided explicitly for ragged arrays,
-                # see NEP 34
-                y = xp.asarray(y, dtype=object)
+with warnings.catch_warnings():
+    warnings.simplefilter("error", np.VisibleDeprecationWarning)
+    if not issparse(y):
+        try:
+            y = xp.asarray(y, dtype=object) if y.dtype.name in ['Int64', 'Float64', 'boolean'] else xp.asarray(y)
+        except (np.VisibleDeprecationWarning, ValueError):
+            # dtype=object should be provided explicitly for ragged arrays,
+            # see NEP 34
+            y = xp.asarray(y, dtype=object)
 
     # The old sequence of sequences format
     try:
2024-07-03 17:47:52,441 - INFO - Grading answer for scikit-learn__scikit-learn-25638...
2024-07-03 17:47:52,447 - INFO - report: {'scikit-learn__scikit-learn-25638': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['sklearn/metrics/tests/test_classification.py::test_confusion_matrix_pandas_nullable[Int64]', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_pandas_nullable[Float64]', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_pandas_nullable[boolean]', 'sklearn/preprocessing/tests/test_label.py::test_label_binarizer_pandas_nullable[Int64]', 'sklearn/preprocessing/tests/test_label.py::test_label_binarizer_pandas_nullable[Float64]', 'sklearn/preprocessing/tests/test_label.py::test_label_binarizer_pandas_nullable[boolean]', 'sklearn/utils/tests/test_multiclass.py::test_type_of_target_pandas_nullable', 'sklearn/utils/tests/test_multiclass.py::test_unique_labels_pandas_nullable[Int64]', 'sklearn/utils/tests/test_multiclass.py::test_unique_labels_pandas_nullable[Float64]', 'sklearn/utils/tests/test_multiclass.py::test_unique_labels_pandas_nullable[boolean]']}, 'PASS_TO_PASS': {'success': [], 'failure': ['sklearn/metrics/tests/test_classification.py::test_classification_report_dictionary_output', 'sklearn/metrics/tests/test_classification.py::test_classification_report_output_dict_empty_input', 'sklearn/metrics/tests/test_classification.py::test_classification_report_zero_division_warning[warn]', 'sklearn/metrics/tests/test_classification.py::test_classification_report_zero_division_warning[0]', 'sklearn/metrics/tests/test_classification.py::test_classification_report_zero_division_warning[1]', 'sklearn/metrics/tests/test_classification.py::test_multilabel_accuracy_score_subset_accuracy', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_binary', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f_binary_single_class', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f_extra_labels', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f_ignored_labels', 'sklearn/metrics/tests/test_classification.py::test_average_precision_score_score_non_binary_class', 'sklearn/metrics/tests/test_classification.py::test_average_precision_score_duplicate_values', 'sklearn/metrics/tests/test_classification.py::test_average_precision_score_tied_values', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_fscore_support_errors', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f_unused_pos_label', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_binary', 'sklearn/metrics/tests/test_classification.py::test_multilabel_confusion_matrix_binary', 'sklearn/metrics/tests/test_classification.py::test_multilabel_confusion_matrix_multiclass', 'sklearn/metrics/tests/test_classification.py::test_multilabel_confusion_matrix_multilabel', 'sklearn/metrics/tests/test_classification.py::test_multilabel_confusion_matrix_errors', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_normalize[true-f-0.333333333]', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_normalize[pred-f-0.333333333]', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_normalize[all-f-0.1111111111]', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_normalize[None-i-2]', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_normalize_single_class', 'sklearn/metrics/tests/test_classification.py::test_likelihood_ratios_warnings[params0-samples', 'sklearn/metrics/tests/test_classification.py::test_likelihood_ratios_warnings[params1-positive_likelihood_ratio', 'sklearn/metrics/tests/test_classification.py::test_likelihood_ratios_warnings[params2-no', 'sklearn/metrics/tests/test_classification.py::test_likelihood_ratios_warnings[params3-negative_likelihood_ratio', 'sklearn/metrics/tests/test_classification.py::test_likelihood_ratios_warnings[params4-no', 'sklearn/metrics/tests/test_classification.py::test_likelihood_ratios_errors[params0-class_likelihood_ratios', 'sklearn/metrics/tests/test_classification.py::test_likelihood_ratios', 'sklearn/metrics/tests/test_classification.py::test_cohen_kappa', 'sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef_nan', 'sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef_against_numpy_corrcoef', 'sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef_against_jurman', 'sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef', 'sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef_multiclass', 'sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef_overflow[100]', 'sklearn/metrics/tests/test_classification.py::test_matthews_corrcoef_overflow[10000]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multiclass', 'sklearn/metrics/tests/test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[samples]', 'sklearn/metrics/tests/test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[micro]', 'sklearn/metrics/tests/test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[macro]', 'sklearn/metrics/tests/test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[weighted]', 'sklearn/metrics/tests/test_classification.py::test_precision_refcall_f1_score_multilabel_unordered_labels[None]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_binary_averaged', 'sklearn/metrics/tests/test_classification.py::test_zero_precision_recall', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_multiclass_subset_labels', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_error[empty', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_error[unknown', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_on_zero_length_input[None]', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_on_zero_length_input[binary]', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_on_zero_length_input[multiclass]', 'sklearn/metrics/tests/test_classification.py::test_confusion_matrix_dtype', 'sklearn/metrics/tests/test_classification.py::test_classification_report_multiclass', 'sklearn/metrics/tests/test_classification.py::test_classification_report_multiclass_balanced', 'sklearn/metrics/tests/test_classification.py::test_classification_report_multiclass_with_label_detection', 'sklearn/metrics/tests/test_classification.py::test_classification_report_multiclass_with_digits', 'sklearn/metrics/tests/test_classification.py::test_classification_report_multiclass_with_string_label', 'sklearn/metrics/tests/test_classification.py::test_classification_report_multiclass_with_unicode_label', 'sklearn/metrics/tests/test_classification.py::test_classification_report_multiclass_with_long_string_label', 'sklearn/metrics/tests/test_classification.py::test_classification_report_labels_target_names_unequal_length', 'sklearn/metrics/tests/test_classification.py::test_classification_report_no_labels_target_names_unequal_length', 'sklearn/metrics/tests/test_classification.py::test_multilabel_classification_report', 'sklearn/metrics/tests/test_classification.py::test_multilabel_zero_one_loss_subset', 'sklearn/metrics/tests/test_classification.py::test_multilabel_hamming_loss', 'sklearn/metrics/tests/test_classification.py::test_jaccard_score_validation', 'sklearn/metrics/tests/test_classification.py::test_multilabel_jaccard_score', 'sklearn/metrics/tests/test_classification.py::test_multiclass_jaccard_score', 'sklearn/metrics/tests/test_classification.py::test_average_binary_jaccard_score', 'sklearn/metrics/tests/test_classification.py::test_jaccard_score_zero_division_warning', 'sklearn/metrics/tests/test_classification.py::test_jaccard_score_zero_division_set_value[0-0]', 'sklearn/metrics/tests/test_classification.py::test_jaccard_score_zero_division_set_value[1-0.5]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_1', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction[warn]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction[0]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction[1]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[0-macro-1]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[0-micro-1]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[0-weighted-1]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[0-samples-1]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[1-macro-1]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[1-micro-1]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[1-weighted-1]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels[1-samples-1]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels_check_warnings[macro]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels_check_warnings[micro]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels_check_warnings[weighted]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels_check_warnings[samples]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels_average_none[0]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels_average_none[1]', 'sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_no_labels_average_none_warn', 'sklearn/metrics/tests/test_classification.py::test_prf_warnings', 'sklearn/metrics/tests/test_classification.py::test_prf_no_warnings_if_zero_division_set[0]', 'sklearn/metrics/tests/test_classification.py::test_prf_no_warnings_if_zero_division_set[1]', 'sklearn/metrics/tests/test_classification.py::test_recall_warnings[warn]', 'sklearn/metrics/tests/test_classification.py::test_recall_warnings[0]', 'sklearn/metrics/tests/test_classification.py::test_recall_warnings[1]', 'sklearn/metrics/tests/test_classification.py::test_precision_warnings[warn]', 'sklearn/metrics/tests/test_classification.py::test_precision_warnings[0]', 'sklearn/metrics/tests/test_classification.py::test_precision_warnings[1]', 'sklearn/metrics/tests/test_classification.py::test_fscore_warnings[warn]', 'sklearn/metrics/tests/test_classification.py::test_fscore_warnings[0]', 'sklearn/metrics/tests/test_classification.py::test_fscore_warnings[1]', 'sklearn/metrics/tests/test_classification.py::test_prf_average_binary_data_non_binary', 'sklearn/metrics/tests/test_classification.py::test__check_targets', 'sklearn/metrics/tests/test_classification.py::test__check_targets_multiclass_with_both_y_true_and_y_pred_binary', 'sklearn/metrics/tests/test_classification.py::test_hinge_loss_binary', 'sklearn/metrics/tests/test_classification.py::test_hinge_loss_multiclass', 'sklearn/metrics/tests/test_classification.py::test_hinge_loss_multiclass_missing_labels_with_labels_none', 'sklearn/metrics/tests/test_classification.py::test_hinge_loss_multiclass_no_consistent_pred_decision_shape', 'sklearn/metrics/tests/test_classification.py::test_hinge_loss_multiclass_with_missing_labels', 'sklearn/metrics/tests/test_classification.py::test_hinge_loss_multiclass_missing_labels_only_two_unq_in_y_true', 'sklearn/metrics/tests/test_classification.py::test_hinge_loss_multiclass_invariance_lists', 'sklearn/metrics/tests/test_classification.py::test_log_loss', 'sklearn/metrics/tests/test_classification.py::test_log_loss_eps_auto[float64]', 'sklearn/metrics/tests/test_classification.py::test_log_loss_eps_auto_float16', 'sklearn/metrics/tests/test_classification.py::test_log_loss_pandas_input', 'sklearn/metrics/tests/test_classification.py::test_brier_score_loss', 'sklearn/metrics/tests/test_classification.py::test_balanced_accuracy_score_unseen', 'sklearn/metrics/tests/test_classification.py::test_balanced_accuracy_score[y_true0-y_pred0]', 'sklearn/metrics/tests/test_classification.py::test_balanced_accuracy_score[y_true1-y_pred1]', 'sklearn/metrics/tests/test_classification.py::test_balanced_accuracy_score[y_true2-y_pred2]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes0-jaccard_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes0-f1_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes0-metric2]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes0-precision_recall_fscore_support]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes0-precision_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes0-recall_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes0-brier_score_loss]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes1-jaccard_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes1-f1_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes1-metric2]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes1-precision_recall_fscore_support]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes1-precision_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes1-recall_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes1-brier_score_loss]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes2-jaccard_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes2-f1_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes2-metric2]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes2-precision_recall_fscore_support]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes2-precision_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes2-recall_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes2-brier_score_loss]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes3-jaccard_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes3-f1_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes3-metric2]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes3-precision_recall_fscore_support]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes3-precision_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes3-recall_score]', 'sklearn/metrics/tests/test_classification.py::test_classification_metric_pos_label_types[classes3-brier_score_loss]', 'sklearn/preprocessing/tests/test_label.py::test_label_binarizer', 'sklearn/preprocessing/tests/test_label.py::test_label_binarizer_unseen_labels', 'sklearn/preprocessing/tests/test_label.py::test_label_binarizer_set_label_encoding', 'sklearn/preprocessing/tests/test_label.py::test_label_binarizer_errors', 'sklearn/preprocessing/tests/test_label.py::test_label_encoder[int64]', 'sklearn/preprocessing/tests/test_label.py::test_label_encoder[object]', 'sklearn/preprocessing/tests/test_label.py::test_label_encoder[str]', 'sklearn/preprocessing/tests/test_label.py::test_label_encoder_negative_ints', 'sklearn/preprocessing/tests/test_label.py::test_label_encoder_str_bad_shape[str]', 'sklearn/preprocessing/tests/test_label.py::test_label_encoder_str_bad_shape[object]', 'sklearn/preprocessing/tests/test_label.py::test_label_encoder_errors', 'sklearn/preprocessing/tests/test_label.py::test_label_encoder_empty_array[int64]', 'sklearn/preprocessing/tests/test_label.py::test_label_encoder_empty_array[object]', 'sklearn/preprocessing/tests/test_label.py::test_label_encoder_empty_array[str]', 'sklearn/preprocessing/tests/test_label.py::test_sparse_output_multilabel_binarizer', 'sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer', 'sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_empty_sample', 'sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_unknown_class', 'sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_given_classes', 'sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_multiple_calls', 'sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_same_length_sequence', 'sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_non_integer_labels', 'sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_non_unique', 'sklearn/preprocessing/tests/test_label.py::test_multilabel_binarizer_inverse_validation', 'sklearn/preprocessing/tests/test_label.py::test_label_binarize_with_class_order', 'sklearn/preprocessing/tests/test_label.py::test_label_binarize_binary', 'sklearn/preprocessing/tests/test_label.py::test_label_binarize_multiclass', 'sklearn/preprocessing/tests/test_label.py::test_label_binarize_multilabel', 'sklearn/preprocessing/tests/test_label.py::test_invalid_input_label_binarize', 'sklearn/preprocessing/tests/test_label.py::test_inverse_binarize_multiclass', 'sklearn/preprocessing/tests/test_label.py::test_nan_label_encoder', 'sklearn/utils/tests/test_multiclass.py::test_unique_labels', 'sklearn/utils/tests/test_multiclass.py::test_unique_labels_non_specific', 'sklearn/utils/tests/test_multiclass.py::test_unique_labels_mixed_types', 'sklearn/utils/tests/test_multiclass.py::test_is_multilabel', 'sklearn/utils/tests/test_multiclass.py::test_check_classification_targets', 'sklearn/utils/tests/test_multiclass.py::test_type_of_target', 'sklearn/utils/tests/test_multiclass.py::test_type_of_target_pandas_sparse', 'sklearn/utils/tests/test_multiclass.py::test_class_distribution', 'sklearn/utils/tests/test_multiclass.py::test_safe_split_with_precomputed_kernel', 'sklearn/utils/tests/test_multiclass.py::test_ovr_decision_function']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for scikit-learn__scikit-learn-25638: resolved: False
2024-07-03 17:47:52,447 - INFO - Attempting to stop container sweb.eval.scikit-learn__scikit-learn-25638.evaluation_184636...
2024-07-03 17:47:54,081 - INFO - Attempting to remove container sweb.eval.scikit-learn__scikit-learn-25638.evaluation_184636...
2024-07-03 17:47:54,331 - INFO - Container sweb.eval.scikit-learn__scikit-learn-25638.evaluation_184636 removed.
