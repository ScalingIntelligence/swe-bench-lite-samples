2024-07-03 11:14:32,065 - INFO - Environment image sweb.env.x86_64.b7ce4be3b3c35f68c61248:latest found for pytest-dev__pytest-9359
Building instance image sweb.eval.x86_64.pytest-dev__pytest-9359:latest for pytest-dev__pytest-9359
2024-07-03 11:14:32,067 - INFO - Image sweb.eval.x86_64.pytest-dev__pytest-9359:latest already exists, skipping build.
2024-07-03 11:14:32,067 - INFO - Creating container for pytest-dev__pytest-9359...
2024-07-03 11:14:33,386 - INFO - Container for pytest-dev__pytest-9359 created: 8147ccaca4f14fe8f15ab6f375997b18dd01a66be046f635250a4c21eeaa9092
2024-07-03 11:14:38,328 - INFO - Container for pytest-dev__pytest-9359 started: 8147ccaca4f14fe8f15ab6f375997b18dd01a66be046f635250a4c21eeaa9092
2024-07-03 11:14:38,328 - INFO - Intermediate patch for pytest-dev__pytest-9359 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_154142/model_name_managed_by_server/pytest-dev__pytest-9359/patch.diff, now applying to container...
2024-07-03 11:14:38,613 - INFO - >>>>> Applied Patch:
Checking patch src/_pytest/_code/code.py...
Applied patch src/_pytest/_code/code.py cleanly.

2024-07-03 11:14:38,854 - INFO - Git diff before:
diff --git a/src/_pytest/_code/code.py b/src/_pytest/_code/code.py
index b19ee7c64..f9432b24f 100644
--- a/src/_pytest/_code/code.py
+++ b/src/_pytest/_code/code.py
@@ -240,31 +240,21 @@ class TracebackEntry:
     def getfirstlinesource(self) -> int:
         return self.frame.code.firstlineno
 
-    def getsource(
-        self, astcache: Optional[Dict[Union[str, Path], ast.AST]] = None
-    ) -> Optional["Source"]:
-        """Return failing source code."""
-        # we use the passed in astcache to not reparse asttrees
-        # within exception info printing
+    def get_assertion_line(self) -> int:
+        """Return the line number of the assertion statement."""
         source = self.frame.code.fullsource
         if source is None:
-            return None
-        key = astnode = None
-        if astcache is not None:
-            key = self.frame.code.path
-            if key is not None:
-                astnode = astcache.get(key, None)
+            return self.lineno
         start = self.getfirstlinesource()
         try:
-            astnode, _, end = getstatementrange_ast(
-                self.lineno, source, astnode=astnode
-            )
+            astnode, _, _ = getstatementrange_ast(self.lineno, source)
         except SyntaxError:
-            end = self.lineno + 1
+            return self.lineno
         else:
-            if key is not None and astcache is not None:
-                astcache[key] = astnode
-        return source[start:end]
+            for node in ast.walk(astnode):
+                if isinstance(node, ast.Assert):
+                    return node.lineno
+        return self.lineno
 
     source = property(getsource)
 
@@ -308,7 +298,7 @@ class TracebackEntry:
         # https://github.com/pytest-dev/pytest/pull/7535/ for details.
         return "  File %r:%d in %s\n  %s\n" % (
             str(self.path),
-            self.lineno + 1,
+            self.get_assertion_line(),
             name,
             line,
         )
@@ -712,7 +702,7 @@ class FormattedExcinfo:
         return 4 + (len(s) - len(s.lstrip()))
 
     def _getentrysource(self, entry: TracebackEntry) -> Optional["Source"]:
-        source = entry.getsource(self.astcache)
+        source = entry.getsource()
         if source is not None:
             source = source.deindent()
         return source
2024-07-03 11:14:38,854 - INFO - Eval script for pytest-dev__pytest-9359 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_154142/model_name_managed_by_server/pytest-dev__pytest-9359/patch.diff, now applying to container...
2024-07-03 11:14:48,542 - INFO - Test output for pytest-dev__pytest-9359 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_154142/model_name_managed_by_server/pytest-dev__pytest-9359/test_output.txt
2024-07-03 11:14:48,583 - INFO - Git diff after:
diff --git a/src/_pytest/_code/code.py b/src/_pytest/_code/code.py
index b19ee7c64..f9432b24f 100644
--- a/src/_pytest/_code/code.py
+++ b/src/_pytest/_code/code.py
@@ -240,31 +240,21 @@ class TracebackEntry:
     def getfirstlinesource(self) -> int:
         return self.frame.code.firstlineno
 
-    def getsource(
-        self, astcache: Optional[Dict[Union[str, Path], ast.AST]] = None
-    ) -> Optional["Source"]:
-        """Return failing source code."""
-        # we use the passed in astcache to not reparse asttrees
-        # within exception info printing
+    def get_assertion_line(self) -> int:
+        """Return the line number of the assertion statement."""
         source = self.frame.code.fullsource
         if source is None:
-            return None
-        key = astnode = None
-        if astcache is not None:
-            key = self.frame.code.path
-            if key is not None:
-                astnode = astcache.get(key, None)
+            return self.lineno
         start = self.getfirstlinesource()
         try:
-            astnode, _, end = getstatementrange_ast(
-                self.lineno, source, astnode=astnode
-            )
+            astnode, _, _ = getstatementrange_ast(self.lineno, source)
         except SyntaxError:
-            end = self.lineno + 1
+            return self.lineno
         else:
-            if key is not None and astcache is not None:
-                astcache[key] = astnode
-        return source[start:end]
+            for node in ast.walk(astnode):
+                if isinstance(node, ast.Assert):
+                    return node.lineno
+        return self.lineno
 
     source = property(getsource)
 
@@ -308,7 +298,7 @@ class TracebackEntry:
         # https://github.com/pytest-dev/pytest/pull/7535/ for details.
         return "  File %r:%d in %s\n  %s\n" % (
             str(self.path),
-            self.lineno + 1,
+            self.get_assertion_line(),
             name,
             line,
         )
@@ -712,7 +702,7 @@ class FormattedExcinfo:
         return 4 + (len(s) - len(s.lstrip()))
 
     def _getentrysource(self, entry: TracebackEntry) -> Optional["Source"]:
-        source = entry.getsource(self.astcache)
+        source = entry.getsource()
         if source is not None:
             source = source.deindent()
         return source
2024-07-03 11:14:48,583 - INFO - Grading answer for pytest-dev__pytest-9359...
2024-07-03 11:14:48,584 - INFO - report: {'pytest-dev__pytest-9359': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['testing/code/test_source.py::test_decorator']}, 'PASS_TO_PASS': {'success': [], 'failure': ['testing/code/test_source.py::test_source_str_function', 'testing/code/test_source.py::test_source_from_function', 'testing/code/test_source.py::test_source_from_method', 'testing/code/test_source.py::test_source_from_lines', 'testing/code/test_source.py::test_source_from_inner_function', 'testing/code/test_source.py::test_source_strips', 'testing/code/test_source.py::test_source_strip_multiline', 'testing/code/test_source.py::TestAccesses::test_getrange', 'testing/code/test_source.py::TestAccesses::test_getrange_step_not_supported', 'testing/code/test_source.py::TestAccesses::test_getline', 'testing/code/test_source.py::TestAccesses::test_len', 'testing/code/test_source.py::TestAccesses::test_iter', 'testing/code/test_source.py::TestSourceParsing::test_getstatement', 'testing/code/test_source.py::TestSourceParsing::test_getstatementrange_triple_quoted', 'testing/code/test_source.py::TestSourceParsing::test_getstatementrange_within_constructs', 'testing/code/test_source.py::TestSourceParsing::test_getstatementrange_bug', 'testing/code/test_source.py::TestSourceParsing::test_getstatementrange_bug2', 'testing/code/test_source.py::TestSourceParsing::test_getstatementrange_ast_issue58', 'testing/code/test_source.py::TestSourceParsing::test_getstatementrange_out_of_bounds_py3', 'testing/code/test_source.py::TestSourceParsing::test_getstatementrange_with_syntaxerror_issue7', 'testing/code/test_source.py::test_getstartingblock_singleline', 'testing/code/test_source.py::test_getline_finally', 'testing/code/test_source.py::test_getfuncsource_dynamic', 'testing/code/test_source.py::test_getfuncsource_with_multine_string', 'testing/code/test_source.py::test_deindent', 'testing/code/test_source.py::test_source_of_class_at_eof_without_newline', 'testing/code/test_source.py::test_source_fallback', 'testing/code/test_source.py::test_findsource_fallback', 'testing/code/test_source.py::test_findsource', 'testing/code/test_source.py::test_getfslineno', 'testing/code/test_source.py::test_code_of_object_instance_with_call', 'testing/code/test_source.py::test_oneline', 'testing/code/test_source.py::test_comment_and_no_newline_at_end', 'testing/code/test_source.py::test_oneline_and_comment', 'testing/code/test_source.py::test_comments', 'testing/code/test_source.py::test_comment_in_statement', 'testing/code/test_source.py::test_source_with_decorator', 'testing/code/test_source.py::test_single_line_else', 'testing/code/test_source.py::test_single_line_finally', 'testing/code/test_source.py::test_issue55', 'testing/code/test_source.py::test_multiline', 'testing/code/test_source.py::TestTry::test_body', 'testing/code/test_source.py::TestTry::test_except_line', 'testing/code/test_source.py::TestTry::test_except_body', 'testing/code/test_source.py::TestTry::test_else', 'testing/code/test_source.py::TestTryFinally::test_body', 'testing/code/test_source.py::TestTryFinally::test_finally', 'testing/code/test_source.py::TestIf::test_body', 'testing/code/test_source.py::TestIf::test_elif_clause', 'testing/code/test_source.py::TestIf::test_elif', 'testing/code/test_source.py::TestIf::test_else', 'testing/code/test_source.py::test_semicolon', 'testing/code/test_source.py::test_def_online', 'testing/code/test_source.py::test_getstartingblock_multiline']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for pytest-dev__pytest-9359: resolved: False
2024-07-03 11:14:48,584 - INFO - Attempting to stop container sweb.eval.pytest-dev__pytest-9359.evaluation_154142...
2024-07-03 11:14:53,514 - INFO - Attempting to remove container sweb.eval.pytest-dev__pytest-9359.evaluation_154142...
2024-07-03 11:14:53,881 - INFO - Container sweb.eval.pytest-dev__pytest-9359.evaluation_154142 removed.
