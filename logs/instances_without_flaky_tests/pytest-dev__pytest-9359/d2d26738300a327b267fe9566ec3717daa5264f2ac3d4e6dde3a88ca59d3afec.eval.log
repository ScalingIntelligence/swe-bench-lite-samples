2024-07-03 12:55:53,613 - INFO - Environment image sweb.env.x86_64.b7ce4be3b3c35f68c61248:latest found for pytest-dev__pytest-9359
Building instance image sweb.eval.x86_64.pytest-dev__pytest-9359:latest for pytest-dev__pytest-9359
2024-07-03 12:55:53,614 - INFO - Image sweb.eval.x86_64.pytest-dev__pytest-9359:latest already exists, skipping build.
2024-07-03 12:55:53,614 - INFO - Creating container for pytest-dev__pytest-9359...
2024-07-03 12:55:56,584 - INFO - Container for pytest-dev__pytest-9359 created: efe5d05b380deb37949547fcd86192c83bdf22337c1cb7f21d1e353d699be373
2024-07-03 12:55:56,878 - INFO - Container for pytest-dev__pytest-9359 started: efe5d05b380deb37949547fcd86192c83bdf22337c1cb7f21d1e353d699be373
2024-07-03 12:55:56,879 - INFO - Intermediate patch for pytest-dev__pytest-9359 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_162836/model_name_managed_by_server/pytest-dev__pytest-9359/patch.diff, now applying to container...
2024-07-03 12:55:57,209 - INFO - >>>>> Applied Patch:
Checking patch src/_pytest/assertion/rewrite.py...
Applied patch src/_pytest/assertion/rewrite.py cleanly.

2024-07-03 12:55:57,425 - INFO - Git diff before:
diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py
index 456681ab2..df8ec3fde 100644
--- a/src/_pytest/assertion/rewrite.py
+++ b/src/_pytest/assertion/rewrite.py
@@ -563,15 +563,17 @@ def _get_assertion_exprs(src: bytes) -> Dict[int, str]:
     lines: List[str] = []
     assert_lineno: Optional[int] = None
     seen_lines: Set[int] = set()
+    decorator_depth = 0
 
     def _write_and_reset() -> None:
-        nonlocal depth, lines, assert_lineno, seen_lines
+        nonlocal depth, lines, assert_lineno, seen_lines, decorator_depth
         assert assert_lineno is not None
         ret[assert_lineno] = "".join(lines).rstrip().rstrip("\\")
         depth = 0
         lines = []
         assert_lineno = None
         seen_lines = set()
+        decorator_depth = 0
 
     tokens = tokenize.tokenize(io.BytesIO(src).readline)
     for tp, source, (lineno, offset), _, line in tokens:
@@ -583,6 +585,8 @@ def _get_assertion_exprs(src: bytes) -> Dict[int, str]:
                 depth += 1
             elif tp == tokenize.OP and source in ")]}":
                 depth -= 1
+            elif tp == tokenize.OP and source == "@":
+                decorator_depth += 1
 
             if not lines:
                 lines.append(line[offset:])
@@ -596,16 +600,20 @@ def _get_assertion_exprs(src: bytes) -> Dict[int, str]:
                 # multi-line assert with message
                 elif lineno in seen_lines:
                     lines[-1] = lines[-1][:offset]
-                # multi line assert with escapd newline before message
+                # multi line assert with escaped newline before message
                 else:
                     lines.append(line[:offset])
                 _write_and_reset()
             elif tp in {tokenize.NEWLINE, tokenize.ENDMARKER}:
-                _write_and_reset()
+                if decorator_depth == 0:
+                    _write_and_reset()
             elif lines and lineno not in seen_lines:
                 lines.append(line)
                 seen_lines.add(lineno)
 
+        if tp == tokenize.OP and source == "@":
+            decorator_depth -= 1
+
     return ret
2024-07-03 12:55:57,426 - INFO - Eval script for pytest-dev__pytest-9359 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_162836/model_name_managed_by_server/pytest-dev__pytest-9359/patch.diff, now applying to container...
2024-07-03 12:56:07,182 - INFO - Test output for pytest-dev__pytest-9359 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_162836/model_name_managed_by_server/pytest-dev__pytest-9359/test_output.txt
2024-07-03 12:56:07,222 - INFO - Git diff after:
diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py
index 456681ab2..df8ec3fde 100644
--- a/src/_pytest/assertion/rewrite.py
+++ b/src/_pytest/assertion/rewrite.py
@@ -563,15 +563,17 @@ def _get_assertion_exprs(src: bytes) -> Dict[int, str]:
     lines: List[str] = []
     assert_lineno: Optional[int] = None
     seen_lines: Set[int] = set()
+    decorator_depth = 0
 
     def _write_and_reset() -> None:
-        nonlocal depth, lines, assert_lineno, seen_lines
+        nonlocal depth, lines, assert_lineno, seen_lines, decorator_depth
         assert assert_lineno is not None
         ret[assert_lineno] = "".join(lines).rstrip().rstrip("\\")
         depth = 0
         lines = []
         assert_lineno = None
         seen_lines = set()
+        decorator_depth = 0
 
     tokens = tokenize.tokenize(io.BytesIO(src).readline)
     for tp, source, (lineno, offset), _, line in tokens:
@@ -583,6 +585,8 @@ def _get_assertion_exprs(src: bytes) -> Dict[int, str]:
                 depth += 1
             elif tp == tokenize.OP and source in ")]}":
                 depth -= 1
+            elif tp == tokenize.OP and source == "@":
+                decorator_depth += 1
 
             if not lines:
                 lines.append(line[offset:])
@@ -596,16 +600,20 @@ def _get_assertion_exprs(src: bytes) -> Dict[int, str]:
                 # multi-line assert with message
                 elif lineno in seen_lines:
                     lines[-1] = lines[-1][:offset]
-                # multi line assert with escapd newline before message
+                # multi line assert with escaped newline before message
                 else:
                     lines.append(line[:offset])
                 _write_and_reset()
             elif tp in {tokenize.NEWLINE, tokenize.ENDMARKER}:
-                _write_and_reset()
+                if decorator_depth == 0:
+                    _write_and_reset()
             elif lines and lineno not in seen_lines:
                 lines.append(line)
                 seen_lines.add(lineno)
 
+        if tp == tokenize.OP and source == "@":
+            decorator_depth -= 1
+
     return ret
2024-07-03 12:56:07,222 - INFO - Grading answer for pytest-dev__pytest-9359...
2024-07-03 12:56:07,223 - INFO - report: {'pytest-dev__pytest-9359': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['testing/code/test_source.py::test_decorator']}, 'PASS_TO_PASS': {'success': ['testing/code/test_source.py::test_source_str_function', 'testing/code/test_source.py::test_source_from_function', 'testing/code/test_source.py::test_source_from_method', 'testing/code/test_source.py::test_source_from_lines', 'testing/code/test_source.py::test_source_from_inner_function', 'testing/code/test_source.py::test_source_strips', 'testing/code/test_source.py::test_source_strip_multiline', 'testing/code/test_source.py::TestAccesses::test_getrange', 'testing/code/test_source.py::TestAccesses::test_getrange_step_not_supported', 'testing/code/test_source.py::TestAccesses::test_getline', 'testing/code/test_source.py::TestAccesses::test_len', 'testing/code/test_source.py::TestAccesses::test_iter', 'testing/code/test_source.py::TestSourceParsing::test_getstatement', 'testing/code/test_source.py::TestSourceParsing::test_getstatementrange_triple_quoted', 'testing/code/test_source.py::TestSourceParsing::test_getstatementrange_within_constructs', 'testing/code/test_source.py::TestSourceParsing::test_getstatementrange_bug', 'testing/code/test_source.py::TestSourceParsing::test_getstatementrange_bug2', 'testing/code/test_source.py::TestSourceParsing::test_getstatementrange_ast_issue58', 'testing/code/test_source.py::TestSourceParsing::test_getstatementrange_out_of_bounds_py3', 'testing/code/test_source.py::TestSourceParsing::test_getstatementrange_with_syntaxerror_issue7', 'testing/code/test_source.py::test_getstartingblock_singleline', 'testing/code/test_source.py::test_getline_finally', 'testing/code/test_source.py::test_getfuncsource_dynamic', 'testing/code/test_source.py::test_getfuncsource_with_multine_string', 'testing/code/test_source.py::test_deindent', 'testing/code/test_source.py::test_source_of_class_at_eof_without_newline', 'testing/code/test_source.py::test_source_fallback', 'testing/code/test_source.py::test_findsource_fallback', 'testing/code/test_source.py::test_findsource', 'testing/code/test_source.py::test_getfslineno', 'testing/code/test_source.py::test_code_of_object_instance_with_call', 'testing/code/test_source.py::test_oneline', 'testing/code/test_source.py::test_comment_and_no_newline_at_end', 'testing/code/test_source.py::test_oneline_and_comment', 'testing/code/test_source.py::test_comments', 'testing/code/test_source.py::test_comment_in_statement', 'testing/code/test_source.py::test_source_with_decorator', 'testing/code/test_source.py::test_single_line_else', 'testing/code/test_source.py::test_single_line_finally', 'testing/code/test_source.py::test_issue55', 'testing/code/test_source.py::test_multiline', 'testing/code/test_source.py::TestTry::test_body', 'testing/code/test_source.py::TestTry::test_except_line', 'testing/code/test_source.py::TestTry::test_except_body', 'testing/code/test_source.py::TestTry::test_else', 'testing/code/test_source.py::TestTryFinally::test_body', 'testing/code/test_source.py::TestTryFinally::test_finally', 'testing/code/test_source.py::TestIf::test_body', 'testing/code/test_source.py::TestIf::test_elif_clause', 'testing/code/test_source.py::TestIf::test_elif', 'testing/code/test_source.py::TestIf::test_else', 'testing/code/test_source.py::test_semicolon', 'testing/code/test_source.py::test_def_online', 'testing/code/test_source.py::test_getstartingblock_multiline'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for pytest-dev__pytest-9359: resolved: False
2024-07-03 12:56:07,223 - INFO - Attempting to stop container sweb.eval.pytest-dev__pytest-9359.evaluation_162836...
2024-07-03 12:56:11,634 - INFO - Attempting to remove container sweb.eval.pytest-dev__pytest-9359.evaluation_162836...
2024-07-03 12:56:11,828 - INFO - Container sweb.eval.pytest-dev__pytest-9359.evaluation_162836 removed.
