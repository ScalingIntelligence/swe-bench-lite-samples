2024-07-03 18:38:43,969 - INFO - Environment image sweb.env.x86_64.297af196949a2a635bce66:latest found for django__django-13925
Building instance image sweb.eval.x86_64.django__django-13925:latest for django__django-13925
2024-07-03 18:38:43,971 - INFO - Image sweb.eval.x86_64.django__django-13925:latest already exists, skipping build.
2024-07-03 18:38:43,971 - INFO - Creating container for django__django-13925...
2024-07-03 18:38:45,935 - INFO - Container for django__django-13925 created: be18eb26d8d01cdb47c1d19f3ddbb57f87a4af4e345dca38502e69d5a131e2cc
2024-07-03 18:39:14,142 - INFO - Container for django__django-13925 started: be18eb26d8d01cdb47c1d19f3ddbb57f87a4af4e345dca38502e69d5a131e2cc
2024-07-03 18:39:14,145 - INFO - Intermediate patch for django__django-13925 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_188948/model_name_managed_by_server/django__django-13925/patch.diff, now applying to container...
2024-07-03 18:39:15,118 - INFO - >>>>> Applied Patch:
Checking patch django/db/models/options.py...
Applied patch django/db/models/options.py cleanly.

2024-07-03 18:39:16,468 - INFO - Git diff before:
diff --git a/django/db/models/options.py b/django/db/models/options.py
index 4028e05b99..4756b1099b 100644
--- a/django/db/models/options.py
+++ b/django/db/models/options.py
@@ -218,36 +218,38 @@ class Options:
             new_objs.append(obj)
         return new_objs
 
-    def _get_default_pk_class(self):
-        pk_class_path = getattr(
-            self.app_config,
-            'default_auto_field',
-            settings.DEFAULT_AUTO_FIELD,
+def _get_default_pk_class(self):
+    if any(f.primary_key for f in self._get_fields(reverse=False) if f.attname != self.pk.attname):
+        return None
+    pk_class_path = getattr(
+        self.app_config,
+        'default_auto_field',
+        settings.DEFAULT_AUTO_FIELD,
+    )
+    if self.app_config and self.app_config._is_default_auto_field_overridden:
+        app_config_class = type(self.app_config)
+        source = (
+            f'{app_config_class.__module__}.'
+            f'{app_config_class.__qualname__}.default_auto_field'
         )
-        if self.app_config and self.app_config._is_default_auto_field_overridden:
-            app_config_class = type(self.app_config)
-            source = (
-                f'{app_config_class.__module__}.'
-                f'{app_config_class.__qualname__}.default_auto_field'
-            )
-        else:
-            source = 'DEFAULT_AUTO_FIELD'
-        if not pk_class_path:
-            raise ImproperlyConfigured(f'{source} must not be empty.')
-        try:
-            pk_class = import_string(pk_class_path)
-        except ImportError as e:
-            msg = (
-                f"{source} refers to the module '{pk_class_path}' that could "
-                f"not be imported."
-            )
-            raise ImproperlyConfigured(msg) from e
-        if not issubclass(pk_class, AutoField):
-            raise ValueError(
-                f"Primary key '{pk_class_path}' referred by {source} must "
-                f"subclass AutoField."
-            )
-        return pk_class
+    else:
+        source = 'DEFAULT_AUTO_FIELD'
+    if not pk_class_path:
+        raise ImproperlyConfigured(f'{source} must not be empty.')
+    try:
+        pk_class = import_string(pk_class_path)
+    except ImportError as e:
+        msg = (
+            f"{source} refers to the module '{pk_class_path}' that could "
+            f"not be imported."
+        )
+        raise ImproperlyConfigured(msg) from e
+    if not issubclass(pk_class, AutoField):
+        raise ValueError(
+            f"Primary key '{pk_class_path}' referred by {source} must "
+            f"subclass AutoField."
+        )
+    return pk_class
 
     def _prepare(self, model):
         if self.order_with_respect_to:
2024-07-03 18:39:16,510 - INFO - Eval script for django__django-13925 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_188948/model_name_managed_by_server/django__django-13925/patch.diff, now applying to container...
2024-07-03 18:39:26,451 - INFO - Test output for django__django-13925 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_188948/model_name_managed_by_server/django__django-13925/test_output.txt
2024-07-03 18:39:26,589 - INFO - Git diff after:
diff --git a/django/db/models/options.py b/django/db/models/options.py
index 4028e05b99..4756b1099b 100644
--- a/django/db/models/options.py
+++ b/django/db/models/options.py
@@ -218,36 +218,38 @@ class Options:
             new_objs.append(obj)
         return new_objs
 
-    def _get_default_pk_class(self):
-        pk_class_path = getattr(
-            self.app_config,
-            'default_auto_field',
-            settings.DEFAULT_AUTO_FIELD,
+def _get_default_pk_class(self):
+    if any(f.primary_key for f in self._get_fields(reverse=False) if f.attname != self.pk.attname):
+        return None
+    pk_class_path = getattr(
+        self.app_config,
+        'default_auto_field',
+        settings.DEFAULT_AUTO_FIELD,
+    )
+    if self.app_config and self.app_config._is_default_auto_field_overridden:
+        app_config_class = type(self.app_config)
+        source = (
+            f'{app_config_class.__module__}.'
+            f'{app_config_class.__qualname__}.default_auto_field'
         )
-        if self.app_config and self.app_config._is_default_auto_field_overridden:
-            app_config_class = type(self.app_config)
-            source = (
-                f'{app_config_class.__module__}.'
-                f'{app_config_class.__qualname__}.default_auto_field'
-            )
-        else:
-            source = 'DEFAULT_AUTO_FIELD'
-        if not pk_class_path:
-            raise ImproperlyConfigured(f'{source} must not be empty.')
-        try:
-            pk_class = import_string(pk_class_path)
-        except ImportError as e:
-            msg = (
-                f"{source} refers to the module '{pk_class_path}' that could "
-                f"not be imported."
-            )
-            raise ImproperlyConfigured(msg) from e
-        if not issubclass(pk_class, AutoField):
-            raise ValueError(
-                f"Primary key '{pk_class_path}' referred by {source} must "
-                f"subclass AutoField."
-            )
-        return pk_class
+    else:
+        source = 'DEFAULT_AUTO_FIELD'
+    if not pk_class_path:
+        raise ImproperlyConfigured(f'{source} must not be empty.')
+    try:
+        pk_class = import_string(pk_class_path)
+    except ImportError as e:
+        msg = (
+            f"{source} refers to the module '{pk_class_path}' that could "
+            f"not be imported."
+        )
+        raise ImproperlyConfigured(msg) from e
+    if not issubclass(pk_class, AutoField):
+        raise ValueError(
+            f"Primary key '{pk_class_path}' referred by {source} must "
+            f"subclass AutoField."
+        )
+    return pk_class
 
     def _prepare(self, model):
         if self.order_with_respect_to:
2024-07-03 18:39:26,589 - INFO - Grading answer for django__django-13925...
2024-07-03 18:39:26,591 - INFO - report: {'django__django-13925': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_auto_created_inherited_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests)', 'test_explicit_inherited_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests)']}, 'PASS_TO_PASS': {'success': [], 'failure': ['test_app_default_auto_field (check_framework.test_model_checks.ModelDefaultAutoFieldTests)', 'test_auto_created_inherited_parent_link (check_framework.test_model_checks.ModelDefaultAutoFieldTests)', 'test_auto_created_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests)', 'test_default_auto_field_setting (check_framework.test_model_checks.ModelDefaultAutoFieldTests)', 'test_explicit_inherited_parent_link (check_framework.test_model_checks.ModelDefaultAutoFieldTests)', 'test_explicit_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests)', 'test_collision_abstract_model (check_framework.test_model_checks.IndexNameTests)', 'test_collision_across_apps (check_framework.test_model_checks.IndexNameTests)', 'test_collision_in_different_models (check_framework.test_model_checks.IndexNameTests)', 'test_collision_in_same_model (check_framework.test_model_checks.IndexNameTests)', 'test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.IndexNameTests)', 'test_no_collision_across_apps_interpolation (check_framework.test_model_checks.IndexNameTests)', 'test_collision_abstract_model (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_across_apps (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_in_different_models (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_in_same_model (check_framework.test_model_checks.ConstraintNameTests)', 'test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.ConstraintNameTests)', 'test_no_collision_across_apps_interpolation (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_across_apps (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_collision_across_apps_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_collision_in_same_app (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_collision_in_same_app_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_no_collision_for_proxy_models (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_no_collision_for_unmanaged_models (check_framework.test_model_checks.DuplicateDBTableTests)']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-13925: resolved: False
2024-07-03 18:39:26,592 - INFO - Attempting to stop container sweb.eval.django__django-13925.evaluation_188948...
2024-07-03 18:39:35,587 - INFO - Attempting to remove container sweb.eval.django__django-13925.evaluation_188948...
2024-07-03 18:39:35,835 - INFO - Container sweb.eval.django__django-13925.evaluation_188948 removed.
