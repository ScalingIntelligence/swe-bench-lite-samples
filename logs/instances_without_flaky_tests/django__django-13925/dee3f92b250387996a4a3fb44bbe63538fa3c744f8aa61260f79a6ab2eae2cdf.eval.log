2024-07-03 18:04:02,547 - INFO - Environment image sweb.env.x86_64.297af196949a2a635bce66:latest found for django__django-13925
Building instance image sweb.eval.x86_64.django__django-13925:latest for django__django-13925
2024-07-03 18:04:02,551 - INFO - Image sweb.eval.x86_64.django__django-13925:latest already exists, skipping build.
2024-07-03 18:04:02,551 - INFO - Creating container for django__django-13925...
2024-07-03 18:04:03,736 - INFO - Container for django__django-13925 created: 072d623c5f899ca0881d4da72829d105e262690e0a0975e3df83110667a33aca
2024-07-03 18:04:25,514 - INFO - Container for django__django-13925 started: 072d623c5f899ca0881d4da72829d105e262690e0a0975e3df83110667a33aca
2024-07-03 18:04:25,515 - INFO - Intermediate patch for django__django-13925 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_186012/model_name_managed_by_server/django__django-13925/patch.diff, now applying to container...
2024-07-03 18:04:26,481 - INFO - >>>>> Applied Patch:
Checking patch django/db/models/base.py...
Checking patch django/db/models/options.py...
Applied patch django/db/models/base.py cleanly.
Applied patch django/db/models/options.py cleanly.

2024-07-03 18:04:28,112 - INFO - Git diff before:
diff --git a/django/db/models/base.py b/django/db/models/base.py
index 4038859cfa..3081d9f297 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -1302,6 +1302,9 @@ class Model(metaclass=ModelBase):
             not settings.is_overridden('DEFAULT_AUTO_FIELD') and
             not cls._meta.app_config._is_default_auto_field_overridden
         ):
+            # Check if the primary key is inherited from a parent model
+            if any(isinstance(field, OneToOneField) and field.primary_key for field in cls._meta.local_fields):
+                return []
             return [
                 checks.Warning(
                     f"Auto-created primary key used when not defining a "
diff --git a/django/db/models/options.py b/django/db/models/options.py
index 4028e05b99..ff53019302 100644
--- a/django/db/models/options.py
+++ b/django/db/models/options.py
@@ -2,6 +2,7 @@ import bisect
 import copy
 import inspect
 from collections import defaultdict
+from django.db.models.fields.related import OneToOneField
 
 from django.apps import apps
 from django.conf import settings
@@ -219,6 +220,9 @@ class Options:
         return new_objs
 
     def _get_default_pk_class(self):
+        for field in self.local_fields:
+            if isinstance(field, OneToOneField) and field.primary_key:
+                return type(field)
         pk_class_path = getattr(
             self.app_config,
             'default_auto_field',
2024-07-03 18:04:28,112 - INFO - Eval script for django__django-13925 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_186012/model_name_managed_by_server/django__django-13925/patch.diff, now applying to container...
2024-07-03 18:04:40,140 - INFO - Test output for django__django-13925 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_186012/model_name_managed_by_server/django__django-13925/test_output.txt
2024-07-03 18:04:40,258 - INFO - Git diff after:
diff --git a/django/db/models/base.py b/django/db/models/base.py
index 4038859cfa..3081d9f297 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -1302,6 +1302,9 @@ class Model(metaclass=ModelBase):
             not settings.is_overridden('DEFAULT_AUTO_FIELD') and
             not cls._meta.app_config._is_default_auto_field_overridden
         ):
+            # Check if the primary key is inherited from a parent model
+            if any(isinstance(field, OneToOneField) and field.primary_key for field in cls._meta.local_fields):
+                return []
             return [
                 checks.Warning(
                     f"Auto-created primary key used when not defining a "
diff --git a/django/db/models/options.py b/django/db/models/options.py
index 4028e05b99..ff53019302 100644
--- a/django/db/models/options.py
+++ b/django/db/models/options.py
@@ -2,6 +2,7 @@ import bisect
 import copy
 import inspect
 from collections import defaultdict
+from django.db.models.fields.related import OneToOneField
 
 from django.apps import apps
 from django.conf import settings
@@ -219,6 +220,9 @@ class Options:
         return new_objs
 
     def _get_default_pk_class(self):
+        for field in self.local_fields:
+            if isinstance(field, OneToOneField) and field.primary_key:
+                return type(field)
         pk_class_path = getattr(
             self.app_config,
             'default_auto_field',
2024-07-03 18:04:40,258 - INFO - Grading answer for django__django-13925...
2024-07-03 18:04:40,261 - INFO - report: {'django__django-13925': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': True, 'tests_status': {'FAIL_TO_PASS': {'success': ['test_auto_created_inherited_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests)', 'test_explicit_inherited_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests)'], 'failure': []}, 'PASS_TO_PASS': {'success': ['test_app_default_auto_field (check_framework.test_model_checks.ModelDefaultAutoFieldTests)', 'test_auto_created_inherited_parent_link (check_framework.test_model_checks.ModelDefaultAutoFieldTests)', 'test_auto_created_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests)', 'test_default_auto_field_setting (check_framework.test_model_checks.ModelDefaultAutoFieldTests)', 'test_explicit_inherited_parent_link (check_framework.test_model_checks.ModelDefaultAutoFieldTests)', 'test_explicit_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests)', 'test_collision_abstract_model (check_framework.test_model_checks.IndexNameTests)', 'test_collision_across_apps (check_framework.test_model_checks.IndexNameTests)', 'test_collision_in_different_models (check_framework.test_model_checks.IndexNameTests)', 'test_collision_in_same_model (check_framework.test_model_checks.IndexNameTests)', 'test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.IndexNameTests)', 'test_no_collision_across_apps_interpolation (check_framework.test_model_checks.IndexNameTests)', 'test_collision_abstract_model (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_across_apps (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_in_different_models (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_in_same_model (check_framework.test_model_checks.ConstraintNameTests)', 'test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.ConstraintNameTests)', 'test_no_collision_across_apps_interpolation (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_across_apps (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_collision_across_apps_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_collision_in_same_app (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_collision_in_same_app_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_no_collision_for_proxy_models (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_no_collision_for_unmanaged_models (check_framework.test_model_checks.DuplicateDBTableTests)'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-13925: resolved: True
2024-07-03 18:04:40,261 - INFO - Attempting to stop container sweb.eval.django__django-13925.evaluation_186012...
2024-07-03 18:04:44,092 - INFO - Attempting to remove container sweb.eval.django__django-13925.evaluation_186012...
2024-07-03 18:04:44,408 - INFO - Container sweb.eval.django__django-13925.evaluation_186012 removed.
