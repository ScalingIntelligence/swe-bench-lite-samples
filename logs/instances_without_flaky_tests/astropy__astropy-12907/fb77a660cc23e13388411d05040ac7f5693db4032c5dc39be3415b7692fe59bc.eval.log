2024-07-03 14:14:09,964 - INFO - Environment image sweb.env.x86_64.428468730904ff6b4232aa:latest found for astropy__astropy-12907
Building instance image sweb.eval.x86_64.astropy__astropy-12907:latest for astropy__astropy-12907
2024-07-03 14:14:09,968 - INFO - Image sweb.eval.x86_64.astropy__astropy-12907:latest already exists, skipping build.
2024-07-03 14:14:09,969 - INFO - Creating container for astropy__astropy-12907...
2024-07-03 14:14:11,745 - INFO - Container for astropy__astropy-12907 created: bdc020cdcde19916202cd203bf3c73be2e80d1e84d1cf97b1bc2c42371cb5481
2024-07-03 14:14:19,795 - INFO - Container for astropy__astropy-12907 started: bdc020cdcde19916202cd203bf3c73be2e80d1e84d1cf97b1bc2c42371cb5481
2024-07-03 14:14:19,795 - INFO - Intermediate patch for astropy__astropy-12907 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_169179/model_name_managed_by_server/astropy__astropy-12907/patch.diff, now applying to container...
2024-07-03 14:14:20,292 - INFO - >>>>> Applied Patch:
Checking patch astropy/modeling/core.py...
Applied patch astropy/modeling/core.py cleanly.

2024-07-03 14:14:20,784 - INFO - Git diff before:
diff --git a/astropy/modeling/core.py b/astropy/modeling/core.py
index da4352cb0c..fcff27657b 100644
--- a/astropy/modeling/core.py
+++ b/astropy/modeling/core.py
@@ -3585,7 +3585,7 @@ class CompoundModel(Model):
                 if isinstance(self.left, CompoundModel):
                     inputs_map[inp] = l_inputs_map[inp]
                 else:
-                    inputs_map[inp] = self.left, inp
+                    inputs_map[inp] = (self.left, inp)
         elif self.op == '&':
             if isinstance(self.left, CompoundModel):
                 l_inputs_map = self.left.inputs_map()
@@ -3596,12 +3596,12 @@ class CompoundModel(Model):
                     if isinstance(self.left, CompoundModel):
                         inputs_map[inp] = l_inputs_map[self.left.inputs[i]]
                     else:
-                        inputs_map[inp] = self.left, self.left.inputs[i]
+                        inputs_map[inp] = (self.left, self.left.inputs[i])
                 else:  # Get from right
                     if isinstance(self.right, CompoundModel):
                         inputs_map[inp] = r_inputs_map[self.right.inputs[i - len(self.left.inputs)]]
                     else:
-                        inputs_map[inp] = self.right, self.right.inputs[i - len(self.left.inputs)]
+                        inputs_map[inp] = (self.right, self.right.inputs[i - len(self.left.inputs)])
         elif self.op == 'fix_inputs':
             fixed_ind = list(self.right.keys())
             ind = [list(self.left.inputs).index(i) if isinstance(i, str) else i for i in fixed_ind]
@@ -3609,15 +3609,22 @@ class CompoundModel(Model):
             for i in ind:
                 inp_ind.remove(i)
             for i in inp_ind:
-                inputs_map[self.left.inputs[i]] = self.left, self.left.inputs[i]
+                inputs_map[self.left.inputs[i]] = (self.left, self.left.inputs[i])
         else:
             if isinstance(self.left, CompoundModel):
-                l_inputs_map = self.left.inputs_map()
-            for inp in self.left.inputs:
-                if isinstance(self.left, CompoundModel):
-                    inputs_map[inp] = l_inputs_map[inp]
-                else:
-                    inputs_map[inp] = self.left, inp
+                for _, (leaf, inp) in self.left.inputs_map().items():
+                    inputs_map[inp] = (leaf, inp)
+            else:
+                for inp in self.left.inputs:
+                    inputs_map[inp] = (self.left, inp)
+
+            if isinstance(self.right, CompoundModel):
+                for _, (leaf, inp) in self.right.inputs_map().items():
+                    inputs_map[inp] = (leaf, inp)
+            else:
+                for inp in self.right.inputs:
+                    inputs_map[inp] = (self.right, inp)
+
         return inputs_map
 
     def _parameter_units_for_data_units(self, input_units, output_units):
diff --git a/pyproject.toml b/pyproject.toml
index 3364d30740..02dddbe713 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.22",
2024-07-03 14:14:20,794 - INFO - Eval script for astropy__astropy-12907 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_169179/model_name_managed_by_server/astropy__astropy-12907/patch.diff, now applying to container...
2024-07-03 14:14:46,679 - INFO - Test output for astropy__astropy-12907 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_169179/model_name_managed_by_server/astropy__astropy-12907/test_output.txt
2024-07-03 14:14:46,726 - INFO - Git diff after:
diff --git a/astropy/modeling/core.py b/astropy/modeling/core.py
index da4352cb0c..fcff27657b 100644
--- a/astropy/modeling/core.py
+++ b/astropy/modeling/core.py
@@ -3585,7 +3585,7 @@ class CompoundModel(Model):
                 if isinstance(self.left, CompoundModel):
                     inputs_map[inp] = l_inputs_map[inp]
                 else:
-                    inputs_map[inp] = self.left, inp
+                    inputs_map[inp] = (self.left, inp)
         elif self.op == '&':
             if isinstance(self.left, CompoundModel):
                 l_inputs_map = self.left.inputs_map()
@@ -3596,12 +3596,12 @@ class CompoundModel(Model):
                     if isinstance(self.left, CompoundModel):
                         inputs_map[inp] = l_inputs_map[self.left.inputs[i]]
                     else:
-                        inputs_map[inp] = self.left, self.left.inputs[i]
+                        inputs_map[inp] = (self.left, self.left.inputs[i])
                 else:  # Get from right
                     if isinstance(self.right, CompoundModel):
                         inputs_map[inp] = r_inputs_map[self.right.inputs[i - len(self.left.inputs)]]
                     else:
-                        inputs_map[inp] = self.right, self.right.inputs[i - len(self.left.inputs)]
+                        inputs_map[inp] = (self.right, self.right.inputs[i - len(self.left.inputs)])
         elif self.op == 'fix_inputs':
             fixed_ind = list(self.right.keys())
             ind = [list(self.left.inputs).index(i) if isinstance(i, str) else i for i in fixed_ind]
@@ -3609,15 +3609,22 @@ class CompoundModel(Model):
             for i in ind:
                 inp_ind.remove(i)
             for i in inp_ind:
-                inputs_map[self.left.inputs[i]] = self.left, self.left.inputs[i]
+                inputs_map[self.left.inputs[i]] = (self.left, self.left.inputs[i])
         else:
             if isinstance(self.left, CompoundModel):
-                l_inputs_map = self.left.inputs_map()
-            for inp in self.left.inputs:
-                if isinstance(self.left, CompoundModel):
-                    inputs_map[inp] = l_inputs_map[inp]
-                else:
-                    inputs_map[inp] = self.left, inp
+                for _, (leaf, inp) in self.left.inputs_map().items():
+                    inputs_map[inp] = (leaf, inp)
+            else:
+                for inp in self.left.inputs:
+                    inputs_map[inp] = (self.left, inp)
+
+            if isinstance(self.right, CompoundModel):
+                for _, (leaf, inp) in self.right.inputs_map().items():
+                    inputs_map[inp] = (leaf, inp)
+            else:
+                for inp in self.right.inputs:
+                    inputs_map[inp] = (self.right, inp)
+
         return inputs_map
 
     def _parameter_units_for_data_units(self, input_units, output_units):
diff --git a/pyproject.toml b/pyproject.toml
index 3364d30740..02dddbe713 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.22",
2024-07-03 14:14:46,726 - INFO - Grading answer for astropy__astropy-12907...
2024-07-03 14:14:46,728 - INFO - report: {'astropy__astropy-12907': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['astropy/modeling/tests/test_separable.py::test_separable[compound_model6-result6]', 'astropy/modeling/tests/test_separable.py::test_separable[compound_model9-result9]']}, 'PASS_TO_PASS': {'success': ['astropy/modeling/tests/test_separable.py::test_coord_matrix', 'astropy/modeling/tests/test_separable.py::test_cdot', 'astropy/modeling/tests/test_separable.py::test_cstack', 'astropy/modeling/tests/test_separable.py::test_arith_oper', 'astropy/modeling/tests/test_separable.py::test_separable[compound_model0-result0]', 'astropy/modeling/tests/test_separable.py::test_separable[compound_model1-result1]', 'astropy/modeling/tests/test_separable.py::test_separable[compound_model2-result2]', 'astropy/modeling/tests/test_separable.py::test_separable[compound_model3-result3]', 'astropy/modeling/tests/test_separable.py::test_separable[compound_model4-result4]', 'astropy/modeling/tests/test_separable.py::test_separable[compound_model5-result5]', 'astropy/modeling/tests/test_separable.py::test_separable[compound_model7-result7]', 'astropy/modeling/tests/test_separable.py::test_separable[compound_model8-result8]', 'astropy/modeling/tests/test_separable.py::test_custom_model_separable'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for astropy__astropy-12907: resolved: False
2024-07-03 14:14:46,728 - INFO - Attempting to stop container sweb.eval.astropy__astropy-12907.evaluation_169179...
2024-07-03 14:14:50,445 - INFO - Attempting to remove container sweb.eval.astropy__astropy-12907.evaluation_169179...
2024-07-03 14:14:51,253 - INFO - Container sweb.eval.astropy__astropy-12907.evaluation_169179 removed.
