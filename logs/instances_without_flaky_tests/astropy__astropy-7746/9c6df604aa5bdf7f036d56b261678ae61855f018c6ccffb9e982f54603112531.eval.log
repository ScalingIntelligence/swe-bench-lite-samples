2024-07-03 13:13:44,551 - INFO - Environment image sweb.env.x86_64.428468730904ff6b4232aa:latest found for astropy__astropy-7746
Building instance image sweb.eval.x86_64.astropy__astropy-7746:latest for astropy__astropy-7746
2024-07-03 13:13:44,552 - INFO - Image sweb.eval.x86_64.astropy__astropy-7746:latest already exists, skipping build.
2024-07-03 13:13:44,553 - INFO - Creating container for astropy__astropy-7746...
2024-07-03 13:13:45,258 - INFO - Container for astropy__astropy-7746 created: 71a8604996fa3abd27bda8adb92e6843cb32a230f9b8af0828faaffaa6bf9e7c
2024-07-03 13:13:45,459 - INFO - Container for astropy__astropy-7746 started: 71a8604996fa3abd27bda8adb92e6843cb32a230f9b8af0828faaffaa6bf9e7c
2024-07-03 13:13:45,459 - INFO - Intermediate patch for astropy__astropy-7746 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_164340/model_name_managed_by_server/astropy__astropy-7746/patch.diff, now applying to container...
2024-07-03 13:13:45,666 - INFO - >>>>> Applied Patch:
Checking patch astropy/visualization/wcsaxes/transforms.py...
Applied patch astropy/visualization/wcsaxes/transforms.py cleanly.

2024-07-03 13:13:46,202 - INFO - Git diff before:
diff --git a/astropy/visualization/wcsaxes/transforms.py b/astropy/visualization/wcsaxes/transforms.py
index 238153ef91..493b9fe212 100644
--- a/astropy/visualization/wcsaxes/transforms.py
+++ b/astropy/visualization/wcsaxes/transforms.py
@@ -101,9 +101,9 @@ class WCSWorld2PixelTransform(CurvedTransform):
             raise ValueError("Second dimension of input values should match number of WCS coordinates")
 
         if world.shape[0] == 0:
-            pixel = np.zeros((0, 2))
-        else:
-            pixel = self.wcs.wcs_world2pix(world, 1) - 1
+            return np.zeros((0, 2))
+
+        pixel = self.wcs.wcs_world2pix(world, 1) - 1
 
         if self.slice is None:
             return pixel
@@ -177,16 +177,17 @@ class WCSPixel2WorldTransform(CurvedTransform):
         pixel_full += 1
 
         if pixel_full.shape[0] == 0:
-            world = np.zeros((0, 2))
+            world = np.zeros((0, self.wcs.wcs.naxis))
         else:
             world = self.wcs.wcs_pix2world(pixel_full, 1)
 
         # At the moment, one has to manually check that the transformation
         # round-trips, otherwise it should be considered invalid.
-        pixel_check = self.wcs.wcs_world2pix(world, 1)
-        with np.errstate(invalid='ignore'):
-            invalid = np.any(np.abs(pixel_check - pixel_full) > 1., axis=1)
-        world[invalid] = np.nan
+        if pixel_full.shape[0] > 0:
+            pixel_check = self.wcs.wcs_world2pix(world, 1)
+            with np.errstate(invalid='ignore'):
+                invalid = np.any(np.abs(pixel_check - pixel_full) > 1., axis=1)
+            world[invalid] = np.nan
 
         return world
2024-07-03 13:13:46,202 - INFO - Eval script for astropy__astropy-7746 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_164340/model_name_managed_by_server/astropy__astropy-7746/patch.diff, now applying to container...
2024-07-03 13:13:55,027 - INFO - Test output for astropy__astropy-7746 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_164340/model_name_managed_by_server/astropy__astropy-7746/test_output.txt
2024-07-03 13:13:55,092 - INFO - Git diff after:
diff --git a/astropy/visualization/wcsaxes/transforms.py b/astropy/visualization/wcsaxes/transforms.py
index 238153ef91..493b9fe212 100644
--- a/astropy/visualization/wcsaxes/transforms.py
+++ b/astropy/visualization/wcsaxes/transforms.py
@@ -101,9 +101,9 @@ class WCSWorld2PixelTransform(CurvedTransform):
             raise ValueError("Second dimension of input values should match number of WCS coordinates")
 
         if world.shape[0] == 0:
-            pixel = np.zeros((0, 2))
-        else:
-            pixel = self.wcs.wcs_world2pix(world, 1) - 1
+            return np.zeros((0, 2))
+
+        pixel = self.wcs.wcs_world2pix(world, 1) - 1
 
         if self.slice is None:
             return pixel
@@ -177,16 +177,17 @@ class WCSPixel2WorldTransform(CurvedTransform):
         pixel_full += 1
 
         if pixel_full.shape[0] == 0:
-            world = np.zeros((0, 2))
+            world = np.zeros((0, self.wcs.wcs.naxis))
         else:
             world = self.wcs.wcs_pix2world(pixel_full, 1)
 
         # At the moment, one has to manually check that the transformation
         # round-trips, otherwise it should be considered invalid.
-        pixel_check = self.wcs.wcs_world2pix(world, 1)
-        with np.errstate(invalid='ignore'):
-            invalid = np.any(np.abs(pixel_check - pixel_full) > 1., axis=1)
-        world[invalid] = np.nan
+        if pixel_full.shape[0] > 0:
+            pixel_check = self.wcs.wcs_world2pix(world, 1)
+            with np.errstate(invalid='ignore'):
+                invalid = np.any(np.abs(pixel_check - pixel_full) > 1., axis=1)
+            world[invalid] = np.nan
 
         return world
2024-07-03 13:13:55,092 - INFO - Grading answer for astropy__astropy-7746...
2024-07-03 13:13:55,095 - INFO - report: {'astropy__astropy-7746': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['astropy/wcs/tests/test_wcs.py::test_zero_size_input']}, 'PASS_TO_PASS': {'success': ['astropy/wcs/tests/test_wcs.py::TestMaps::test_consistency', 'astropy/wcs/tests/test_wcs.py::TestMaps::test_maps', 'astropy/wcs/tests/test_wcs.py::TestSpectra::test_consistency', 'astropy/wcs/tests/test_wcs.py::TestSpectra::test_spectra', 'astropy/wcs/tests/test_wcs.py::test_fixes', 'astropy/wcs/tests/test_wcs.py::test_outside_sky', 'astropy/wcs/tests/test_wcs.py::test_pix2world', 'astropy/wcs/tests/test_wcs.py::test_load_fits_path', 'astropy/wcs/tests/test_wcs.py::test_dict_init', 'astropy/wcs/tests/test_wcs.py::test_extra_kwarg', 'astropy/wcs/tests/test_wcs.py::test_3d_shapes', 'astropy/wcs/tests/test_wcs.py::test_preserve_shape', 'astropy/wcs/tests/test_wcs.py::test_broadcasting', 'astropy/wcs/tests/test_wcs.py::test_shape_mismatch', 'astropy/wcs/tests/test_wcs.py::test_invalid_shape', 'astropy/wcs/tests/test_wcs.py::test_warning_about_defunct_keywords', 'astropy/wcs/tests/test_wcs.py::test_warning_about_defunct_keywords_exception', 'astropy/wcs/tests/test_wcs.py::test_to_header_string', 'astropy/wcs/tests/test_wcs.py::test_to_fits', 'astropy/wcs/tests/test_wcs.py::test_to_header_warning', 'astropy/wcs/tests/test_wcs.py::test_no_comments_in_header', 'astropy/wcs/tests/test_wcs.py::test_find_all_wcs_crash', 'astropy/wcs/tests/test_wcs.py::test_validate', 'astropy/wcs/tests/test_wcs.py::test_validate_with_2_wcses', 'astropy/wcs/tests/test_wcs.py::test_crpix_maps_to_crval', 'astropy/wcs/tests/test_wcs.py::test_all_world2pix', 'astropy/wcs/tests/test_wcs.py::test_scamp_sip_distortion_parameters', 'astropy/wcs/tests/test_wcs.py::test_fixes2', 'astropy/wcs/tests/test_wcs.py::test_unit_normalization', 'astropy/wcs/tests/test_wcs.py::test_footprint_to_file', 'astropy/wcs/tests/test_wcs.py::test_validate_faulty_wcs', 'astropy/wcs/tests/test_wcs.py::test_error_message', 'astropy/wcs/tests/test_wcs.py::test_out_of_bounds', 'astropy/wcs/tests/test_wcs.py::test_calc_footprint_1', 'astropy/wcs/tests/test_wcs.py::test_calc_footprint_2', 'astropy/wcs/tests/test_wcs.py::test_calc_footprint_3', 'astropy/wcs/tests/test_wcs.py::test_sip', 'astropy/wcs/tests/test_wcs.py::test_printwcs', 'astropy/wcs/tests/test_wcs.py::test_invalid_spherical', 'astropy/wcs/tests/test_wcs.py::test_no_iteration', 'astropy/wcs/tests/test_wcs.py::test_sip_tpv_agreement', 'astropy/wcs/tests/test_wcs.py::test_tpv_copy', 'astropy/wcs/tests/test_wcs.py::test_hst_wcs', 'astropy/wcs/tests/test_wcs.py::test_list_naxis', 'astropy/wcs/tests/test_wcs.py::test_sip_broken', 'astropy/wcs/tests/test_wcs.py::test_no_truncate_crval', 'astropy/wcs/tests/test_wcs.py::test_no_truncate_crval_try2', 'astropy/wcs/tests/test_wcs.py::test_no_truncate_crval_p17', 'astropy/wcs/tests/test_wcs.py::test_no_truncate_using_compare', 'astropy/wcs/tests/test_wcs.py::test_passing_ImageHDU', 'astropy/wcs/tests/test_wcs.py::test_inconsistent_sip', 'astropy/wcs/tests/test_wcs.py::test_bounds_check', 'astropy/wcs/tests/test_wcs.py::test_naxis', 'astropy/wcs/tests/test_wcs.py::test_sip_with_altkey', 'astropy/wcs/tests/test_wcs.py::test_to_fits_1', 'astropy/wcs/tests/test_wcs.py::test_keyedsip'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for astropy__astropy-7746: resolved: False
2024-07-03 13:13:55,096 - INFO - Attempting to stop container sweb.eval.astropy__astropy-7746.evaluation_164340...
2024-07-03 13:13:55,600 - INFO - Attempting to remove container sweb.eval.astropy__astropy-7746.evaluation_164340...
2024-07-03 13:13:55,657 - INFO - Container sweb.eval.astropy__astropy-7746.evaluation_164340 removed.
