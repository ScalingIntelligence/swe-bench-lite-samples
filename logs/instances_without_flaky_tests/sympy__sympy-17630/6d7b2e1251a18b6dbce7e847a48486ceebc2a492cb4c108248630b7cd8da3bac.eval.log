2024-07-03 03:11:10,357 - INFO - Environment image sweb.env.x86_64.c795f4b88616b8462021ed:latest found for sympy__sympy-17630
Building instance image sweb.eval.x86_64.sympy__sympy-17630:latest for sympy__sympy-17630
2024-07-03 03:11:10,358 - INFO - Image sweb.eval.x86_64.sympy__sympy-17630:latest already exists, skipping build.
2024-07-03 03:11:10,359 - INFO - Creating container for sympy__sympy-17630...
2024-07-03 03:11:10,629 - INFO - Container for sympy__sympy-17630 created: 5799cd4432ea9be27b0e94da3f9c50bd9cecf35d230bdc8941833614aeebe6f8
2024-07-03 03:11:10,762 - INFO - Container for sympy__sympy-17630 started: 5799cd4432ea9be27b0e94da3f9c50bd9cecf35d230bdc8941833614aeebe6f8
2024-07-03 03:11:10,763 - INFO - Intermediate patch for sympy__sympy-17630 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_139137/model_name_managed_by_server/sympy__sympy-17630/patch.diff, now applying to container...
2024-07-03 03:11:10,897 - INFO - >>>>> Applied Patch:
Checking patch sympy/matrices/expressions/blockmatrix.py...
Applied patch sympy/matrices/expressions/blockmatrix.py cleanly.

2024-07-03 03:11:11,297 - INFO - Git diff before:
diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 95302a05ca..db40dc70ae 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -80,6 +80,8 @@ def __new__(cls, *args, **kwargs):
         from sympy.matrices.immutable import ImmutableDenseMatrix
         from sympy.utilities.iterables import is_sequence
         isMat = lambda i: getattr(i, 'is_Matrix', False)
+        if len(args) != 1 or \
+                not is_sequence(args[0]) or \
         if len(args) != 1 or \
                 not is_sequence(args[0]) or \
                 len(set([isMat(r) for r in args[0]])) != 1:
@@ -161,12 +163,21 @@ def structurally_equal(self, other):
             and self.rowblocksizes == other.rowblocksizes
             and self.colblocksizes == other.colblocksizes)
 
-    def _blockmul(self, other):
-        if (isinstance(other, BlockMatrix) and
-                self.colblocksizes == other.rowblocksizes):
-            return BlockMatrix(self.blocks*other.blocks)
-
-        return self * other
+def _blockmul(self, other):
+    if isinstance(other, BlockMatrix) and self.colblocksizes == other.rowblocksizes:
+        from sympy import ZeroMatrix
+        result_blocks = []
+        for i in range(self.blockshape[0]):
+            row = []
+            for j in range(other.blockshape[1]):
+                block_mul_result = ZeroMatrix(self.rowblocksizes[i], other.colblocksizes[j])
+                for k in range(self.blockshape[1]):
+                    block_mul_result += self.blocks[i, k] * other.blocks[k, j]
+                row.append(block_mul_result)
+            result_blocks.append(row)
+        return BlockMatrix(result_blocks)
+
+    return self * other
 
     def _blockadd(self, other):
         if (isinstance(other, BlockMatrix)
2024-07-03 03:11:11,297 - INFO - Eval script for sympy__sympy-17630 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_139137/model_name_managed_by_server/sympy__sympy-17630/patch.diff, now applying to container...
2024-07-03 03:11:13,915 - INFO - Test output for sympy__sympy-17630 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_139137/model_name_managed_by_server/sympy__sympy-17630/test_output.txt
2024-07-03 03:11:13,956 - INFO - Git diff after:
diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 95302a05ca..db40dc70ae 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -80,6 +80,8 @@ def __new__(cls, *args, **kwargs):
         from sympy.matrices.immutable import ImmutableDenseMatrix
         from sympy.utilities.iterables import is_sequence
         isMat = lambda i: getattr(i, 'is_Matrix', False)
+        if len(args) != 1 or \
+                not is_sequence(args[0]) or \
         if len(args) != 1 or \
                 not is_sequence(args[0]) or \
                 len(set([isMat(r) for r in args[0]])) != 1:
@@ -161,12 +163,21 @@ def structurally_equal(self, other):
             and self.rowblocksizes == other.rowblocksizes
             and self.colblocksizes == other.colblocksizes)
 
-    def _blockmul(self, other):
-        if (isinstance(other, BlockMatrix) and
-                self.colblocksizes == other.rowblocksizes):
-            return BlockMatrix(self.blocks*other.blocks)
-
-        return self * other
+def _blockmul(self, other):
+    if isinstance(other, BlockMatrix) and self.colblocksizes == other.rowblocksizes:
+        from sympy import ZeroMatrix
+        result_blocks = []
+        for i in range(self.blockshape[0]):
+            row = []
+            for j in range(other.blockshape[1]):
+                block_mul_result = ZeroMatrix(self.rowblocksizes[i], other.colblocksizes[j])
+                for k in range(self.blockshape[1]):
+                    block_mul_result += self.blocks[i, k] * other.blocks[k, j]
+                row.append(block_mul_result)
+            result_blocks.append(row)
+        return BlockMatrix(result_blocks)
+
+    return self * other
 
     def _blockadd(self, other):
         if (isinstance(other, BlockMatrix)
2024-07-03 03:11:13,956 - INFO - Grading answer for sympy__sympy-17630...
2024-07-03 03:11:13,957 - INFO - report: {'sympy__sympy-17630': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_issue_17624', 'test_zero_matrix_add']}, 'PASS_TO_PASS': {'success': [], 'failure': ['test_bc_matmul', 'test_bc_matadd', 'test_bc_transpose', 'test_bc_dist_diag', 'test_block_plus_ident', 'test_BlockMatrix', 'test_block_collapse_explicit_matrices', 'test_BlockMatrix_trace', 'test_BlockMatrix_Determinant', 'test_squareBlockMatrix', 'test_BlockDiagMatrix', 'test_blockcut', 'test_reblock_2x2', 'test_deblock', 'test_sort_key', 'test_matadd_sympify', 'test_matadd_of_matrices', 'test_doit_args', 'test_generic_identity']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for sympy__sympy-17630: resolved: False
2024-07-03 03:11:13,957 - INFO - Attempting to stop container sweb.eval.sympy__sympy-17630.evaluation_139137...
2024-07-03 03:11:14,293 - INFO - Attempting to remove container sweb.eval.sympy__sympy-17630.evaluation_139137...
2024-07-03 03:11:14,332 - INFO - Container sweb.eval.sympy__sympy-17630.evaluation_139137 removed.
