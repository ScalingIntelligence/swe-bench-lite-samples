2024-07-03 10:47:53,598 - INFO - Environment image sweb.env.x86_64.e83e37f52c09532c62acfb:latest found for django__django-13321
Building instance image sweb.eval.x86_64.django__django-13321:latest for django__django-13321
2024-07-03 10:47:53,600 - INFO - Image sweb.eval.x86_64.django__django-13321:latest already exists, skipping build.
2024-07-03 10:47:53,600 - INFO - Creating container for django__django-13321...
2024-07-03 10:47:54,221 - INFO - Container for django__django-13321 created: 40c067b7bcc4e9654bcb74739acfc7786f04a1896dd1c77c18f6e1aab4075a52
2024-07-03 10:47:54,857 - INFO - Container for django__django-13321 started: 40c067b7bcc4e9654bcb74739acfc7786f04a1896dd1c77c18f6e1aab4075a52
2024-07-03 10:47:54,858 - INFO - Intermediate patch for django__django-13321 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_151855/model_name_managed_by_server/django__django-13321/patch.diff, now applying to container...
2024-07-03 10:47:55,192 - INFO - >>>>> Applied Patch:
Checking patch django/contrib/sessions/backends/cache.py...
Checking patch django/contrib/sessions/backends/db.py...
Checking patch django/contrib/sessions/backends/file.py...
Checking patch django/contrib/sessions/backends/signed_cookies.py...
Applied patch django/contrib/sessions/backends/cache.py cleanly.
Applied patch django/contrib/sessions/backends/db.py cleanly.
Applied patch django/contrib/sessions/backends/file.py cleanly.
Applied patch django/contrib/sessions/backends/signed_cookies.py cleanly.

2024-07-03 10:47:56,878 - INFO - Git diff before:
diff --git a/django/contrib/sessions/backends/cache.py b/django/contrib/sessions/backends/cache.py
index 860d3a46c5..187eece2cd 100644
--- a/django/contrib/sessions/backends/cache.py
+++ b/django/contrib/sessions/backends/cache.py
@@ -3,6 +3,8 @@ from django.contrib.sessions.backends.base import (
     CreateError, SessionBase, UpdateError,
 )
 from django.core.cache import caches
+from django.core import signing
+import binascii
 
 KEY_PREFIX = "django.contrib.sessions.cache"
 
@@ -28,8 +30,12 @@ class SessionStore(SessionBase):
             # Some backends (e.g. memcache) raise an exception on invalid
             # cache keys. If this happens, reset the session. See #17810.
             session_data = None
+
         if session_data is not None:
-            return session_data
+            try:
+                return self.decode(session_data)
+            except (signing.BadSignature, binascii.Error):
+                self.create()
         self._session_key = None
         return {}
 
diff --git a/django/contrib/sessions/backends/db.py b/django/contrib/sessions/backends/db.py
index 7c905a2c99..cf07b658e4 100644
--- a/django/contrib/sessions/backends/db.py
+++ b/django/contrib/sessions/backends/db.py
@@ -7,6 +7,8 @@ from django.core.exceptions import SuspiciousOperation
 from django.db import DatabaseError, IntegrityError, router, transaction
 from django.utils import timezone
 from django.utils.functional import cached_property
+from django.core import signing
+import binascii
 
 
 class SessionStore(SessionBase):
@@ -40,8 +42,12 @@ class SessionStore(SessionBase):
             self._session_key = None
 
     def load(self):
-        s = self._get_session_from_db()
-        return self.decode(s.session_data) if s else {}
+        try:
+            s = self._get_session_from_db()
+            return self.decode(s.session_data) if s else {}
+        except (signing.BadSignature, binascii.Error):
+            self.create()
+            return {}
 
     def exists(self, session_key):
         return self.model.objects.filter(session_key=session_key).exists()
diff --git a/django/contrib/sessions/backends/file.py b/django/contrib/sessions/backends/file.py
index cc5f93a8ff..88b19f2766 100644
--- a/django/contrib/sessions/backends/file.py
+++ b/django/contrib/sessions/backends/file.py
@@ -11,6 +11,8 @@ from django.contrib.sessions.backends.base import (
 from django.contrib.sessions.exceptions import InvalidSessionKey
 from django.core.exceptions import ImproperlyConfigured, SuspiciousOperation
 from django.utils import timezone
+from django.core import signing
+import binascii
 
 
 class SessionStore(SessionBase):
@@ -82,7 +84,7 @@ class SessionStore(SessionBase):
             if file_data:
                 try:
                     session_data = self.decode(file_data)
-                except (EOFError, SuspiciousOperation) as e:
+                except (EOFError, SuspiciousOperation, signing.BadSignature, binascii.Error) as e:
                     if isinstance(e, SuspiciousOperation):
                         logger = logging.getLogger('django.security.%s' % e.__class__.__name__)
                         logger.warning(str(e))
diff --git a/django/contrib/sessions/backends/signed_cookies.py b/django/contrib/sessions/backends/signed_cookies.py
index 8942df1ea4..8d975c0949 100644
--- a/django/contrib/sessions/backends/signed_cookies.py
+++ b/django/contrib/sessions/backends/signed_cookies.py
@@ -1,5 +1,6 @@
 from django.contrib.sessions.backends.base import SessionBase
 from django.core import signing
+import binascii
 
 
 class SessionStore(SessionBase):
@@ -18,9 +19,11 @@ class SessionStore(SessionBase):
                 max_age=self.get_session_cookie_age(),
                 salt='django.contrib.sessions.backends.signed_cookies',
             )
+        except (signing.BadSignature, binascii.Error):
+            # BadSignature or binascii.Error exceptions. If any of these happen, reset the session.
+            self.create()
         except Exception:
-            # BadSignature, ValueError, or unpickling exceptions. If any of
-            # these happen, reset the session.
+            # Other exceptions, reset the session.
             self.create()
         return {}
2024-07-03 10:47:56,878 - INFO - Eval script for django__django-13321 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_151855/model_name_managed_by_server/django__django-13321/patch.diff, now applying to container...
2024-07-03 10:49:05,926 - INFO - Test output for django__django-13321 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_151855/model_name_managed_by_server/django__django-13321/test_output.txt
2024-07-03 10:49:06,025 - INFO - Git diff after:
diff --git a/django/contrib/sessions/backends/cache.py b/django/contrib/sessions/backends/cache.py
index 860d3a46c5..187eece2cd 100644
--- a/django/contrib/sessions/backends/cache.py
+++ b/django/contrib/sessions/backends/cache.py
@@ -3,6 +3,8 @@ from django.contrib.sessions.backends.base import (
     CreateError, SessionBase, UpdateError,
 )
 from django.core.cache import caches
+from django.core import signing
+import binascii
 
 KEY_PREFIX = "django.contrib.sessions.cache"
 
@@ -28,8 +30,12 @@ class SessionStore(SessionBase):
             # Some backends (e.g. memcache) raise an exception on invalid
             # cache keys. If this happens, reset the session. See #17810.
             session_data = None
+
         if session_data is not None:
-            return session_data
+            try:
+                return self.decode(session_data)
+            except (signing.BadSignature, binascii.Error):
+                self.create()
         self._session_key = None
         return {}
 
diff --git a/django/contrib/sessions/backends/db.py b/django/contrib/sessions/backends/db.py
index 7c905a2c99..cf07b658e4 100644
--- a/django/contrib/sessions/backends/db.py
+++ b/django/contrib/sessions/backends/db.py
@@ -7,6 +7,8 @@ from django.core.exceptions import SuspiciousOperation
 from django.db import DatabaseError, IntegrityError, router, transaction
 from django.utils import timezone
 from django.utils.functional import cached_property
+from django.core import signing
+import binascii
 
 
 class SessionStore(SessionBase):
@@ -40,8 +42,12 @@ class SessionStore(SessionBase):
             self._session_key = None
 
     def load(self):
-        s = self._get_session_from_db()
-        return self.decode(s.session_data) if s else {}
+        try:
+            s = self._get_session_from_db()
+            return self.decode(s.session_data) if s else {}
+        except (signing.BadSignature, binascii.Error):
+            self.create()
+            return {}
 
     def exists(self, session_key):
         return self.model.objects.filter(session_key=session_key).exists()
diff --git a/django/contrib/sessions/backends/file.py b/django/contrib/sessions/backends/file.py
index cc5f93a8ff..88b19f2766 100644
--- a/django/contrib/sessions/backends/file.py
+++ b/django/contrib/sessions/backends/file.py
@@ -11,6 +11,8 @@ from django.contrib.sessions.backends.base import (
 from django.contrib.sessions.exceptions import InvalidSessionKey
 from django.core.exceptions import ImproperlyConfigured, SuspiciousOperation
 from django.utils import timezone
+from django.core import signing
+import binascii
 
 
 class SessionStore(SessionBase):
@@ -82,7 +84,7 @@ class SessionStore(SessionBase):
             if file_data:
                 try:
                     session_data = self.decode(file_data)
-                except (EOFError, SuspiciousOperation) as e:
+                except (EOFError, SuspiciousOperation, signing.BadSignature, binascii.Error) as e:
                     if isinstance(e, SuspiciousOperation):
                         logger = logging.getLogger('django.security.%s' % e.__class__.__name__)
                         logger.warning(str(e))
diff --git a/django/contrib/sessions/backends/signed_cookies.py b/django/contrib/sessions/backends/signed_cookies.py
index 8942df1ea4..8d975c0949 100644
--- a/django/contrib/sessions/backends/signed_cookies.py
+++ b/django/contrib/sessions/backends/signed_cookies.py
@@ -1,5 +1,6 @@
 from django.contrib.sessions.backends.base import SessionBase
 from django.core import signing
+import binascii
 
 
 class SessionStore(SessionBase):
@@ -18,9 +19,11 @@ class SessionStore(SessionBase):
                 max_age=self.get_session_cookie_age(),
                 salt='django.contrib.sessions.backends.signed_cookies',
             )
+        except (signing.BadSignature, binascii.Error):
+            # BadSignature or binascii.Error exceptions. If any of these happen, reset the session.
+            self.create()
         except Exception:
-            # BadSignature, ValueError, or unpickling exceptions. If any of
-            # these happen, reset the session.
+            # Other exceptions, reset the session.
             self.create()
         return {}
2024-07-03 10:49:06,025 - INFO - Grading answer for django__django-13321...
2024-07-03 10:49:06,031 - INFO - report: {'django__django-13321': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': ['test_clear (sessions_tests.tests.CookieSessionTests)', 'test_custom_expiry_datetime (sessions_tests.tests.CookieSessionTests)', 'test_custom_expiry_reset (sessions_tests.tests.CookieSessionTests)', 'test_custom_expiry_seconds (sessions_tests.tests.CookieSessionTests)', 'test_custom_expiry_timedelta (sessions_tests.tests.CookieSessionTests)', 'test_cycle (sessions_tests.tests.CookieSessionTests)', 'test_cycle_with_no_session_cache (sessions_tests.tests.CookieSessionTests)', 'test_decode (sessions_tests.tests.CookieSessionTests)', 'test_default_expiry (sessions_tests.tests.CookieSessionTests)', 'test_default_hashing_algorith_legacy_decode (sessions_tests.tests.CookieSessionTests)', 'test_delete (sessions_tests.tests.CookieSessionTests)', 'test_flush (sessions_tests.tests.CookieSessionTests)', 'test_get_empty (sessions_tests.tests.CookieSessionTests)', 'test_get_expire_at_browser_close (sessions_tests.tests.CookieSessionTests)', 'test_has_key (sessions_tests.tests.CookieSessionTests)', 'test_invalid_key (sessions_tests.tests.CookieSessionTests)', 'test_items (sessions_tests.tests.CookieSessionTests)', 'test_keys (sessions_tests.tests.CookieSessionTests)', 'test_new_session (sessions_tests.tests.CookieSessionTests)', 'test_pop (sessions_tests.tests.CookieSessionTests)', 'test_pop_default (sessions_tests.tests.CookieSessionTests)', 'test_pop_default_named_argument (sessions_tests.tests.CookieSessionTests)', 'test_pop_no_default_keyerror_raised (sessions_tests.tests.CookieSessionTests)', 'test_save (sessions_tests.tests.CookieSessionTests)', 'test_save_doesnt_clear_data (sessions_tests.tests.CookieSessionTests)', 'Falsey values (Such as an empty string) are rejected.', 'test_session_key_is_read_only (sessions_tests.tests.CookieSessionTests)', 'Strings shorter than 8 characters are rejected.', 'Strings of length 8 and up are accepted and stored.', 'test_setdefault (sessions_tests.tests.CookieSessionTests)', 'test_store (sessions_tests.tests.CookieSessionTests)', 'test_unpickling_exception (sessions_tests.tests.CookieSessionTests)', 'test_update (sessions_tests.tests.CookieSessionTests)', 'test_values (sessions_tests.tests.CookieSessionTests)', 'test_actual_expiry (sessions_tests.tests.CacheSessionTests)', 'test_clear (sessions_tests.tests.CacheSessionTests)', 'test_create_and_save (sessions_tests.tests.CacheSessionTests)', 'test_custom_expiry_datetime (sessions_tests.tests.CacheSessionTests)', 'test_custom_expiry_reset (sessions_tests.tests.CacheSessionTests)', 'test_custom_expiry_seconds (sessions_tests.tests.CacheSessionTests)', 'test_custom_expiry_timedelta (sessions_tests.tests.CacheSessionTests)', 'test_cycle (sessions_tests.tests.CacheSessionTests)', 'test_decode (sessions_tests.tests.CacheSessionTests)', 'test_default_cache (sessions_tests.tests.CacheSessionTests)', 'test_default_expiry (sessions_tests.tests.CacheSessionTests)', 'test_default_hashing_algorith_legacy_decode (sessions_tests.tests.CacheSessionTests)', 'test_delete (sessions_tests.tests.CacheSessionTests)', 'test_flush (sessions_tests.tests.CacheSessionTests)', 'test_get_empty (sessions_tests.tests.CacheSessionTests)', 'test_get_expire_at_browser_close (sessions_tests.tests.CacheSessionTests)', 'test_has_key (sessions_tests.tests.CacheSessionTests)', 'test_invalid_key (sessions_tests.tests.CacheSessionTests)', 'test_items (sessions_tests.tests.CacheSessionTests)', 'test_keys (sessions_tests.tests.CacheSessionTests)', 'test_load_overlong_key (sessions_tests.tests.CacheSessionTests)', 'test_new_session (sessions_tests.tests.CacheSessionTests)', 'test_non_default_cache (sessions_tests.tests.CacheSessionTests)', 'test_pop (sessions_tests.tests.CacheSessionTests)', 'test_pop_default (sessions_tests.tests.CacheSessionTests)', 'test_pop_default_named_argument (sessions_tests.tests.CacheSessionTests)', 'test_pop_no_default_keyerror_raised (sessions_tests.tests.CacheSessionTests)', 'test_save (sessions_tests.tests.CacheSessionTests)', 'test_save_doesnt_clear_data (sessions_tests.tests.CacheSessionTests)', 'test_session_key_is_read_only (sessions_tests.tests.CacheSessionTests)', 'test_session_load_does_not_create_record (sessions_tests.tests.CacheSessionTests)', 'test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.CacheSessionTests)', 'test_setdefault (sessions_tests.tests.CacheSessionTests)', 'test_store (sessions_tests.tests.CacheSessionTests)', 'test_update (sessions_tests.tests.CacheSessionTests)', 'test_values (sessions_tests.tests.CacheSessionTests)', 'test_empty_session_saved (sessions_tests.tests.SessionMiddlewareTests)', 'test_flush_empty_without_session_cookie_doesnt_set_cookie (sessions_tests.tests.SessionMiddlewareTests)', 'test_httponly_session_cookie (sessions_tests.tests.SessionMiddlewareTests)', 'test_no_httponly_session_cookie (sessions_tests.tests.SessionMiddlewareTests)', 'test_samesite_session_cookie (sessions_tests.tests.SessionMiddlewareTests)', 'test_secure_session_cookie (sessions_tests.tests.SessionMiddlewareTests)', 'test_session_delete_on_end (sessions_tests.tests.SessionMiddlewareTests)', 'test_session_delete_on_end_with_custom_domain_and_path (sessions_tests.tests.SessionMiddlewareTests)', 'test_session_save_on_500 (sessions_tests.tests.SessionMiddlewareTests)', 'test_session_update_error_redirect (sessions_tests.tests.SessionMiddlewareTests)', 'test_actual_expiry (sessions_tests.tests.FileSessionPathLibTests)', 'test_clear (sessions_tests.tests.FileSessionPathLibTests)', 'test_clearsessions_command (sessions_tests.tests.FileSessionPathLibTests)', 'test_configuration_check (sessions_tests.tests.FileSessionPathLibTests)', 'test_custom_expiry_datetime (sessions_tests.tests.FileSessionPathLibTests)', 'test_custom_expiry_reset (sessions_tests.tests.FileSessionPathLibTests)', 'test_custom_expiry_seconds (sessions_tests.tests.FileSessionPathLibTests)', 'test_custom_expiry_timedelta (sessions_tests.tests.FileSessionPathLibTests)', 'test_cycle (sessions_tests.tests.FileSessionPathLibTests)', 'test_cycle_with_no_session_cache (sessions_tests.tests.FileSessionPathLibTests)', 'test_decode (sessions_tests.tests.FileSessionPathLibTests)', 'test_default_expiry (sessions_tests.tests.FileSessionPathLibTests)', 'test_default_hashing_algorith_legacy_decode (sessions_tests.tests.FileSessionPathLibTests)', 'test_delete (sessions_tests.tests.FileSessionPathLibTests)', 'test_flush (sessions_tests.tests.FileSessionPathLibTests)', 'test_get_empty (sessions_tests.tests.FileSessionPathLibTests)', 'test_get_expire_at_browser_close (sessions_tests.tests.FileSessionPathLibTests)', 'test_has_key (sessions_tests.tests.FileSessionPathLibTests)', 'test_invalid_key (sessions_tests.tests.FileSessionPathLibTests)', 'test_invalid_key_backslash (sessions_tests.tests.FileSessionPathLibTests)', 'test_invalid_key_forwardslash (sessions_tests.tests.FileSessionPathLibTests)', 'test_items (sessions_tests.tests.FileSessionPathLibTests)', 'test_keys (sessions_tests.tests.FileSessionPathLibTests)', 'test_new_session (sessions_tests.tests.FileSessionPathLibTests)', 'test_pop (sessions_tests.tests.FileSessionPathLibTests)', 'test_pop_default (sessions_tests.tests.FileSessionPathLibTests)', 'test_pop_default_named_argument (sessions_tests.tests.FileSessionPathLibTests)', 'test_pop_no_default_keyerror_raised (sessions_tests.tests.FileSessionPathLibTests)', 'test_save (sessions_tests.tests.FileSessionPathLibTests)', 'test_save_doesnt_clear_data (sessions_tests.tests.FileSessionPathLibTests)', 'test_session_key_is_read_only (sessions_tests.tests.FileSessionPathLibTests)', 'test_session_load_does_not_create_record (sessions_tests.tests.FileSessionPathLibTests)', 'test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.FileSessionPathLibTests)', 'test_setdefault (sessions_tests.tests.FileSessionPathLibTests)', 'test_store (sessions_tests.tests.FileSessionPathLibTests)', 'test_update (sessions_tests.tests.FileSessionPathLibTests)', 'test_values (sessions_tests.tests.FileSessionPathLibTests)', 'test_actual_expiry (sessions_tests.tests.FileSessionTests)', 'test_clear (sessions_tests.tests.FileSessionTests)', 'test_clearsessions_command (sessions_tests.tests.FileSessionTests)', 'test_configuration_check (sessions_tests.tests.FileSessionTests)', 'test_custom_expiry_datetime (sessions_tests.tests.FileSessionTests)', 'test_custom_expiry_reset (sessions_tests.tests.FileSessionTests)', 'test_custom_expiry_seconds (sessions_tests.tests.FileSessionTests)', 'test_custom_expiry_timedelta (sessions_tests.tests.FileSessionTests)', 'test_cycle (sessions_tests.tests.FileSessionTests)', 'test_cycle_with_no_session_cache (sessions_tests.tests.FileSessionTests)', 'test_decode (sessions_tests.tests.FileSessionTests)', 'test_default_expiry (sessions_tests.tests.FileSessionTests)', 'test_default_hashing_algorith_legacy_decode (sessions_tests.tests.FileSessionTests)', 'test_delete (sessions_tests.tests.FileSessionTests)', 'test_flush (sessions_tests.tests.FileSessionTests)', 'test_get_empty (sessions_tests.tests.FileSessionTests)', 'test_get_expire_at_browser_close (sessions_tests.tests.FileSessionTests)', 'test_has_key (sessions_tests.tests.FileSessionTests)', 'test_invalid_key (sessions_tests.tests.FileSessionTests)', 'test_invalid_key_backslash (sessions_tests.tests.FileSessionTests)', 'test_invalid_key_forwardslash (sessions_tests.tests.FileSessionTests)', 'test_items (sessions_tests.tests.FileSessionTests)', 'test_keys (sessions_tests.tests.FileSessionTests)', 'test_new_session (sessions_tests.tests.FileSessionTests)', 'test_pop (sessions_tests.tests.FileSessionTests)', 'test_pop_default (sessions_tests.tests.FileSessionTests)', 'test_pop_default_named_argument (sessions_tests.tests.FileSessionTests)', 'test_pop_no_default_keyerror_raised (sessions_tests.tests.FileSessionTests)', 'test_save (sessions_tests.tests.FileSessionTests)', 'test_save_doesnt_clear_data (sessions_tests.tests.FileSessionTests)', 'test_session_key_is_read_only (sessions_tests.tests.FileSessionTests)', 'test_session_load_does_not_create_record (sessions_tests.tests.FileSessionTests)', 'test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.FileSessionTests)', 'test_setdefault (sessions_tests.tests.FileSessionTests)', 'test_store (sessions_tests.tests.FileSessionTests)', 'test_update (sessions_tests.tests.FileSessionTests)', 'test_values (sessions_tests.tests.FileSessionTests)', 'test_actual_expiry (sessions_tests.tests.DatabaseSessionTests)', 'test_clear (sessions_tests.tests.DatabaseSessionTests)', 'test_clearsessions_command (sessions_tests.tests.DatabaseSessionTests)', 'test_custom_expiry_datetime (sessions_tests.tests.DatabaseSessionTests)', 'test_custom_expiry_reset (sessions_tests.tests.DatabaseSessionTests)', 'test_custom_expiry_seconds (sessions_tests.tests.DatabaseSessionTests)', 'test_custom_expiry_timedelta (sessions_tests.tests.DatabaseSessionTests)', 'test_cycle (sessions_tests.tests.DatabaseSessionTests)', 'test_cycle_with_no_session_cache (sessions_tests.tests.DatabaseSessionTests)', 'test_decode (sessions_tests.tests.DatabaseSessionTests)', 'test_default_expiry (sessions_tests.tests.DatabaseSessionTests)', 'test_default_hashing_algorith_legacy_decode (sessions_tests.tests.DatabaseSessionTests)', 'test_delete (sessions_tests.tests.DatabaseSessionTests)', 'test_flush (sessions_tests.tests.DatabaseSessionTests)', 'test_get_empty (sessions_tests.tests.DatabaseSessionTests)', 'test_get_expire_at_browser_close (sessions_tests.tests.DatabaseSessionTests)', 'test_has_key (sessions_tests.tests.DatabaseSessionTests)', 'test_invalid_key (sessions_tests.tests.DatabaseSessionTests)', 'test_items (sessions_tests.tests.DatabaseSessionTests)', 'test_keys (sessions_tests.tests.DatabaseSessionTests)', 'test_new_session (sessions_tests.tests.DatabaseSessionTests)', 'test_pop (sessions_tests.tests.DatabaseSessionTests)', 'test_pop_default (sessions_tests.tests.DatabaseSessionTests)', 'test_pop_default_named_argument (sessions_tests.tests.DatabaseSessionTests)', 'test_pop_no_default_keyerror_raised (sessions_tests.tests.DatabaseSessionTests)', 'test_save (sessions_tests.tests.DatabaseSessionTests)', 'test_save_doesnt_clear_data (sessions_tests.tests.DatabaseSessionTests)', 'test_session_get_decoded (sessions_tests.tests.DatabaseSessionTests)', 'test_session_key_is_read_only (sessions_tests.tests.DatabaseSessionTests)', 'test_session_load_does_not_create_record (sessions_tests.tests.DatabaseSessionTests)', 'test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.DatabaseSessionTests)', 'Session repr should be the session key.', 'test_sessionmanager_save (sessions_tests.tests.DatabaseSessionTests)', 'test_setdefault (sessions_tests.tests.DatabaseSessionTests)', 'test_store (sessions_tests.tests.DatabaseSessionTests)', 'test_update (sessions_tests.tests.DatabaseSessionTests)', 'test_values (sessions_tests.tests.DatabaseSessionTests)', 'test_actual_expiry (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_clear (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_clearsessions_command (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_custom_expiry_datetime (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_custom_expiry_reset (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_custom_expiry_seconds (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_custom_expiry_timedelta (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_cycle (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_cycle_with_no_session_cache (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_decode (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_default_expiry (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_default_hashing_algorith_legacy_decode (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_delete (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_extra_session_field (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_flush (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_get_empty (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_get_expire_at_browser_close (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_has_key (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_invalid_key (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_items (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_keys (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_new_session (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_pop (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_pop_default (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_pop_default_named_argument (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_pop_no_default_keyerror_raised (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_save (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_save_doesnt_clear_data (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_session_get_decoded (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_session_key_is_read_only (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_session_load_does_not_create_record (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_sessionmanager_save (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_setdefault (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_store (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_update (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_values (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_actual_expiry (sessions_tests.tests.CacheDBSessionTests)', 'test_clear (sessions_tests.tests.CacheDBSessionTests)', 'test_custom_expiry_datetime (sessions_tests.tests.CacheDBSessionTests)', 'test_custom_expiry_reset (sessions_tests.tests.CacheDBSessionTests)', 'test_custom_expiry_seconds (sessions_tests.tests.CacheDBSessionTests)', 'test_custom_expiry_timedelta (sessions_tests.tests.CacheDBSessionTests)', 'test_cycle (sessions_tests.tests.CacheDBSessionTests)', 'test_cycle_with_no_session_cache (sessions_tests.tests.CacheDBSessionTests)', 'test_decode (sessions_tests.tests.CacheDBSessionTests)', 'test_default_expiry (sessions_tests.tests.CacheDBSessionTests)', 'test_default_hashing_algorith_legacy_decode (sessions_tests.tests.CacheDBSessionTests)', 'test_delete (sessions_tests.tests.CacheDBSessionTests)', 'test_exists_searches_cache_first (sessions_tests.tests.CacheDBSessionTests)', 'test_flush (sessions_tests.tests.CacheDBSessionTests)', 'test_get_empty (sessions_tests.tests.CacheDBSessionTests)', 'test_get_expire_at_browser_close (sessions_tests.tests.CacheDBSessionTests)', 'test_has_key (sessions_tests.tests.CacheDBSessionTests)', 'test_invalid_key (sessions_tests.tests.CacheDBSessionTests)', 'test_items (sessions_tests.tests.CacheDBSessionTests)', 'test_keys (sessions_tests.tests.CacheDBSessionTests)', 'test_load_overlong_key (sessions_tests.tests.CacheDBSessionTests)', 'test_new_session (sessions_tests.tests.CacheDBSessionTests)', 'test_non_default_cache (sessions_tests.tests.CacheDBSessionTests)', 'test_pop (sessions_tests.tests.CacheDBSessionTests)', 'test_pop_default (sessions_tests.tests.CacheDBSessionTests)', 'test_pop_default_named_argument (sessions_tests.tests.CacheDBSessionTests)', 'test_pop_no_default_keyerror_raised (sessions_tests.tests.CacheDBSessionTests)', 'test_save (sessions_tests.tests.CacheDBSessionTests)', 'test_save_doesnt_clear_data (sessions_tests.tests.CacheDBSessionTests)', 'test_session_key_is_read_only (sessions_tests.tests.CacheDBSessionTests)', 'test_session_load_does_not_create_record (sessions_tests.tests.CacheDBSessionTests)', 'test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.CacheDBSessionTests)', 'test_setdefault (sessions_tests.tests.CacheDBSessionTests)', 'test_store (sessions_tests.tests.CacheDBSessionTests)', 'test_update (sessions_tests.tests.CacheDBSessionTests)', 'test_values (sessions_tests.tests.CacheDBSessionTests)', 'test_actual_expiry (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_clear (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_custom_expiry_datetime (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_custom_expiry_reset (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_custom_expiry_seconds (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_custom_expiry_timedelta (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_cycle (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_cycle_with_no_session_cache (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_decode (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_default_expiry (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_default_hashing_algorith_legacy_decode (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_delete (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_exists_searches_cache_first (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_flush (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_get_empty (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_get_expire_at_browser_close (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_has_key (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_invalid_key (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_items (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_keys (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_load_overlong_key (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_new_session (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_non_default_cache (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_pop (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_pop_default (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_pop_default_named_argument (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_pop_no_default_keyerror_raised (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_save (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_save_doesnt_clear_data (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_session_key_is_read_only (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_session_load_does_not_create_record (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_setdefault (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_store (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_update (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_values (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_actual_expiry (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_clear (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_clearsessions_command (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_custom_expiry_datetime (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_custom_expiry_reset (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_custom_expiry_seconds (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_custom_expiry_timedelta (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_cycle (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_cycle_with_no_session_cache (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_decode (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_default_expiry (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_default_hashing_algorith_legacy_decode (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_delete (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_flush (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_get_empty (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_get_expire_at_browser_close (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_has_key (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_invalid_key (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_items (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_keys (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_new_session (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_pop (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_pop_default (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_pop_default_named_argument (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_pop_no_default_keyerror_raised (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_save (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_save_doesnt_clear_data (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_session_get_decoded (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_session_key_is_read_only (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_session_load_does_not_create_record (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_sessionmanager_save (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_setdefault (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_store (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_update (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_values (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)'], 'failure': ['test_decode_failure_logged_to_security (sessions_tests.tests.CookieSessionTests)', 'test_decode_legacy (sessions_tests.tests.CookieSessionTests)', 'test_cycle_with_no_session_cache (sessions_tests.tests.CacheSessionTests)', 'test_decode_failure_logged_to_security (sessions_tests.tests.CacheSessionTests)', 'test_decode_legacy (sessions_tests.tests.CacheSessionTests)', 'test_decode_failure_logged_to_security (sessions_tests.tests.FileSessionPathLibTests)', 'test_decode_legacy (sessions_tests.tests.FileSessionPathLibTests)', 'test_decode_failure_logged_to_security (sessions_tests.tests.FileSessionTests)', 'test_decode_legacy (sessions_tests.tests.FileSessionTests)', 'test_decode_failure_logged_to_security (sessions_tests.tests.DatabaseSessionTests)', 'test_decode_legacy (sessions_tests.tests.DatabaseSessionTests)', 'test_decode_failure_logged_to_security (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_decode_legacy (sessions_tests.tests.CustomDatabaseSessionTests)', 'test_decode_failure_logged_to_security (sessions_tests.tests.CacheDBSessionTests)', 'test_decode_legacy (sessions_tests.tests.CacheDBSessionTests)', 'test_decode_failure_logged_to_security (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_decode_legacy (sessions_tests.tests.CacheDBSessionWithTimeZoneTests)', 'test_decode_failure_logged_to_security (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)', 'test_decode_legacy (sessions_tests.tests.DatabaseSessionWithTimeZoneTests)']}, 'PASS_TO_PASS': {'success': [], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-13321: resolved: False
2024-07-03 10:49:06,031 - INFO - Attempting to stop container sweb.eval.django__django-13321.evaluation_151855...
2024-07-03 10:49:09,393 - INFO - Attempting to remove container sweb.eval.django__django-13321.evaluation_151855...
2024-07-03 10:49:10,303 - INFO - Container sweb.eval.django__django-13321.evaluation_151855 removed.
