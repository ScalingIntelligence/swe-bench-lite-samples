2024-07-03 18:40:54,975 - INFO - Environment image sweb.env.x86_64.c795f4b88616b8462021ed:latest found for sympy__sympy-18621
Building instance image sweb.eval.x86_64.sympy__sympy-18621:latest for sympy__sympy-18621
2024-07-03 18:40:54,976 - INFO - Image sweb.eval.x86_64.sympy__sympy-18621:latest already exists, skipping build.
2024-07-03 18:40:54,976 - INFO - Creating container for sympy__sympy-18621...
2024-07-03 18:40:56,686 - INFO - Container for sympy__sympy-18621 created: a081bf464b4982bef89d5aaeb3b90f0fb46afa2b348af445db0267cf46d38905
2024-07-03 18:41:22,981 - INFO - Container for sympy__sympy-18621 started: a081bf464b4982bef89d5aaeb3b90f0fb46afa2b348af445db0267cf46d38905
2024-07-03 18:41:22,981 - INFO - Intermediate patch for sympy__sympy-18621 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_189133/model_name_managed_by_server/sympy__sympy-18621/patch.diff, now applying to container...
2024-07-03 18:41:23,733 - INFO - >>>>> Applied Patch:
Checking patch sympy/matrices/expressions/blockmatrix.py...
Applied patch sympy/matrices/expressions/blockmatrix.py cleanly.

2024-07-03 18:41:24,939 - INFO - Git diff before:
diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 11aebbc59f..e888720359 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -290,37 +290,38 @@ class BlockDiagMatrix(BlockMatrix):
     def __new__(cls, *mats):
         return Basic.__new__(BlockDiagMatrix, *mats)
 
-    @property
-    def diag(self):
-        return self.args
-
-    @property
-    def blocks(self):
-        from sympy.matrices.immutable import ImmutableDenseMatrix
-        mats = self.args
-        data = [[mats[i] if i == j else ZeroMatrix(mats[i].rows, mats[j].cols)
-                        for j in range(len(mats))]
-                        for i in range(len(mats))]
-        return ImmutableDenseMatrix(data)
-
-    @property
-    def shape(self):
-        return (sum(block.rows for block in self.args),
-                sum(block.cols for block in self.args))
-
-    @property
-    def blockshape(self):
-        n = len(self.args)
-        return (n, n)
-
-    @property
-    def rowblocksizes(self):
-        return [block.rows for block in self.args]
-
-    @property
-    def colblocksizes(self):
-        return [block.cols for block in self.args]
-
+@property
+def diag(self):
+    return self.args
+
+@property
+def blocks(self):
+    from sympy.matrices.immutable import ImmutableDenseMatrix
+    mats = self.args
+    if len(mats) == 1:
+        return ImmutableDenseMatrix([[mats[0]]])
+    data = [[mats[i] if i == j else ZeroMatrix(mats[i].rows, mats[j].cols)
+                    for j in range(len(mats))]
+                    for i in range(len(mats))]
+    return ImmutableDenseMatrix(data)
+
+@property
+def shape(self):
+    return (sum(block.rows for block in self.args),
+            sum(block.cols for block in self.args))
+
+@property
+def blockshape(self):
+    n = len(self.args)
+    return (n, n)
+
+@property
+def rowblocksizes(self):
+    return [block.rows for block in self.args]
+
+@property
+def colblocksizes(self):
+    return [block.cols for block in self.args]
     def _eval_inverse(self, expand='ignored'):
         return BlockDiagMatrix(*[mat.inverse() for mat in self.args])
2024-07-03 18:41:24,939 - INFO - Eval script for sympy__sympy-18621 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_189133/model_name_managed_by_server/sympy__sympy-18621/patch.diff, now applying to container...
2024-07-03 18:41:36,218 - INFO - Test output for sympy__sympy-18621 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_189133/model_name_managed_by_server/sympy__sympy-18621/test_output.txt
2024-07-03 18:41:36,268 - INFO - Git diff after:
diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 11aebbc59f..e888720359 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -290,37 +290,38 @@ class BlockDiagMatrix(BlockMatrix):
     def __new__(cls, *mats):
         return Basic.__new__(BlockDiagMatrix, *mats)
 
-    @property
-    def diag(self):
-        return self.args
-
-    @property
-    def blocks(self):
-        from sympy.matrices.immutable import ImmutableDenseMatrix
-        mats = self.args
-        data = [[mats[i] if i == j else ZeroMatrix(mats[i].rows, mats[j].cols)
-                        for j in range(len(mats))]
-                        for i in range(len(mats))]
-        return ImmutableDenseMatrix(data)
-
-    @property
-    def shape(self):
-        return (sum(block.rows for block in self.args),
-                sum(block.cols for block in self.args))
-
-    @property
-    def blockshape(self):
-        n = len(self.args)
-        return (n, n)
-
-    @property
-    def rowblocksizes(self):
-        return [block.rows for block in self.args]
-
-    @property
-    def colblocksizes(self):
-        return [block.cols for block in self.args]
-
+@property
+def diag(self):
+    return self.args
+
+@property
+def blocks(self):
+    from sympy.matrices.immutable import ImmutableDenseMatrix
+    mats = self.args
+    if len(mats) == 1:
+        return ImmutableDenseMatrix([[mats[0]]])
+    data = [[mats[i] if i == j else ZeroMatrix(mats[i].rows, mats[j].cols)
+                    for j in range(len(mats))]
+                    for i in range(len(mats))]
+    return ImmutableDenseMatrix(data)
+
+@property
+def shape(self):
+    return (sum(block.rows for block in self.args),
+            sum(block.cols for block in self.args))
+
+@property
+def blockshape(self):
+    n = len(self.args)
+    return (n, n)
+
+@property
+def rowblocksizes(self):
+    return [block.rows for block in self.args]
+
+@property
+def colblocksizes(self):
+    return [block.cols for block in self.args]
     def _eval_inverse(self, expand='ignored'):
         return BlockDiagMatrix(*[mat.inverse() for mat in self.args])
2024-07-03 18:41:36,268 - INFO - Grading answer for sympy__sympy-18621...
2024-07-03 18:41:36,270 - INFO - report: {'sympy__sympy-18621': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_issue_18618']}, 'PASS_TO_PASS': {'success': ['test_bc_matmul', 'test_bc_matadd', 'test_bc_transpose', 'test_BlockMatrix', 'test_block_collapse_explicit_matrices', 'test_issue_17624', 'test_BlockMatrix_trace', 'test_BlockMatrix_Determinant', 'test_blockcut', 'test_reblock_2x2', 'test_deblock'], 'failure': ['test_bc_dist_diag', 'test_block_plus_ident', 'test_squareBlockMatrix', 'test_BlockDiagMatrix']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for sympy__sympy-18621: resolved: False
2024-07-03 18:41:36,270 - INFO - Attempting to stop container sweb.eval.sympy__sympy-18621.evaluation_189133...
2024-07-03 18:41:39,586 - INFO - Attempting to remove container sweb.eval.sympy__sympy-18621.evaluation_189133...
2024-07-03 18:41:39,993 - INFO - Container sweb.eval.sympy__sympy-18621.evaluation_189133 removed.
