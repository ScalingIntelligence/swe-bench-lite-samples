2024-07-03 18:13:15,527 - INFO - Environment image sweb.env.x86_64.c795f4b88616b8462021ed:latest found for sympy__sympy-18621
Building instance image sweb.eval.x86_64.sympy__sympy-18621:latest for sympy__sympy-18621
2024-07-03 18:13:15,528 - INFO - Image sweb.eval.x86_64.sympy__sympy-18621:latest already exists, skipping build.
2024-07-03 18:13:15,528 - INFO - Creating container for sympy__sympy-18621...
2024-07-03 18:13:18,042 - INFO - Container for sympy__sympy-18621 created: 4e5728d1192d4e8fa3f8bffe5cb7ca10439abba41c54ee0889d26d2eb018b6f1
2024-07-03 18:13:51,124 - INFO - Container for sympy__sympy-18621 started: 4e5728d1192d4e8fa3f8bffe5cb7ca10439abba41c54ee0889d26d2eb018b6f1
2024-07-03 18:13:51,124 - INFO - Intermediate patch for sympy__sympy-18621 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_186800/model_name_managed_by_server/sympy__sympy-18621/patch.diff, now applying to container...
2024-07-03 18:13:52,344 - INFO - >>>>> Applied Patch:
Checking patch sympy/matrices/expressions/blockmatrix.py...
Applied patch sympy/matrices/expressions/blockmatrix.py cleanly.

2024-07-03 18:13:52,989 - INFO - Git diff before:
diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 11aebbc59f..43efc40cde 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -287,8 +287,13 @@ class BlockDiagMatrix(BlockMatrix):
     ========
     sympy.matrices.dense.diag
     """
-    def __new__(cls, *mats):
-        return Basic.__new__(BlockDiagMatrix, *mats)
+def __new__(cls, *mats):
+    if len(mats) == 1:
+        mat = mats[0]
+        if isinstance(mat, MatrixExpr):
+            return mat
+        return Basic.__new__(BlockDiagMatrix, mat)
+    return Basic.__new__(BlockDiagMatrix, *mats)
 
     @property
     def diag(self):
@@ -322,15 +327,15 @@ def colblocksizes(self):
         return [block.cols for block in self.args]
 
     def _eval_inverse(self, expand='ignored'):
-        return BlockDiagMatrix(*[mat.inverse() for mat in self.args])
+        return BlockDiagMatrix(Matrix([[mat.inverse() for mat in self.args]], accept_size=True))
 
     def _eval_transpose(self):
-        return BlockDiagMatrix(*[mat.transpose() for mat in self.args])
+        return BlockDiagMatrix(Matrix([[mat.transpose() for mat in self.args]], accept_size=True))
 
     def _blockmul(self, other):
         if (isinstance(other, BlockDiagMatrix) and
                 self.colblocksizes == other.rowblocksizes):
-            return BlockDiagMatrix(*[a*b for a, b in zip(self.args, other.args)])
+            return BlockDiagMatrix(Matrix([[a*b for a, b in zip(self.args, other.args)]], accept_size=True))
         else:
             return BlockMatrix._blockmul(self, other)
 
@@ -339,7 +344,7 @@ def _blockadd(self, other):
                 self.blockshape == other.blockshape and
                 self.rowblocksizes == other.rowblocksizes and
                 self.colblocksizes == other.colblocksizes):
-            return BlockDiagMatrix(*[a + b for a, b in zip(self.args, other.args)])
+            return BlockDiagMatrix(Matrix([[a + b for a, b in zip(self.args, other.args)]], accept_size=True))
         else:
             return BlockMatrix._blockadd(self, other)
2024-07-03 18:13:53,009 - INFO - Eval script for sympy__sympy-18621 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_186800/model_name_managed_by_server/sympy__sympy-18621/patch.diff, now applying to container...
2024-07-03 18:14:03,399 - INFO - Test output for sympy__sympy-18621 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_186800/model_name_managed_by_server/sympy__sympy-18621/test_output.txt
2024-07-03 18:14:03,448 - INFO - Git diff after:
diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 11aebbc59f..43efc40cde 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -287,8 +287,13 @@ class BlockDiagMatrix(BlockMatrix):
     ========
     sympy.matrices.dense.diag
     """
-    def __new__(cls, *mats):
-        return Basic.__new__(BlockDiagMatrix, *mats)
+def __new__(cls, *mats):
+    if len(mats) == 1:
+        mat = mats[0]
+        if isinstance(mat, MatrixExpr):
+            return mat
+        return Basic.__new__(BlockDiagMatrix, mat)
+    return Basic.__new__(BlockDiagMatrix, *mats)
 
     @property
     def diag(self):
@@ -322,15 +327,15 @@ def colblocksizes(self):
         return [block.cols for block in self.args]
 
     def _eval_inverse(self, expand='ignored'):
-        return BlockDiagMatrix(*[mat.inverse() for mat in self.args])
+        return BlockDiagMatrix(Matrix([[mat.inverse() for mat in self.args]], accept_size=True))
 
     def _eval_transpose(self):
-        return BlockDiagMatrix(*[mat.transpose() for mat in self.args])
+        return BlockDiagMatrix(Matrix([[mat.transpose() for mat in self.args]], accept_size=True))
 
     def _blockmul(self, other):
         if (isinstance(other, BlockDiagMatrix) and
                 self.colblocksizes == other.rowblocksizes):
-            return BlockDiagMatrix(*[a*b for a, b in zip(self.args, other.args)])
+            return BlockDiagMatrix(Matrix([[a*b for a, b in zip(self.args, other.args)]], accept_size=True))
         else:
             return BlockMatrix._blockmul(self, other)
 
@@ -339,7 +344,7 @@ def _blockadd(self, other):
                 self.blockshape == other.blockshape and
                 self.rowblocksizes == other.rowblocksizes and
                 self.colblocksizes == other.colblocksizes):
-            return BlockDiagMatrix(*[a + b for a, b in zip(self.args, other.args)])
+            return BlockDiagMatrix(Matrix([[a + b for a, b in zip(self.args, other.args)]], accept_size=True))
         else:
             return BlockMatrix._blockadd(self, other)
2024-07-03 18:14:03,448 - INFO - Grading answer for sympy__sympy-18621...
2024-07-03 18:14:03,449 - INFO - report: {'sympy__sympy-18621': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_issue_18618']}, 'PASS_TO_PASS': {'success': ['test_bc_matmul', 'test_bc_matadd', 'test_bc_transpose', 'test_BlockMatrix', 'test_block_collapse_explicit_matrices', 'test_issue_17624', 'test_BlockMatrix_trace', 'test_BlockMatrix_Determinant', 'test_blockcut', 'test_reblock_2x2', 'test_deblock'], 'failure': ['test_bc_dist_diag', 'test_block_plus_ident', 'test_squareBlockMatrix', 'test_BlockDiagMatrix']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for sympy__sympy-18621: resolved: False
2024-07-03 18:14:03,449 - INFO - Attempting to stop container sweb.eval.sympy__sympy-18621.evaluation_186800...
2024-07-03 18:14:06,515 - INFO - Attempting to remove container sweb.eval.sympy__sympy-18621.evaluation_186800...
2024-07-03 18:14:06,890 - INFO - Container sweb.eval.sympy__sympy-18621.evaluation_186800 removed.
