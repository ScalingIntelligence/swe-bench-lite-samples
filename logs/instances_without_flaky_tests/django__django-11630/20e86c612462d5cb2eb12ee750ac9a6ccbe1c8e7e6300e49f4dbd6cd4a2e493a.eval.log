2024-07-03 19:26:39,538 - INFO - Environment image sweb.env.x86_64.2baaea72acc974f6c02079:latest found for django__django-11630
Building instance image sweb.eval.x86_64.django__django-11630:latest for django__django-11630
2024-07-03 19:26:39,539 - INFO - Image sweb.eval.x86_64.django__django-11630:latest already exists, skipping build.
2024-07-03 19:26:39,540 - INFO - Creating container for django__django-11630...
2024-07-03 19:26:41,110 - INFO - Container for django__django-11630 created: cc56d0f813912d8a2238480a38ac734d883d49698bcd6867d4caddebb0f8a57f
2024-07-03 19:27:29,339 - INFO - Container for django__django-11630 started: cc56d0f813912d8a2238480a38ac734d883d49698bcd6867d4caddebb0f8a57f
2024-07-03 19:27:29,339 - INFO - Intermediate patch for django__django-11630 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_193324/model_name_managed_by_server/django__django-11630/patch.diff, now applying to container...
2024-07-03 19:27:29,860 - INFO - >>>>> Applied Patch:
Checking patch django/db/models/base.py...
Applied patch django/db/models/base.py cleanly.

2024-07-03 19:27:31,642 - INFO - Git diff before:
diff --git a/django/db/models/base.py b/django/db/models/base.py
index 18ee0b4911..4dedf73d59 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -1429,6 +1429,8 @@ class Model(metaclass=ModelBase):
         used_column_names = []
         errors = []
 
+        global_table_names_registry = set()
+
         for f in cls._meta.local_fields:
             _, column_name = f.get_attname_column()
 
@@ -1446,6 +1448,21 @@ class Model(metaclass=ModelBase):
             else:
                 used_column_names.append(column_name)
 
+            # Check for global table name clashes
+            table_name = f.model._meta.db_table
+            if table_name in global_table_names_registry:
+                errors.append(
+                    checks.Error(
+                        "The table name '%s' is used by multiple models: %s, %s." % (
+                            table_name, cls._meta.label, f.model._meta.label
+                        ),
+                        obj=cls,
+                        id='models.E028'
+                    )
+                )
+            else:
+                global_table_names_registry.add(table_name)
+
         return errors
 
     @classmethod
2024-07-03 19:27:31,654 - INFO - Eval script for django__django-11630 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_193324/model_name_managed_by_server/django__django-11630/patch.diff, now applying to container...
2024-07-03 19:35:38,926 - INFO - Test output for django__django-11630 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_193324/model_name_managed_by_server/django__django-11630/test_output.txt
2024-07-03 19:35:39,051 - INFO - Git diff after:
diff --git a/django/db/models/base.py b/django/db/models/base.py
index 18ee0b4911..4dedf73d59 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -1429,6 +1429,8 @@ class Model(metaclass=ModelBase):
         used_column_names = []
         errors = []
 
+        global_table_names_registry = set()
+
         for f in cls._meta.local_fields:
             _, column_name = f.get_attname_column()
 
@@ -1446,6 +1448,21 @@ class Model(metaclass=ModelBase):
             else:
                 used_column_names.append(column_name)
 
+            # Check for global table name clashes
+            table_name = f.model._meta.db_table
+            if table_name in global_table_names_registry:
+                errors.append(
+                    checks.Error(
+                        "The table name '%s' is used by multiple models: %s, %s." % (
+                            table_name, cls._meta.label, f.model._meta.label
+                        ),
+                        obj=cls,
+                        id='models.E028'
+                    )
+                )
+            else:
+                global_table_names_registry.add(table_name)
+
         return errors
 
     @classmethod
2024-07-03 19:35:39,051 - INFO - Grading answer for django__django-11630...
2024-07-03 19:35:39,055 - INFO - report: {'django__django-11630': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_collision_across_apps_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_collision_in_same_app_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests)']}, 'PASS_TO_PASS': {'success': [], 'failure': ['test_collision_abstract_model (check_framework.test_model_checks.IndexNameTests)', 'test_collision_across_apps (check_framework.test_model_checks.IndexNameTests)', 'test_collision_in_different_models (check_framework.test_model_checks.IndexNameTests)', 'test_collision_in_same_model (check_framework.test_model_checks.IndexNameTests)', 'test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.IndexNameTests)', 'test_no_collision_across_apps_interpolation (check_framework.test_model_checks.IndexNameTests)', 'test_collision_abstract_model (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_across_apps (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_in_different_models (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_in_same_model (check_framework.test_model_checks.ConstraintNameTests)', 'test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.ConstraintNameTests)', 'test_no_collision_across_apps_interpolation (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_across_apps (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_collision_in_same_app (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_no_collision_for_proxy_models (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_no_collision_for_unmanaged_models (check_framework.test_model_checks.DuplicateDBTableTests)']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-11630: resolved: False
2024-07-03 19:35:39,055 - INFO - Attempting to stop container sweb.eval.django__django-11630.evaluation_193324...
2024-07-03 19:35:41,929 - INFO - Attempting to remove container sweb.eval.django__django-11630.evaluation_193324...
2024-07-03 19:35:42,380 - INFO - Container sweb.eval.django__django-11630.evaluation_193324 removed.
