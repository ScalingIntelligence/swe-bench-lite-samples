2024-07-03 20:37:22,932 - INFO - Environment image sweb.env.x86_64.2baaea72acc974f6c02079:latest found for django__django-11630
Building instance image sweb.eval.x86_64.django__django-11630:latest for django__django-11630
2024-07-03 20:37:22,942 - INFO - Image sweb.eval.x86_64.django__django-11630:latest already exists, skipping build.
2024-07-03 20:37:22,943 - INFO - Creating container for django__django-11630...
2024-07-03 20:37:23,975 - INFO - Container for django__django-11630 created: e7b7bbab4dac43c1fb50fb48002b68de37c3a61bd4e7b7c76b790b1f0cfa106e
2024-07-03 20:38:49,311 - INFO - Container for django__django-11630 started: e7b7bbab4dac43c1fb50fb48002b68de37c3a61bd4e7b7c76b790b1f0cfa106e
2024-07-03 20:38:49,313 - INFO - Intermediate patch for django__django-11630 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_199319/model_name_managed_by_server/django__django-11630/patch.diff, now applying to container...
2024-07-03 20:38:49,716 - INFO - >>>>> Applied Patch:
Checking patch django/db/models/base.py...
Applied patch django/db/models/base.py cleanly.

2024-07-03 20:38:51,010 - INFO - Git diff before:
diff --git a/django/db/models/base.py b/django/db/models/base.py
index 18ee0b4911..dbff4ec906 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -143,6 +143,19 @@ class ModelBase(type):
                 if not hasattr(meta, 'get_latest_by'):
                     new_class._meta.get_latest_by = base_meta.get_latest_by
 
+        # Check for and raise a more informative error if models in different apps share the same `db_table` name.
+        for parent in parents:
+            if hasattr(parent, '_meta') and parent._meta.app_label != new_class._meta.app_label and parent._meta.db_table == new_class._meta.db_table:
+                raise RuntimeError(
+                    "db_table '%s' is used by multiple models: %s.%s, %s.%s. Assign unique `db_table` names across different apps." % (
+                        new_class._meta.db_table,
+                        parent._meta.app_label,
+                        parent._meta.model_name,
+                        new_class._meta.app_label,
+                        new_class._meta.model_name
+                    )
+                )
+
         is_proxy = new_class._meta.proxy
 
         # If the model is a proxy, ensure that the base class
2024-07-03 20:38:51,015 - INFO - Eval script for django__django-11630 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_199319/model_name_managed_by_server/django__django-11630/patch.diff, now applying to container...
2024-07-03 20:40:55,428 - INFO - Test output for django__django-11630 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_199319/model_name_managed_by_server/django__django-11630/test_output.txt
2024-07-03 20:40:55,507 - INFO - Git diff after:
diff --git a/django/db/models/base.py b/django/db/models/base.py
index 18ee0b4911..dbff4ec906 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -143,6 +143,19 @@ class ModelBase(type):
                 if not hasattr(meta, 'get_latest_by'):
                     new_class._meta.get_latest_by = base_meta.get_latest_by
 
+        # Check for and raise a more informative error if models in different apps share the same `db_table` name.
+        for parent in parents:
+            if hasattr(parent, '_meta') and parent._meta.app_label != new_class._meta.app_label and parent._meta.db_table == new_class._meta.db_table:
+                raise RuntimeError(
+                    "db_table '%s' is used by multiple models: %s.%s, %s.%s. Assign unique `db_table` names across different apps." % (
+                        new_class._meta.db_table,
+                        parent._meta.app_label,
+                        parent._meta.model_name,
+                        new_class._meta.app_label,
+                        new_class._meta.model_name
+                    )
+                )
+
         is_proxy = new_class._meta.proxy
 
         # If the model is a proxy, ensure that the base class
2024-07-03 20:40:55,507 - INFO - Grading answer for django__django-11630...
2024-07-03 20:40:55,510 - INFO - report: {'django__django-11630': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_collision_across_apps_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_collision_in_same_app_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests)']}, 'PASS_TO_PASS': {'success': ['test_collision_abstract_model (check_framework.test_model_checks.IndexNameTests)', 'test_collision_across_apps (check_framework.test_model_checks.IndexNameTests)', 'test_collision_in_different_models (check_framework.test_model_checks.IndexNameTests)', 'test_collision_in_same_model (check_framework.test_model_checks.IndexNameTests)', 'test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.IndexNameTests)', 'test_no_collision_across_apps_interpolation (check_framework.test_model_checks.IndexNameTests)', 'test_collision_abstract_model (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_across_apps (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_in_different_models (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_in_same_model (check_framework.test_model_checks.ConstraintNameTests)', 'test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.ConstraintNameTests)', 'test_no_collision_across_apps_interpolation (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_across_apps (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_collision_in_same_app (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_no_collision_for_proxy_models (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_no_collision_for_unmanaged_models (check_framework.test_model_checks.DuplicateDBTableTests)'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-11630: resolved: False
2024-07-03 20:40:55,510 - INFO - Attempting to stop container sweb.eval.django__django-11630.evaluation_199319...
2024-07-03 20:40:59,484 - INFO - Attempting to remove container sweb.eval.django__django-11630.evaluation_199319...
2024-07-03 20:41:00,438 - INFO - Container sweb.eval.django__django-11630.evaluation_199319 removed.
