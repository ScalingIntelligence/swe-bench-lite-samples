2024-07-03 19:46:39,120 - INFO - Environment image sweb.env.x86_64.2baaea72acc974f6c02079:latest found for django__django-11630
Building instance image sweb.eval.x86_64.django__django-11630:latest for django__django-11630
2024-07-03 19:46:39,121 - INFO - Image sweb.eval.x86_64.django__django-11630:latest already exists, skipping build.
2024-07-03 19:46:39,121 - INFO - Creating container for django__django-11630...
2024-07-03 19:46:40,150 - INFO - Container for django__django-11630 created: 9a7854612ee62aabd6276234f3a806739e16896787220eaa9db0d102c440bcc6
2024-07-03 19:48:21,428 - INFO - Container for django__django-11630 started: 9a7854612ee62aabd6276234f3a806739e16896787220eaa9db0d102c440bcc6
2024-07-03 19:48:21,428 - INFO - Intermediate patch for django__django-11630 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_194904/model_name_managed_by_server/django__django-11630/patch.diff, now applying to container...
2024-07-03 19:48:21,783 - INFO - >>>>> Applied Patch:
Checking patch django/core/checks/model_checks.py...
Applied patch django/core/checks/model_checks.py cleanly.

2024-07-03 19:48:23,797 - INFO - Git diff before:
diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py
index 5c2266ca1d..6cf2ae8b9b 100644
--- a/django/core/checks/model_checks.py
+++ b/django/core/checks/model_checks.py
@@ -37,14 +37,20 @@ def check_all_models(app_configs=None, **kwargs):
             constraints[model_constraint.name].append(model._meta.label)
     for db_table, model_labels in db_table_models.items():
         if len(model_labels) != 1:
-            errors.append(
-                Error(
-                    "db_table '%s' is used by multiple models: %s."
-                    % (db_table, ', '.join(db_table_models[db_table])),
-                    obj=db_table,
-                    id='models.E028',
-                )
-            )
+            model_databases = defaultdict(list)
+            for model_label in model_labels:
+                model = apps.get_model(model_label)
+                model_databases[model._meta.database].append(model_label)
+            for database, db_model_labels in model_databases.items():
+                if len(db_model_labels) != 1:
+                    errors.append(
+                        Error(
+                            "db_table '%s' is used by multiple models on the same database: %s."
+                            % (db_table, ', '.join(db_model_labels)),
+                            obj=db_table,
+                            id='models.E028'
+                        )
+                    )
     for index_name, model_labels in indexes.items():
         if len(model_labels) > 1:
             model_labels = set(model_labels)
2024-07-03 19:48:23,810 - INFO - Eval script for django__django-11630 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_194904/model_name_managed_by_server/django__django-11630/patch.diff, now applying to container...
2024-07-03 19:50:16,141 - INFO - Test output for django__django-11630 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_194904/model_name_managed_by_server/django__django-11630/test_output.txt
2024-07-03 19:50:16,260 - INFO - Git diff after:
diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py
index 5c2266ca1d..6cf2ae8b9b 100644
--- a/django/core/checks/model_checks.py
+++ b/django/core/checks/model_checks.py
@@ -37,14 +37,20 @@ def check_all_models(app_configs=None, **kwargs):
             constraints[model_constraint.name].append(model._meta.label)
     for db_table, model_labels in db_table_models.items():
         if len(model_labels) != 1:
-            errors.append(
-                Error(
-                    "db_table '%s' is used by multiple models: %s."
-                    % (db_table, ', '.join(db_table_models[db_table])),
-                    obj=db_table,
-                    id='models.E028',
-                )
-            )
+            model_databases = defaultdict(list)
+            for model_label in model_labels:
+                model = apps.get_model(model_label)
+                model_databases[model._meta.database].append(model_label)
+            for database, db_model_labels in model_databases.items():
+                if len(db_model_labels) != 1:
+                    errors.append(
+                        Error(
+                            "db_table '%s' is used by multiple models on the same database: %s."
+                            % (db_table, ', '.join(db_model_labels)),
+                            obj=db_table,
+                            id='models.E028'
+                        )
+                    )
     for index_name, model_labels in indexes.items():
         if len(model_labels) > 1:
             model_labels = set(model_labels)
2024-07-03 19:50:16,260 - INFO - Grading answer for django__django-11630...
2024-07-03 19:50:16,262 - INFO - report: {'django__django-11630': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_collision_across_apps_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_collision_in_same_app_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests)']}, 'PASS_TO_PASS': {'success': ['test_collision_abstract_model (check_framework.test_model_checks.IndexNameTests)', 'test_collision_across_apps (check_framework.test_model_checks.IndexNameTests)', 'test_collision_in_different_models (check_framework.test_model_checks.IndexNameTests)', 'test_collision_in_same_model (check_framework.test_model_checks.IndexNameTests)', 'test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.IndexNameTests)', 'test_no_collision_across_apps_interpolation (check_framework.test_model_checks.IndexNameTests)', 'test_collision_abstract_model (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_across_apps (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_in_different_models (check_framework.test_model_checks.ConstraintNameTests)', 'test_collision_in_same_model (check_framework.test_model_checks.ConstraintNameTests)', 'test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.ConstraintNameTests)', 'test_no_collision_across_apps_interpolation (check_framework.test_model_checks.ConstraintNameTests)', 'test_no_collision_for_proxy_models (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_no_collision_for_unmanaged_models (check_framework.test_model_checks.DuplicateDBTableTests)'], 'failure': ['test_collision_across_apps (check_framework.test_model_checks.DuplicateDBTableTests)', 'test_collision_in_same_app (check_framework.test_model_checks.DuplicateDBTableTests)']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-11630: resolved: False
2024-07-03 19:50:16,262 - INFO - Attempting to stop container sweb.eval.django__django-11630.evaluation_194904...
2024-07-03 19:50:20,564 - INFO - Attempting to remove container sweb.eval.django__django-11630.evaluation_194904...
2024-07-03 19:50:21,408 - INFO - Container sweb.eval.django__django-11630.evaluation_194904 removed.
