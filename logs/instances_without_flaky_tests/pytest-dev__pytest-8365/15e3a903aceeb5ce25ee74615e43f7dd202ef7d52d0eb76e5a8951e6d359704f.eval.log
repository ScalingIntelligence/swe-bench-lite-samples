2024-07-03 11:47:13,610 - INFO - Environment image sweb.env.x86_64.8f1f7b974f0c57c7aeba39:latest found for pytest-dev__pytest-8365
Building instance image sweb.eval.x86_64.pytest-dev__pytest-8365:latest for pytest-dev__pytest-8365
2024-07-03 11:47:13,612 - INFO - Image sweb.eval.x86_64.pytest-dev__pytest-8365:latest already exists, skipping build.
2024-07-03 11:47:13,613 - INFO - Creating container for pytest-dev__pytest-8365...
2024-07-03 11:47:17,090 - INFO - Container for pytest-dev__pytest-8365 created: b4112086dfe715d554db2732689096e89054c6217517cf1399e66e203d4974c5
2024-07-03 11:47:19,349 - INFO - Container for pytest-dev__pytest-8365 started: b4112086dfe715d554db2732689096e89054c6217517cf1399e66e203d4974c5
2024-07-03 11:47:19,350 - INFO - Intermediate patch for pytest-dev__pytest-8365 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_156944/model_name_managed_by_server/pytest-dev__pytest-8365/patch.diff, now applying to container...
2024-07-03 11:47:19,629 - INFO - >>>>> Applied Patch:
Checking patch src/_pytest/tmpdir.py...
Applied patch src/_pytest/tmpdir.py cleanly.

2024-07-03 11:47:19,836 - INFO - Git diff before:
diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py
index 29c7e19d7..87608fa1e 100644
--- a/src/_pytest/tmpdir.py
+++ b/src/_pytest/tmpdir.py
@@ -111,7 +111,7 @@ class TempPathFactory:
         else:
             from_env = os.environ.get("PYTEST_DEBUG_TEMPROOT")
             temproot = Path(from_env or tempfile.gettempdir()).resolve()
-            user = get_user() or "unknown"
+            user = sanitize_username(get_user()) or "unknown"
             # use a sub-directory in the temproot to speed-up
             # make_numbered_dir() call
             rootdir = temproot.joinpath(f"pytest-of-{user}")
@@ -124,6 +124,14 @@ class TempPathFactory:
         self._trace("new basetemp", t)
         return t
 
+def sanitize_username(username: str) -> str:
+    """Sanitizes the username by removing illegal characters for directory names."""
+    # Define a regex pattern for valid directory name characters
+    valid_chars_pattern = r'[^a-zA-Z0-9._-]'
+    # Replace invalid characters with an underscore
+    sanitized_username = re.sub(valid_chars_pattern, '_', username)
+    return sanitized_username
+
 
 @final
 @attr.s(init=False)
2024-07-03 11:47:19,851 - INFO - Eval script for pytest-dev__pytest-8365 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_156944/model_name_managed_by_server/pytest-dev__pytest-8365/patch.diff, now applying to container...
2024-07-03 11:47:30,765 - INFO - Test output for pytest-dev__pytest-8365 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_156944/model_name_managed_by_server/pytest-dev__pytest-8365/test_output.txt
2024-07-03 11:47:30,804 - INFO - Git diff after:
diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py
index 29c7e19d7..87608fa1e 100644
--- a/src/_pytest/tmpdir.py
+++ b/src/_pytest/tmpdir.py
@@ -111,7 +111,7 @@ class TempPathFactory:
         else:
             from_env = os.environ.get("PYTEST_DEBUG_TEMPROOT")
             temproot = Path(from_env or tempfile.gettempdir()).resolve()
-            user = get_user() or "unknown"
+            user = sanitize_username(get_user()) or "unknown"
             # use a sub-directory in the temproot to speed-up
             # make_numbered_dir() call
             rootdir = temproot.joinpath(f"pytest-of-{user}")
@@ -124,6 +124,14 @@ class TempPathFactory:
         self._trace("new basetemp", t)
         return t
 
+def sanitize_username(username: str) -> str:
+    """Sanitizes the username by removing illegal characters for directory names."""
+    # Define a regex pattern for valid directory name characters
+    valid_chars_pattern = r'[^a-zA-Z0-9._-]'
+    # Replace invalid characters with an underscore
+    sanitized_username = re.sub(valid_chars_pattern, '_', username)
+    return sanitized_username
+
 
 @final
 @attr.s(init=False)
2024-07-03 11:47:30,804 - INFO - Grading answer for pytest-dev__pytest-8365...
2024-07-03 11:47:30,807 - INFO - report: {'pytest-dev__pytest-8365': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['testing/test_tmpdir.py::test_tmp_path_factory_handles_invalid_dir_characters']}, 'PASS_TO_PASS': {'success': ['testing/test_tmpdir.py::TestTempdirHandler::test_mktemp', 'testing/test_tmpdir.py::TestTempdirHandler::test_tmppath_relative_basetemp_absolute', 'testing/test_tmpdir.py::test_get_user_uid_not_found', 'testing/test_tmpdir.py::TestNumberedDir::test_make', 'testing/test_tmpdir.py::TestNumberedDir::test_cleanup_lock_create', 'testing/test_tmpdir.py::TestNumberedDir::test_lock_register_cleanup_removal', 'testing/test_tmpdir.py::TestNumberedDir::test_cleanup_keep', 'testing/test_tmpdir.py::TestNumberedDir::test_cleanup_locked', 'testing/test_tmpdir.py::TestNumberedDir::test_cleanup_ignores_symlink', 'testing/test_tmpdir.py::TestNumberedDir::test_removal_accepts_lock', 'testing/test_tmpdir.py::TestRmRf::test_rm_rf', 'testing/test_tmpdir.py::TestRmRf::test_rm_rf_with_read_only_file', 'testing/test_tmpdir.py::TestRmRf::test_rm_rf_with_read_only_directory', 'testing/test_tmpdir.py::TestRmRf::test_on_rm_rf_error', 'testing/test_tmpdir.py::test_tmpdir_equals_tmp_path', 'testing/test_tmpdir.py::test_tmpdir_fixture', 'testing/test_tmpdir.py::TestConfigTmpdir::test_getbasetemp_custom_removes_old', 'testing/test_tmpdir.py::test_mktemp[mypath-True]', 'testing/test_tmpdir.py::test_mktemp[/mypath1-False]', 'testing/test_tmpdir.py::test_mktemp[./mypath1-True]', 'testing/test_tmpdir.py::test_mktemp[../mypath3-False]', 'testing/test_tmpdir.py::test_mktemp[../../mypath4-False]', 'testing/test_tmpdir.py::test_mktemp[mypath5/..-False]', 'testing/test_tmpdir.py::test_mktemp[mypath6/../mypath6-True]', 'testing/test_tmpdir.py::test_mktemp[mypath7/../mypath7/..-False]', 'testing/test_tmpdir.py::test_tmpdir_always_is_realpath', 'testing/test_tmpdir.py::test_tmp_path_always_is_realpath', 'testing/test_tmpdir.py::test_tmpdir_too_long_on_parametrization', 'testing/test_tmpdir.py::test_tmpdir_factory', 'testing/test_tmpdir.py::test_tmpdir_fallback_tox_env', 'testing/test_tmpdir.py::test_basetemp_with_read_only_files'], 'failure': ['testing/test_tmpdir.py::test_tmpdir_fallback_uid_not_found']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for pytest-dev__pytest-8365: resolved: False
2024-07-03 11:47:30,810 - INFO - Attempting to stop container sweb.eval.pytest-dev__pytest-8365.evaluation_156944...
2024-07-03 11:47:36,677 - INFO - Attempting to remove container sweb.eval.pytest-dev__pytest-8365.evaluation_156944...
2024-07-03 11:47:36,942 - INFO - Container sweb.eval.pytest-dev__pytest-8365.evaluation_156944 removed.
