2024-07-03 03:14:39,903 - INFO - Environment image sweb.env.x86_64.aa92880033da20ca313928:latest found for scikit-learn__scikit-learn-13584
Building instance image sweb.eval.x86_64.scikit-learn__scikit-learn-13584:latest for scikit-learn__scikit-learn-13584
2024-07-03 03:14:39,904 - INFO - Image sweb.eval.x86_64.scikit-learn__scikit-learn-13584:latest already exists, skipping build.
2024-07-03 03:14:39,904 - INFO - Creating container for scikit-learn__scikit-learn-13584...
2024-07-03 03:14:40,372 - INFO - Container for scikit-learn__scikit-learn-13584 created: aa71d9783358ea3f84a000eec8974b3cde5f7d9db5aa7972d8dbe7b992cfb1af
2024-07-03 03:14:40,499 - INFO - Container for scikit-learn__scikit-learn-13584 started: aa71d9783358ea3f84a000eec8974b3cde5f7d9db5aa7972d8dbe7b992cfb1af
2024-07-03 03:14:40,499 - INFO - Intermediate patch for scikit-learn__scikit-learn-13584 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_139254/model_name_managed_by_server/scikit-learn__scikit-learn-13584/patch.diff, now applying to container...
2024-07-03 03:14:40,642 - INFO - >>>>> Applied Patch:
Checking patch sklearn/utils/_pprint.py...
Applied patch sklearn/utils/_pprint.py cleanly.

2024-07-03 03:14:40,874 - INFO - Git diff before:
diff --git a/sklearn/utils/_pprint.py b/sklearn/utils/_pprint.py
index b8686dba5..b65d54ba4 100644
--- a/sklearn/utils/_pprint.py
+++ b/sklearn/utils/_pprint.py
@@ -330,15 +330,46 @@ class _EstimatorPrettyPrinter(pprint.PrettyPrinter):
 
 
 def _safe_repr(object, context, maxlevels, level, changed_only=False):
-    """Same as the builtin _safe_repr, with added support for Estimator
-    objects."""
-    typ = type(object)
-
-    if typ in pprint._builtin_scalars:
-        return repr(object), True, False
-
-    r = getattr(typ, "__repr__", None)
-    if issubclass(typ, dict) and r is dict.__repr__:
+if issubclass(typ, BaseEstimator):
+    objid = id(object)
+    if maxlevels and level >= maxlevels:
+        return "{...}", False, objid in context
+    if objid in context:
+        return pprint._recursion(object), False, True
+context[objid] = 1
+readable = True
+recursive = False
+if changed_only:
+    params = _changed_params(object)
+else:
+    params = object.get_params(deep=False)
+components = []
+append = components.append
+level += 1
+saferepr = _safe_repr
+items = sorted(params.items(), key=pprint._safe_tuple)
+for k, v in items:
+    if isinstance(v, np.ndarray) and v.ndim > 0:
+        if v.size > 1:
+            vrepr = 'array([' + ', '.join(
+                [saferepr(elem, context, maxlevels, level, changed_only=changed_only)[0] for elem in v]) + '])'
+        else:
+            vrepr = 'array({})'.format(saferepr(v, context, maxlevels, level, changed_only=changed_only)[0])
+        if np.issubdtype(v.dtype, np.floating):
+            vrepr += ', dtype=float64'
+        elif np.issubdtype(v.dtype, np.complexfloating):
+            vrepr += ', dtype=complex128'
+        elif np.issubdtype(v.dtype, np.integer):
+            vrepr += ', dtype=int64'
+        elif np.issubdtype(v.dtype, np.bool_):
+            vrepr += ', dtype=bool'
+    else:
+        vrepr, _, _ = saferepr(v, context, maxlevels, level, changed_only=changed_only)
+    append("%s=%s" % (k.strip("'"), vrepr))
+del context[objid]
+return ("%s(%s)" % (typ.__name__, ", ".join(components)), readable, recursive)
+
+if issubclass(typ, dict) and r is dict.__repr__:
         if not object:
             return "{}", True, False
         objid = id(object)
2024-07-03 03:14:40,874 - INFO - Eval script for scikit-learn__scikit-learn-13584 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_139254/model_name_managed_by_server/scikit-learn__scikit-learn-13584/patch.diff, now applying to container...
2024-07-03 03:14:44,197 - INFO - Test output for scikit-learn__scikit-learn-13584 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_139254/model_name_managed_by_server/scikit-learn__scikit-learn-13584/test_output.txt
2024-07-03 03:14:44,236 - INFO - Git diff after:
diff --git a/sklearn/utils/_pprint.py b/sklearn/utils/_pprint.py
index b8686dba5..b65d54ba4 100644
--- a/sklearn/utils/_pprint.py
+++ b/sklearn/utils/_pprint.py
@@ -330,15 +330,46 @@ class _EstimatorPrettyPrinter(pprint.PrettyPrinter):
 
 
 def _safe_repr(object, context, maxlevels, level, changed_only=False):
-    """Same as the builtin _safe_repr, with added support for Estimator
-    objects."""
-    typ = type(object)
-
-    if typ in pprint._builtin_scalars:
-        return repr(object), True, False
-
-    r = getattr(typ, "__repr__", None)
-    if issubclass(typ, dict) and r is dict.__repr__:
+if issubclass(typ, BaseEstimator):
+    objid = id(object)
+    if maxlevels and level >= maxlevels:
+        return "{...}", False, objid in context
+    if objid in context:
+        return pprint._recursion(object), False, True
+context[objid] = 1
+readable = True
+recursive = False
+if changed_only:
+    params = _changed_params(object)
+else:
+    params = object.get_params(deep=False)
+components = []
+append = components.append
+level += 1
+saferepr = _safe_repr
+items = sorted(params.items(), key=pprint._safe_tuple)
+for k, v in items:
+    if isinstance(v, np.ndarray) and v.ndim > 0:
+        if v.size > 1:
+            vrepr = 'array([' + ', '.join(
+                [saferepr(elem, context, maxlevels, level, changed_only=changed_only)[0] for elem in v]) + '])'
+        else:
+            vrepr = 'array({})'.format(saferepr(v, context, maxlevels, level, changed_only=changed_only)[0])
+        if np.issubdtype(v.dtype, np.floating):
+            vrepr += ', dtype=float64'
+        elif np.issubdtype(v.dtype, np.complexfloating):
+            vrepr += ', dtype=complex128'
+        elif np.issubdtype(v.dtype, np.integer):
+            vrepr += ', dtype=int64'
+        elif np.issubdtype(v.dtype, np.bool_):
+            vrepr += ', dtype=bool'
+    else:
+        vrepr, _, _ = saferepr(v, context, maxlevels, level, changed_only=changed_only)
+    append("%s=%s" % (k.strip("'"), vrepr))
+del context[objid]
+return ("%s(%s)" % (typ.__name__, ", ".join(components)), readable, recursive)
+
+if issubclass(typ, dict) and r is dict.__repr__:
         if not object:
             return "{}", True, False
         objid = id(object)
2024-07-03 03:14:44,236 - INFO - Grading answer for scikit-learn__scikit-learn-13584...
2024-07-03 03:14:44,239 - INFO - report: {'scikit-learn__scikit-learn-13584': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['sklearn/utils/tests/test_pprint.py::test_changed_only', 'sklearn/utils/tests/test_pprint.py::test_pipeline', 'sklearn/utils/tests/test_pprint.py::test_deeply_nested', 'sklearn/utils/tests/test_pprint.py::test_gridsearch', 'sklearn/utils/tests/test_pprint.py::test_gridsearch_pipeline', 'sklearn/utils/tests/test_pprint.py::test_n_max_elements_to_show']}, 'PASS_TO_PASS': {'success': [], 'failure': ['sklearn/utils/tests/test_pprint.py::test_basic', 'sklearn/utils/tests/test_pprint.py::test_length_constraint', 'sklearn/utils/tests/test_pprint.py::test_builtin_prettyprinter']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for scikit-learn__scikit-learn-13584: resolved: False
2024-07-03 03:14:44,239 - INFO - Attempting to stop container sweb.eval.scikit-learn__scikit-learn-13584.evaluation_139254...
2024-07-03 03:14:46,383 - INFO - Attempting to remove container sweb.eval.scikit-learn__scikit-learn-13584.evaluation_139254...
2024-07-03 03:14:46,406 - INFO - Container sweb.eval.scikit-learn__scikit-learn-13584.evaluation_139254 removed.
