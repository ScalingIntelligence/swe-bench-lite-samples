2024-07-03 04:17:24,090 - INFO - Environment image sweb.env.x86_64.c795f4b88616b8462021ed:latest found for sympy__sympy-22714
Building instance image sweb.eval.x86_64.sympy__sympy-22714:latest for sympy__sympy-22714
2024-07-03 04:17:24,092 - INFO - Image sweb.eval.x86_64.sympy__sympy-22714:latest already exists, skipping build.
2024-07-03 04:17:24,092 - INFO - Creating container for sympy__sympy-22714...
2024-07-03 04:17:24,599 - INFO - Container for sympy__sympy-22714 created: d31fe6df0460c2ec231838a36da32383a49225d3ea59748feb1ee97084022298
2024-07-03 04:17:24,733 - INFO - Container for sympy__sympy-22714 started: d31fe6df0460c2ec231838a36da32383a49225d3ea59748feb1ee97084022298
2024-07-03 04:17:24,733 - INFO - Intermediate patch for sympy__sympy-22714 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_143257/model_name_managed_by_server/sympy__sympy-22714/patch.diff, now applying to container...
2024-07-03 04:17:24,879 - INFO - >>>>> Applied Patch:
Checking patch sympy/core/sympify.py...
Checking patch sympy/geometry/point.py...
Applied patch sympy/core/sympify.py cleanly.
Applied patch sympy/geometry/point.py cleanly.

2024-07-03 04:17:25,271 - INFO - Git diff before:
diff --git a/sympy/core/sympify.py b/sympy/core/sympify.py
index 591e784133..ea6395d3c3 100644
--- a/sympy/core/sympify.py
+++ b/sympy/core/sympify.py
@@ -204,19 +204,6 @@ def sympify(a, locals=None, convert_xor=True, strict=False, rational=False,
     ...
     SympifyError: SympifyError: None
 
-    Evaluation
-    ----------
-
-    If the option ``evaluate`` is set to ``False``, then arithmetic and
-    operators will be converted into their SymPy equivalents and the
-    ``evaluate=False`` option will be added. Nested ``Add`` or ``Mul`` will
-    be denested first. This is done via an AST transformation that replaces
-    operators with their SymPy equivalents, so if an operand redefines any
-    of those operations, the redefined operators will not be used. If
-    argument a is not a string, the mathematical expression is evaluated
-    before being passed to sympify, so adding ``evaluate=False`` will still
-    return the evaluated result of expression.
-
     >>> sympify('2**2 / 3 + 5')
     19/3
     >>> sympify('2**2 / 3 + 5', evaluate=False)
@@ -226,7 +213,7 @@ def sympify(a, locals=None, convert_xor=True, strict=False, rational=False,
     >>> sympify('4/2+7', evaluate=False)
     4/2 + 7
     >>> sympify(4/2+7, evaluate=False)
-    9.00000000000000
+    9
 
     Extending
     ---------
diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py
index 73c20334d0..a7aed3058d 100644
--- a/sympy/geometry/point.py
+++ b/sympy/geometry/point.py
@@ -152,8 +152,9 @@ def __new__(cls, *args, **kwargs):
                         'warn' or 'ignore'.'''))
         if any(coords[dim:]):
             raise ValueError('Nonzero coordinates cannot be removed.')
-        if any(a.is_number and im(a) for a in coords):
-            raise ValueError('Imaginary coordinates are not permitted.')
+        if evaluate:
+            if any(a.is_number and im(a) for a in coords):
+                raise ValueError('Imaginary coordinates are not permitted.')
         if not all(isinstance(a, Expr) for a in coords):
             raise TypeError('Coordinates must be valid SymPy expressions.')
2024-07-03 04:17:25,271 - INFO - Eval script for sympy__sympy-22714 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_143257/model_name_managed_by_server/sympy__sympy-22714/patch.diff, now applying to container...
2024-07-03 04:17:33,900 - INFO - Test output for sympy__sympy-22714 written to /scratch/rse-swe-bench/unit_test_logs/evaluation_143257/model_name_managed_by_server/sympy__sympy-22714/test_output.txt
2024-07-03 04:17:33,949 - INFO - Git diff after:
diff --git a/sympy/core/sympify.py b/sympy/core/sympify.py
index 591e784133..ea6395d3c3 100644
--- a/sympy/core/sympify.py
+++ b/sympy/core/sympify.py
@@ -204,19 +204,6 @@ def sympify(a, locals=None, convert_xor=True, strict=False, rational=False,
     ...
     SympifyError: SympifyError: None
 
-    Evaluation
-    ----------
-
-    If the option ``evaluate`` is set to ``False``, then arithmetic and
-    operators will be converted into their SymPy equivalents and the
-    ``evaluate=False`` option will be added. Nested ``Add`` or ``Mul`` will
-    be denested first. This is done via an AST transformation that replaces
-    operators with their SymPy equivalents, so if an operand redefines any
-    of those operations, the redefined operators will not be used. If
-    argument a is not a string, the mathematical expression is evaluated
-    before being passed to sympify, so adding ``evaluate=False`` will still
-    return the evaluated result of expression.
-
     >>> sympify('2**2 / 3 + 5')
     19/3
     >>> sympify('2**2 / 3 + 5', evaluate=False)
@@ -226,7 +213,7 @@ def sympify(a, locals=None, convert_xor=True, strict=False, rational=False,
     >>> sympify('4/2+7', evaluate=False)
     4/2 + 7
     >>> sympify(4/2+7, evaluate=False)
-    9.00000000000000
+    9
 
     Extending
     ---------
diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py
index 73c20334d0..a7aed3058d 100644
--- a/sympy/geometry/point.py
+++ b/sympy/geometry/point.py
@@ -152,8 +152,9 @@ def __new__(cls, *args, **kwargs):
                         'warn' or 'ignore'.'''))
         if any(coords[dim:]):
             raise ValueError('Nonzero coordinates cannot be removed.')
-        if any(a.is_number and im(a) for a in coords):
-            raise ValueError('Imaginary coordinates are not permitted.')
+        if evaluate:
+            if any(a.is_number and im(a) for a in coords):
+                raise ValueError('Imaginary coordinates are not permitted.')
         if not all(isinstance(a, Expr) for a in coords):
             raise TypeError('Coordinates must be valid SymPy expressions.')
2024-07-03 04:17:33,949 - INFO - Grading answer for sympy__sympy-22714...
2024-07-03 04:17:33,950 - INFO - report: {'sympy__sympy-22714': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': True, 'tests_status': {'FAIL_TO_PASS': {'success': ['test_issue_22684'], 'failure': []}, 'PASS_TO_PASS': {'success': ['test_point', 'test_point3D', 'test_Point2D', 'test_issue_9214', 'test_issue_11617', 'test_transform', 'test_concyclic_doctest_bug', 'test_arguments', 'test_unit', 'test_dot', 'test__normalize_dimension'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for sympy__sympy-22714: resolved: True
2024-07-03 04:17:33,950 - INFO - Attempting to stop container sweb.eval.sympy__sympy-22714.evaluation_143257...
2024-07-03 04:17:36,046 - INFO - Attempting to remove container sweb.eval.sympy__sympy-22714.evaluation_143257...
2024-07-03 04:17:36,140 - INFO - Container sweb.eval.sympy__sympy-22714.evaluation_143257 removed.
